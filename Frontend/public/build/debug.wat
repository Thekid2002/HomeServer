(module
 (type $0 (func (param i32 i32)))
 (type $1 (func (param i32) (result i32)))
 (type $2 (func (param i32 i32) (result i32)))
 (type $3 (func (param i32 i32) (result f64)))
 (type $4 (func (param f64) (result f64)))
 (type $5 (func (param i32)))
 (type $6 (func (param i32 i32 i32 i32) (result i32)))
 (type $7 (func))
 (type $8 (func (param i32 i32 i32) (result i32)))
 (type $9 (func (param f64 f64) (result f64)))
 (type $10 (func (param i32 i32 i32)))
 (type $11 (func (param f64 f64 i32) (result f64)))
 (type $12 (func (param i32) (result f64)))
 (type $13 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $14 (func (param i32 i32 i32 i32)))
 (type $15 (func (param f64 i64) (result i32)))
 (type $16 (func (param i32 i32 i64) (result i32)))
 (type $17 (func (result i32)))
 (type $18 (func (param i32 i64 i32)))
 (type $19 (func (param i64 i32) (result i32)))
 (type $20 (func (param i32 i64 i32 i32)))
 (type $21 (func (param i32 f64)))
 (type $22 (func (param i32 i64 i32 i64 i32 i64 i32) (result i32)))
 (type $23 (func (param i32 f64) (result i32)))
 (type $24 (func (param f64 i32) (result i32)))
 (type $25 (func (param f64 i32) (result f64)))
 (type $26 (func (param i32 i32 i32 f64) (result i32)))
 (type $27 (func (param f64) (result i32)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "console.log" (func $~lib/bindings/dom/console.log (param i32)))
 (global $~lib/shared/runtime/Runtime.Stub i32 (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Minimal i32 (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Incremental i32 (i32.const 2))
 (global $~lib/native/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $~lib/math/rempio2_y0 (mut f64) (f64.const 0))
 (global $~lib/math/rempio2_y1 (mut f64) (f64.const 0))
 (global $~lib/math/res128_hi (mut i64) (i64.const 0))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.LEFT_PAREN i32 (i32.const 0))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.RIGHT_PAREN i32 (i32.const 1))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.LEFT_BRACE i32 (i32.const 2))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.RIGHT_BRACE i32 (i32.const 3))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.COMMA i32 (i32.const 4))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.DOT i32 (i32.const 5))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.MINUS i32 (i32.const 6))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.PLUS i32 (i32.const 7))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.SEMICOLON i32 (i32.const 8))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.SLASH i32 (i32.const 9))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.STAR i32 (i32.const 10))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.BANG i32 (i32.const 11))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.BANG_EQUAL i32 (i32.const 12))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.EQUAL i32 (i32.const 13))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.EQUAL_EQUAL i32 (i32.const 14))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.GREATER i32 (i32.const 15))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.GREATER_EQUAL i32 (i32.const 16))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.LESS i32 (i32.const 17))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.LESS_EQUAL i32 (i32.const 18))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.IDENTIFIER i32 (i32.const 19))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.STRING i32 (i32.const 20))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.NUMBER i32 (i32.const 21))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.AND i32 (i32.const 22))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.CLASS i32 (i32.const 23))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.ELSE i32 (i32.const 24))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.FALSE i32 (i32.const 25))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.FUN i32 (i32.const 26))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.FOR i32 (i32.const 27))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.IF i32 (i32.const 28))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.NIL i32 (i32.const 29))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.OR i32 (i32.const 30))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.PRINT i32 (i32.const 31))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.RETURN i32 (i32.const 32))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.SUPER i32 (i32.const 33))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.THIS i32 (i32.const 34))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.TRUE i32 (i32.const 35))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.VAR i32 (i32.const 36))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.WHILE i32 (i32.const 37))
 (global $Frontend/assembly/Lexer/TokenType/TokenType.EOF i32 (i32.const 38))
 (global $Frontend/assembly/Lexer/TokenType/TokenTypes i32 (i32.const 6592))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/native/ASC_LOW_MEMORY_LIMIT i32 (i32.const 0))
 (global $~lib/native/ASC_RUNTIME i32 (i32.const 2))
 (global $Frontend/assembly/Lexer/ReservedWords/ReservedWords (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $~lib/util/string/__fixmulShift (mut i64) (i64.const 0))
 (global $~lib/rt/__rtti_base i32 (i32.const 16608))
 (global $~lib/memory/__data_end i32 (i32.const 16788))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 49556))
 (global $~lib/memory/__heap_base i32 (i32.const 49556))
 (memory $0 1)
 (data $0 (i32.const 12) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00+\00\00\00\00\00\00\00\00\00\00\00")
 (data $1 (i32.const 44) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00-\00\00\00\00\00\00\00\00\00\00\00")
 (data $2 (i32.const 76) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00*\00\00\00\00\00\00\00\00\00\00\00")
 (data $3 (i32.const 108) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00/\00\00\00\00\00\00\00\00\00\00\00")
 (data $4 (i32.const 140) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00%\00\00\00\00\00\00\00\00\00\00\00")
 (data $5 (i32.const 172) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00l\00o\00g\00\00\00\00\00\00\00")
 (data $6 (i32.const 208) "\9f\de\e0\c3\f04\f7?\00\90\e6y\7f\cc\d7\bf\1f\e9,jx\13\f7?\00\00\r\c2\eeo\d7\bf\a0\b5\fa\08`\f2\f6?\00\e0Q\13\e3\13\d7\bf}\8c\13\1f\a6\d1\f6?\00x(8[\b8\d6\bf\d1\b4\c5\0bI\b1\f6?\00x\80\90U]\d6\bf\ba\0c/3G\91\f6?\00\00\18v\d0\02\d6\bf#B\"\18\9fq\f6?\00\90\90\86\ca\a8\d5\bf\d9\1e\a5\99OR\f6?\00P\03VCO\d5\bf\c4$\8f\aaV3\f6?\00@k\c37\f6\d4\bf\14\dc\9dk\b3\14\f6?\00P\a8\fd\a7\9d\d4\bfL\\\c6Rd\f6\f5?\00\a8\899\92E\d4\bfO,\91\b5g\d8\f5?\00\b8\b09\f4\ed\d3\bf\de\90[\cb\bc\ba\f5?\00p\8fD\ce\96\d3\bfx\1a\d9\f2a\9d\f5?\00\a0\bd\17\1e@\d3\bf\87VF\12V\80\f5?\00\80F\ef\e2\e9\d2\bf\d3k\e7\ce\97c\f5?\00\e008\1b\94\d2\bf\93\7f\a7\e2%G\f5?\00\88\da\8c\c5>\d2\bf\83E\06B\ff*\f5?\00\90\')\e1\e9\d1\bf\df\bd\b2\db\"\0f\f5?\00\f8H+m\95\d1\bf\d7\de4G\8f\f3\f4?\00\f8\b9\9agA\d1\bf@(\de\cfC\d8\f4?\00\98\ef\94\d0\ed\d0\bf\c8\a3x\c0>\bd\f4?\00\10\db\18\a5\9a\d0\bf\8a%\e0\c3\7f\a2\f4?\00\b8cR\e6G\d0\bf4\84\d4$\05\88\f4?\00\f0\86E\"\eb\cf\bf\0b-\19\1b\cem\f4?\00\b0\17uJG\cf\bfT\189\d3\d9S\f4?\000\10=D\a4\ce\bfZ\84\b4D\':\f4?\00\b0\e9D\r\02\ce\bf\fb\f8\15A\b5 \f4?\00\f0w)\a2`\cd\bf\b1\f4>\da\82\07\f4?\00\90\95\04\01\c0\cc\bf\8f\feW]\8f\ee\f3?\00\10\89V) \cc\bf\e9L\0b\a0\d9\d5\f3?\00\10\81\8d\17\81\cb\bf+\c1\10\c0`\bd\f3?\00\d0\d3\cc\c9\e2\ca\bf\b8\dau+$\a5\f3?\00\90\12.@E\ca\bf\02\d0\9f\cd\"\8d\f3?\00\f0\1dhw\a8\c9\bf\1cz\84\c5[u\f3?\000Him\0c\c9\bf\e26\adI\ce]\f3?\00\c0E\a6 q\c8\bf@\d4M\98yF\f3?\000\14\b4\8f\d6\c7\bf$\cb\ff\ce\\/\f3?\00pb<\b8<\c7\bfI\r\a1uw\18\f3?\00`7\9b\9a\a3\c6\bf\909>7\c8\01\f3?\00\a0\b7T1\0b\c6\bfA\f8\95\bbN\eb\f2?\000$v}s\c5\bf\d1\a9\19\02\n\d5\f2?\000\c2\8f{\dc\c4\bf*\fd\b7\a8\f9\be\f2?\00\00\d2Q,F\c4\bf\ab\1b\0cz\1c\a9\f2?\00\00\83\bc\8a\b0\c3\bf0\b5\14`r\93\f2?\00\00Ik\99\1b\c3\bf\f5\a1WW\fa}\f2?\00@\a4\90T\87\c2\bf\bf;\1d\9b\b3h\f2?\00\a0y\f8\b9\f3\c1\bf\bd\f5\8f\83\9dS\f2?\00\a0,%\c8`\c1\bf;\08\c9\aa\b7>\f2?\00 \f7W\7f\ce\c0\bf\b6@\a9+\01*\f2?\00\a0\feI\dc<\c0\bf2A\cc\96y\15\f2?\00\80K\bc\bdW\bf\bf\9b\fc\d2\1d \01\f2?\00@@\96\087\be\bf\0bHMI\f4\ec\f1?\00@\f9>\98\17\bd\bfie\8fR\f5\d8\f1?\00\a0\d8Ng\f9\bb\bf|~W\11#\c5\f1?\00`/ y\dc\ba\bf\e9&\cbt|\b1\f1?\00\80(\e7\c3\c0\b9\bf\b6\1a,\0c\01\9e\f1?\00\c0r\b3F\a6\b8\bf\bdp\b6{\b0\8a\f1?\00\00\ac\b3\01\8d\b7\bf\b6\bc\ef%\8aw\f1?\00\008E\f1t\b6\bf\da1L5\8dd\f1?\00\80\87m\0e^\b5\bf\dd_\'\90\b9Q\f1?\00\e0\a1\de\\H\b4\bfL\d22\a4\0e?\f1?\00\a0jM\d93\b3\bf\da\f9\10r\8b,\f1?\00`\c5\f8y \b2\bf1\b5\ec(0\1a\f1?\00 b\98F\0e\b1\bf\af4\84\da\fb\07\f1?\00\00\d2jl\fa\af\bf\b3kN\0f\ee\f5\f0?\00@wJ\8d\da\ad\bf\ce\9f*]\06\e4\f0?\00\00\85\e4\ec\bc\ab\bf!\a5,cD\d2\f0?\00\c0\12@\89\a1\a9\bf\1a\98\e2|\a7\c0\f0?\00\c0\023X\88\a7\bf\d16\c6\83/\af\f0?\00\80\d6g^q\a5\bf9\13\a0\98\db\9d\f0?\00\80eI\8a\\\a3\bf\df\e7R\af\ab\8c\f0?\00@\15d\e3I\a1\bf\fb(N/\9f{\f0?\00\80\eb\82\c0r\9e\bf\19\8f5\8c\b5j\f0?\00\80RR\f1U\9a\bf,\f9\ec\a5\eeY\f0?\00\80\81\cfb=\96\bf\90,\d1\cdII\f0?\00\00\aa\8c\fb(\92\bf\a9\ad\f0\c6\c68\f0?\00\00\f9 {1\8c\bf\a92y\13e(\f0?\00\00\aa]5\19\84\bfHs\ea\'$\18\f0?\00\00\ec\c2\03\12x\bf\95\b1\14\06\04\08\f0?\00\00$y\t\04`\bf\1a\fa&\f7\1f\e0\ef?\00\00\90\84\f3\efo?t\eaa\c2\1c\a1\ef?\00\00=5A\dc\87?.\99\81\b0\10c\ef?\00\80\c2\c4\a3\ce\93?\cd\ad\ee<\f6%\ef?\00\00\89\14\c1\9f\9b?\e7\13\91\03\c8\e9\ee?\00\00\11\ce\d8\b0\a1?\ab\b1\cbx\80\ae\ee?\00\c0\01\d0[\8a\a5?\9b\0c\9d\a2\1at\ee?\00\80\d8@\83\\\a9?\b5\99\n\83\91:\ee?\00\80W\efj\'\ad?V\9a`\t\e0\01\ee?\00\c0\98\e5\98u\b0?\98\bbw\e5\01\ca\ed?\00 \r\e3\f5S\b2?\03\91|\0b\f2\92\ed?\00\008\8b\dd.\b4?\ce\\\fbf\ac\\\ed?\00\c0W\87Y\06\b6?\9d\de^\aa,\'\ed?\00\00j5v\da\b7?\cd,k>n\f2\ec?\00`\1cNC\ab\b9?\02y\a7\a2m\be\ec?\00`\r\bb\c7x\bb?m\087m&\8b\ec?\00 \e72\13C\bd?\04X]\bd\94X\ec?\00`\deq1\n\bf?\8c\9f\bb3\b5&\ec?\00@\91+\15g\c0??\e7\ec\ee\83\f5\eb?\00\b0\92\82\85G\c1?\c1\96\dbu\fd\c4\eb?\000\ca\cdn&\c2?(J\86\0c\1e\95\eb?\00P\c5\a6\d7\03\c3?,>\ef\c5\e2e\eb?\00\103<\c3\df\c3?\8b\88\c9gH7\eb?\00\80zk6\ba\c4?J0\1d!K\t\eb?\00\f0\d1(9\93\c5?~\ef\f2\85\e8\db\ea?\00\f0\18$\cdj\c6?\a2=`1\1d\af\ea?\00\90f\ec\f8@\c7?\a7X\d3?\e6\82\ea?\00\f0\1a\f5\c0\15\c8?\8bs\t\ef@W\ea?\00\80\f6T)\e9\c8?\'K\ab\90*,\ea?\00@\f8\026\bb\c9?\d1\f2\93\13\a0\01\ea?\00\00,\1c\ed\8b\ca?\1b<\db$\9f\d7\e9?\00\d0\01\\Q[\cb?\90\b1\c7\05%\ae\e9?\00\c0\bc\ccg)\cc?/\ce\97\f2.\85\e9?\00`H\d55\f6\cc?uK\a4\ee\ba\\\e9?\00\c0F4\bd\c1\cd?8H\e7\9d\c64\e9?\00\e0\cf\b8\01\8c\ce?\e6Rg/O\r\e9?\00\90\17\c0\tU\cf?\9d\d7\ff\8eR\e6\e8?\00\b8\1f\12l\0e\d0?|\00\cc\9f\ce\bf\e8?\00\d0\93\0e\b8q\d0?\0e\c3\be\da\c0\99\e8?\00p\86\9ek\d4\d0?\fb\17#\aa\'t\e8?\00\d0K3\876\d1?\08\9a\b3\ac\00O\e8?\00H#g\r\98\d1?U>e\e8I*\e8?\00\80\cc\e0\ff\f8\d1?`\02\f4\95\01\06\e8?\00hc\d7_Y\d2?)\a3\e0c%\e2\e7?\00\a8\14\t0\b9\d2?\ad\b5\dcw\b3\be\e7?\00`C\10r\18\d3?\c2%\97g\aa\9b\e7?\00\18\ecm&w\d3?W\06\17\f2\07y\e7?\000\af\fbO\d5\d3?\0c\13\d6\db\caV\e7?\00\e0/\e3\ee2\d4?")
 (data $7 (i32.const 2256) "k\b6O\01\00\10\e6?<[B\91l\02~<\95\b4M\03\000\e6?A]\00H\ea\bf\8d<x\d4\94\r\00P\e6?\b7\a5\d6\86\a7\7f\8e<\adoN\07\00p\e6?L%Tk\ea\fca<\ae\0f\df\fe\ff\8f\e6?\fd\0eYL\'~|\bc\bc\c5c\07\00\b0\e6?\01\da\dcHh\c1\8a\bc\f6\c1\\\1e\00\d0\e6?\11\93I\9d\1c?\83<>\f6\05\eb\ff\ef\e6?S-\e2\1a\04\80~\bc\80\97\86\0e\00\10\e7?Ry\tqf\ff{<\12\e9g\fc\ff/\e7?$\87\bd&\e2\00\8c<j\11\81\df\ffO\e7?\d2\01\f1n\91\02n\bc\90\9cg\0f\00p\e7?t\9cT\cdq\fcg\bc5\c8~\fa\ff\8f\e7?\83\04\f5\9e\c1\be\81<\e6\c2 \fe\ff\af\e7?ed\cc)\17~p\bc\00\c9?\ed\ff\cf\e7?\1c\8b{\08r\80\80\bcv\1a&\e9\ff\ef\e7?\ae\f9\9dm(\c0\8d<\e8\a3\9c\04\00\10\e8?3L\e5Q\d2\7f\89<\8f,\93\17\000\e8?\81\f30\b6\e9\fe\8a\bc\9cs3\06\00P\e8?\bc5ek\bf\bf\89<\c6\89B \00p\e8?u{\11\f3e\bf\8b\bc\04y\f5\eb\ff\8f\e8?W\cb=\a2n\00\89\bc\df\04\bc\"\00\b0\e8?\nK\e08\df\00}\bc\8a\1b\0c\e5\ff\cf\e8?\05\9f\ffFq\00\88\bcC\8e\91\fc\ff\ef\e8?8pz\d0{\81\83<\c7_\fa\1e\00\10\e9?\03\b4\dfv\91>\89<\b9{F\13\000\e9?v\02\98KN\80\7f<o\07\ee\e6\ffO\e9?.b\ff\d9\f0~\8f\bc\d1\12<\de\ffo\e9?\ba8&\96\aa\82p\bc\r\8aE\f4\ff\8f\e9?\ef\a8d\91\1b\80\87\bc>.\98\dd\ff\af\e9?7\93Z\8a\e0@\87\bcf\fbI\ed\ff\cf\e9?\00\e0\9b\c1\08\ce?<Q\9c\f1 \00\f0\e9?\n[\88\'\aa?\8a\bc\06\b0E\11\00\10\ea?V\daX\99H\fft<\fa\f6\bb\07\000\ea?\18m+\8a\ab\be\8c<y\1d\97\10\00P\ea?0yx\dd\ca\fe\88<H.\f5\1d\00p\ea?\db\ab\d8=vA\8f\bcR3Y\1c\00\90\ea?\12v\c2\84\02\bf\8e\bcK>O*\00\b0\ea?_?\ff<\04\fdi\bc\d1\1e\ae\d7\ff\cf\ea?\b4p\90\12\e7>\82\bcx\04Q\ee\ff\ef\ea?\a3\de\0e\e0>\06j<[\re\db\ff\0f\eb?\b9\n\1f8\c8\06Z<W\ca\aa\fe\ff/\eb?\1d<#t\1e\01y\bc\dc\ba\95\d9\ffO\eb?\9f*\86h\10\ffy\bc\9ce\9e$\00p\eb?>O\86\d0E\ff\8a<@\16\87\f9\ff\8f\eb?\f9\c3\c2\96w\fe|<O\cb\04\d2\ff\af\eb?\c4+\f2\ee\'\ffc\bcE\\A\d2\ff\cf\eb?!\ea;\ee\b7\ffl\bc\df\tc\f8\ff\ef\eb?\\\0b.\97\03A\81\bcSv\b5\e1\ff\0f\ec?\19j\b7\94d\c1\8b<\e3W\fa\f1\ff/\ec?\ed\c60\8d\ef\fed\bc$\e4\bf\dc\ffO\ec?uG\ec\bch?\84\bc\f7\b9T\ed\ffo\ec?\ec\e0S\f0\a3~\84<\d5\8f\99\eb\ff\8f\ec?\f1\92\f9\8d\06\83s<\9a!%!\00\b0\ec?\04\0e\18d\8e\fdh\bc\9cF\94\dd\ff\cf\ec?r\ea\c7\1c\be~\8e<v\c4\fd\ea\ff\ef\ec?\fe\88\9f\ad9\be\8e<+\f8\9a\16\00\10\ed?qZ\b9\a8\91}u<\1d\f7\0f\r\000\ed?\da\c7pi\90\c1\89<\c4\0fy\ea\ffO\ed?\0c\feX\c57\0eX\bc\e5\87\dc.\00p\ed?D\0f\c1M\d6\80\7f\bc\aa\82\dc!\00\90\ed?\\\\\fd\94\8f|t\bc\83\02k\d8\ff\af\ed?~a!\c5\1d\7f\8c<9Gl)\00\d0\ed?S\b1\ff\b2\9e\01\88<\f5\90D\e5\ff\ef\ed?\89\ccR\c6\d2\00n<\94\f6\ab\cd\ff\0f\ee?\d2i- @\83\7f\bc\dd\c8R\db\ff/\ee?d\08\1b\ca\c1\00{<\ef\16B\f2\ffO\ee?Q\ab\94\b0\a8\ffr<\11^\8a\e8\ffo\ee?Y\be\ef\b1s\f6W\bc\r\ff\9e\11\00\90\ee?\01\c8\0b^\8d\80\84\bcD\17\a5\df\ff\af\ee?\b5 C\d5\06\00x<\a1\7f\12\1a\00\d0\ee?\92\\V`\f8\02P\bc\c4\bc\ba\07\00\f0\ee?\11\e65]D@\85\bc\02\8dz\f5\ff\0f\ef?\05\91\ef91\fbO\bc\c7\8a\e5\1e\000\ef?U\11s\f2\ac\81\8a<\944\82\f5\ffO\ef?C\c7\d7\d4A?\8a<kL\a9\fc\ffo\ef?ux\98\1c\f4\02b\bcA\c4\f9\e1\ff\8f\ef?K\e7w\f4\d1}w<~\e3\e0\d2\ff\af\ef?1\a3|\9a\19\01o\bc\9e\e4w\1c\00\d0\ef?\b1\ac\ceK\ee\81q<1\c3\e0\f7\ff\ef\ef?Z\87p\017\05n\bcn`e\f4\ff\0f\f0?\da\n\1cI\ad~\8a\bcXz\86\f3\ff/\f0?\e0\b2\fc\c3i\7f\97\bc\17\r\fc\fd\ffO\f0?[\94\cb4\fe\bf\97<\82M\cd\03\00p\f0?\cbV\e4\c0\83\00\82<\e8\cb\f2\f9\ff\8f\f0?\1au7\be\df\ffm\bce\da\0c\01\00\b0\f0?\eb&\e6\ae\7f?\91\bc8\d3\a4\01\00\d0\f0?\f7\9fHy\fa}\80<\fd\fd\da\fa\ff\ef\f0?\c0k\d6p\05\04w\bc\96\fd\ba\0b\00\10\f1?b\0bm\84\d4\80\8e<]\f4\e5\fa\ff/\f1?\ef6\fdd\fa\bf\9d<\d9\9a\d5\r\00P\f1?\aeP\12pw\00\9a<\9aU!\0f\00p\f1?\ee\de\e3\e2\f9\fd\8d<&T\'\fc\ff\8f\f1?sr;\dc0\00\91<Y<=\12\00\b0\f1?\88\01\03\80y\7f\99<\b7\9e)\f8\ff\cf\f1?g\8c\9f\ab2\f9e\bc\00\d4\8a\f4\ff\ef\f1?\eb[\a7\9d\bf\7f\93<\a4\86\8b\0c\00\10\f2?\"[\fd\91k\80\9f<\03C\85\03\000\f2?3\bf\9f\eb\c2\ff\93<\84\f6\bc\ff\ffO\f2?r..~\e7\01v<\d9!)\f5\ffo\f2?a\0c\7fv\bb\fc\7f<<:\93\14\00\90\f2?+A\02<\ca\02r\bc\13cU\14\00\b0\f2?\02\1f\f23\82\80\92\bc;R\fe\eb\ff\cf\f2?\f2\dcO8~\ff\88\bc\96\ad\b8\0b\00\f0\f2?\c5A0PQ\ff\85\bc\af\e2z\fb\ff\0f\f3?\9d(^\88q\00\81\bc\7f_\ac\fe\ff/\f3?\15\b7\b7?]\ff\91\bcVg\a6\0c\00P\f3?\bd\82\8b\"\82\7f\95<!\f7\fb\11\00p\f3?\cc\d5\r\c4\ba\00\80<\b9/Y\f9\ff\8f\f3?Q\a7\b2-\9d?\94\bcB\d2\dd\04\00\b0\f3?\e18vpk\7f\85<W\c9\b2\f5\ff\cf\f3?1\12\bf\10:\02z<\18\b4\b0\ea\ff\ef\f3?\b0R\b1fm\7f\98<\f4\af2\15\00\10\f4?$\85\19_7\f8g<)\8bG\17\000\f4?CQ\dcr\e6\01\83<c\b4\95\e7\ffO\f4?Z\89\b2\b8i\ff\89<\e0u\04\e8\ffo\f4?T\f2\c2\9b\b1\c0\95\bc\e7\c1o\ef\ff\8f\f4?r*:\f2\t@\9b<\04\a7\be\e5\ff\af\f4?E}\r\bf\b7\ff\94\bc\de\'\10\17\00\d0\f4?=j\dcqd\c0\99\bc\e2>\f0\0f\00\f0\f4?\1cS\85\0b\89\7f\97<\d1K\dc\12\00\10\f5?6\a4fqe\04`<z\'\05\16\000\f5?\t2#\ce\ce\bf\96\bcLp\db\ec\ffO\f5?\d7\a1\05\05r\02\89\bc\a9T_\ef\ffo\f5?\12d\c9\0e\e6\bf\9b<\12\10\e6\17\00\90\f5?\90\ef\af\81\c5~\88<\92>\c9\03\00\b0\f5?\c0\0c\bf\n\08A\9f\bc\bc\19I\1d\00\d0\f5?)G%\fb*\81\98\bc\89z\b8\e7\ff\ef\f5?\04i\ed\80\b7~\94\bc")
 (data $8 (i32.const 4316) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00s\00q\00r\00t\00\00\00\00\00")
 (data $9 (i32.const 4348) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00s\00i\00n\00\00\00\00\00\00\00")
 (data $10 (i32.const 4384) "n\83\f9\a2\00\00\00\00\d1W\'\fc)\15DN\99\95b\db\c0\dd4\f5\abcQ\feA\90C<:n$\b7a\c5\bb\de\ea.I\06\e0\d2MB\1c\eb\1d\fe\1c\92\d1\t\f55\82\e8>\a7)\b1&p\9c\e9\84D\bb.9\d6\919A~_\b4\8b_\84\9c\f49S\83\ff\97\f8\1f;(\f9\bd\8b\11/\ef\0f\98\05\de\cf~6m\1fm\nZf?FO\b7\t\cb\'\c7\ba\'u-\ea_\9e\f79\07={\f1\e5\eb\b1_\fbk\ea\92R\8aF0\03V\08]\8d\1f \bc\cf\f0\abk{\fca\91\e3\a9\1d6\f4\9a_\85\99e\08\1b\e6^\80\d8\ff\8d@h\a0\14W\15\06\061\'sM")
 (data $11 (i32.const 4588) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00c\00o\00s\00\00\00\00\00\00\00")
 (data $12 (i32.const 4620) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00t\00a\00n\00\00\00\00\00\00\00")
 (data $13 (i32.const 4652) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00a\00s\00i\00n\00\00\00\00\00")
 (data $14 (i32.const 4684) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00a\00c\00o\00s\00\00\00\00\00")
 (data $15 (i32.const 4716) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00a\00t\00a\00n\00\00\00\00\00")
 (data $16 (i32.const 4748) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00*\00*\00\00\00\00\00\00\00\00\00")
 (data $17 (i32.const 4780) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00!\00\00\00\00\00\00\00\00\00\00\00")
 (data $18 (i32.const 4812) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00I\00n\00v\00a\00l\00i\00d\00 \00o\00p\00e\00r\00a\00t\00o\00r\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $19 (i32.const 4876) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00>\00\00\00F\00r\00o\00n\00t\00e\00n\00d\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00c\00a\00l\00c\00u\00l\00a\00t\00o\00r\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $20 (i32.const 4972) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00L\00E\00F\00T\00_\00P\00A\00R\00E\00N\00\00\00\00\00\00\00\00\00")
 (data $21 (i32.const 5020) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00R\00I\00G\00H\00T\00_\00P\00A\00R\00E\00N\00\00\00\00\00\00\00")
 (data $22 (i32.const 5068) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00L\00E\00F\00T\00_\00B\00R\00A\00C\00E\00\00\00\00\00\00\00\00\00")
 (data $23 (i32.const 5116) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00R\00I\00G\00H\00T\00_\00B\00R\00A\00C\00E\00\00\00\00\00\00\00")
 (data $24 (i32.const 5164) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00C\00O\00M\00M\00A\00\00\00")
 (data $25 (i32.const 5196) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00D\00O\00T\00\00\00\00\00\00\00")
 (data $26 (i32.const 5228) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00M\00I\00N\00U\00S\00\00\00")
 (data $27 (i32.const 5260) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00P\00L\00U\00S\00\00\00\00\00")
 (data $28 (i32.const 5292) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00S\00E\00M\00I\00C\00O\00L\00O\00N\00\00\00\00\00\00\00\00\00\00\00")
 (data $29 (i32.const 5340) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00S\00L\00A\00S\00H\00\00\00")
 (data $30 (i32.const 5372) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00S\00T\00A\00R\00\00\00\00\00")
 (data $31 (i32.const 5404) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00B\00A\00N\00G\00\00\00\00\00")
 (data $32 (i32.const 5436) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00B\00A\00N\00G\00_\00E\00Q\00U\00A\00L\00\00\00\00\00\00\00\00\00")
 (data $33 (i32.const 5484) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00E\00Q\00U\00A\00L\00\00\00")
 (data $34 (i32.const 5516) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00E\00Q\00U\00A\00L\00_\00E\00Q\00U\00A\00L\00\00\00\00\00\00\00")
 (data $35 (i32.const 5564) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00G\00R\00E\00A\00T\00E\00R\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $36 (i32.const 5612) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00G\00R\00E\00A\00T\00E\00R\00_\00E\00Q\00U\00A\00L\00\00\00")
 (data $37 (i32.const 5660) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00L\00E\00S\00S\00\00\00\00\00")
 (data $38 (i32.const 5692) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00L\00E\00S\00S\00_\00E\00Q\00U\00A\00L\00\00\00\00\00\00\00\00\00")
 (data $39 (i32.const 5740) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00I\00D\00E\00N\00T\00I\00F\00I\00E\00R\00\00\00\00\00\00\00\00\00")
 (data $40 (i32.const 5788) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00S\00T\00R\00I\00N\00G\00")
 (data $41 (i32.const 5820) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00N\00U\00M\00B\00E\00R\00")
 (data $42 (i32.const 5852) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00A\00N\00D\00\00\00\00\00\00\00")
 (data $43 (i32.const 5884) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00C\00L\00A\00S\00S\00\00\00")
 (data $44 (i32.const 5916) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00E\00L\00S\00E\00\00\00\00\00")
 (data $45 (i32.const 5948) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00F\00A\00L\00S\00E\00\00\00")
 (data $46 (i32.const 5980) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00F\00U\00N\00\00\00\00\00\00\00")
 (data $47 (i32.const 6012) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00F\00O\00R\00\00\00\00\00\00\00")
 (data $48 (i32.const 6044) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00I\00F\00\00\00\00\00\00\00\00\00")
 (data $49 (i32.const 6076) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00N\00I\00L\00\00\00\00\00\00\00")
 (data $50 (i32.const 6108) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00O\00R\00\00\00\00\00\00\00\00\00")
 (data $51 (i32.const 6140) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00P\00R\00I\00N\00T\00\00\00")
 (data $52 (i32.const 6172) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00R\00E\00T\00U\00R\00N\00")
 (data $53 (i32.const 6204) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00S\00U\00P\00E\00R\00\00\00")
 (data $54 (i32.const 6236) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00T\00H\00I\00S\00\00\00\00\00")
 (data $55 (i32.const 6268) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00T\00R\00U\00E\00\00\00\00\00")
 (data $56 (i32.const 6300) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00V\00A\00R\00\00\00\00\00\00\00")
 (data $57 (i32.const 6332) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00W\00H\00I\00L\00E\00\00\00")
 (data $58 (i32.const 6364) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00E\00O\00F\00\00\00\00\00\00\00")
 (data $59 (i32.const 6396) "\ac\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\9c\00\00\00\80\13\00\00\b0\13\00\00\e0\13\00\00\10\14\00\00@\14\00\00`\14\00\00\80\14\00\00\a0\14\00\00\c0\14\00\00\f0\14\00\00\10\15\00\000\15\00\00P\15\00\00\80\15\00\00\a0\15\00\00\d0\15\00\00\00\16\00\000\16\00\00P\16\00\00\80\16\00\00\b0\16\00\00\d0\16\00\00\f0\16\00\00\10\17\00\000\17\00\00P\17\00\00p\17\00\00\90\17\00\00\b0\17\00\00\d0\17\00\00\f0\17\00\00\10\18\00\000\18\00\00P\18\00\00p\18\00\00\90\18\00\00\b0\18\00\00\d0\18\00\00\f0\18\00\00")
 (data $60 (i32.const 6572) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00\10\19\00\00\10\19\00\00\9c\00\00\00\'\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $61 (i32.const 6620) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00")
 (data $62 (i32.const 6684) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $63 (i32.const 6752) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $64 (i32.const 6784) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $65 (i32.const 6812) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00\00\00\00\00\00\00\00\00")
 (data $66 (i32.const 6876) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data $67 (i32.const 6928) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $68 (i32.const 6956) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $69 (i32.const 7020) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data $70 (i32.const 7068) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data $71 (i32.const 7132) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00a\00n\00d\00\00\00\00\00\00\00")
 (data $72 (i32.const 7164) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00c\00l\00a\00s\00s\00\00\00")
 (data $73 (i32.const 7196) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00e\00l\00s\00e\00\00\00\00\00")
 (data $74 (i32.const 7228) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00f\00a\00l\00s\00e\00\00\00")
 (data $75 (i32.const 7260) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00f\00u\00n\00\00\00\00\00\00\00")
 (data $76 (i32.const 7292) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00f\00o\00r\00\00\00\00\00\00\00")
 (data $77 (i32.const 7324) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00i\00f\00\00\00\00\00\00\00\00\00")
 (data $78 (i32.const 7356) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00n\00i\00l\00\00\00\00\00\00\00")
 (data $79 (i32.const 7388) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00o\00r\00\00\00\00\00\00\00\00\00")
 (data $80 (i32.const 7420) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00p\00r\00i\00n\00t\00\00\00")
 (data $81 (i32.const 7452) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00r\00e\00t\00u\00r\00n\00")
 (data $82 (i32.const 7484) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00s\00u\00p\00e\00r\00\00\00")
 (data $83 (i32.const 7516) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00t\00h\00i\00s\00\00\00\00\00")
 (data $84 (i32.const 7548) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00t\00r\00u\00e\00\00\00\00\00")
 (data $85 (i32.const 7580) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00v\00a\00r\00\00\00\00\00\00\00")
 (data $86 (i32.const 7612) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00w\00h\00i\00l\00e\00\00\00")
 (data $87 (i32.const 7644) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $88 (i32.const 7676) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $89 (i32.const 7708) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $90 (i32.const 7740) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data $91 (i32.const 7772) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\001\00\00\00\00\00\00\00\00\00\00\00")
 (data $92 (i32.const 7804) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\002\00\00\00\00\00\00\00\00\00\00\00")
 (data $93 (i32.const 7836) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\003\00\00\00\00\00\00\00\00\00\00\00")
 (data $94 (i32.const 7868) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\004\00\00\00\00\00\00\00\00\00\00\00")
 (data $95 (i32.const 7900) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\005\00\00\00\00\00\00\00\00\00\00\00")
 (data $96 (i32.const 7932) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\006\00\00\00\00\00\00\00\00\00\00\00")
 (data $97 (i32.const 7964) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\007\00\00\00\00\00\00\00\00\00\00\00")
 (data $98 (i32.const 7996) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\008\00\00\00\00\00\00\00\00\00\00\00")
 (data $99 (i32.const 8028) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\009\00\00\00\00\00\00\00\00\00\00\00")
 (data $100 (i32.const 8060) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $101 (i32.const 8092) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data $102 (i32.const 8124) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00")
 (data $103 (i32.const 8172) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00_\00\00\00\00\00\00\00\00\00\00\00")
 (data $104 (i32.const 8204) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00a\00\00\00\00\00\00\00\00\00\00\00")
 (data $105 (i32.const 8236) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00b\00\00\00\00\00\00\00\00\00\00\00")
 (data $106 (i32.const 8268) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00c\00\00\00\00\00\00\00\00\00\00\00")
 (data $107 (i32.const 8300) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00d\00\00\00\00\00\00\00\00\00\00\00")
 (data $108 (i32.const 8332) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data $109 (i32.const 8364) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00f\00\00\00\00\00\00\00\00\00\00\00")
 (data $110 (i32.const 8396) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00g\00\00\00\00\00\00\00\00\00\00\00")
 (data $111 (i32.const 8428) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00h\00\00\00\00\00\00\00\00\00\00\00")
 (data $112 (i32.const 8460) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00i\00\00\00\00\00\00\00\00\00\00\00")
 (data $113 (i32.const 8492) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00j\00\00\00\00\00\00\00\00\00\00\00")
 (data $114 (i32.const 8524) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00k\00\00\00\00\00\00\00\00\00\00\00")
 (data $115 (i32.const 8556) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00l\00\00\00\00\00\00\00\00\00\00\00")
 (data $116 (i32.const 8588) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00m\00\00\00\00\00\00\00\00\00\00\00")
 (data $117 (i32.const 8620) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00n\00\00\00\00\00\00\00\00\00\00\00")
 (data $118 (i32.const 8652) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00o\00\00\00\00\00\00\00\00\00\00\00")
 (data $119 (i32.const 8684) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00p\00\00\00\00\00\00\00\00\00\00\00")
 (data $120 (i32.const 8716) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00q\00\00\00\00\00\00\00\00\00\00\00")
 (data $121 (i32.const 8748) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00r\00\00\00\00\00\00\00\00\00\00\00")
 (data $122 (i32.const 8780) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data $123 (i32.const 8812) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00t\00\00\00\00\00\00\00\00\00\00\00")
 (data $124 (i32.const 8844) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00u\00\00\00\00\00\00\00\00\00\00\00")
 (data $125 (i32.const 8876) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00v\00\00\00\00\00\00\00\00\00\00\00")
 (data $126 (i32.const 8908) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00w\00\00\00\00\00\00\00\00\00\00\00")
 (data $127 (i32.const 8940) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00x\00\00\00\00\00\00\00\00\00\00\00")
 (data $128 (i32.const 8972) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data $129 (i32.const 9004) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00z\00\00\00\00\00\00\00\00\00\00\00")
 (data $130 (i32.const 9036) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00A\00\00\00\00\00\00\00\00\00\00\00")
 (data $131 (i32.const 9068) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00B\00\00\00\00\00\00\00\00\00\00\00")
 (data $132 (i32.const 9100) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00C\00\00\00\00\00\00\00\00\00\00\00")
 (data $133 (i32.const 9132) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00D\00\00\00\00\00\00\00\00\00\00\00")
 (data $134 (i32.const 9164) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00E\00\00\00\00\00\00\00\00\00\00\00")
 (data $135 (i32.const 9196) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00F\00\00\00\00\00\00\00\00\00\00\00")
 (data $136 (i32.const 9228) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00G\00\00\00\00\00\00\00\00\00\00\00")
 (data $137 (i32.const 9260) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00H\00\00\00\00\00\00\00\00\00\00\00")
 (data $138 (i32.const 9292) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00I\00\00\00\00\00\00\00\00\00\00\00")
 (data $139 (i32.const 9324) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00J\00\00\00\00\00\00\00\00\00\00\00")
 (data $140 (i32.const 9356) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00K\00\00\00\00\00\00\00\00\00\00\00")
 (data $141 (i32.const 9388) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00L\00\00\00\00\00\00\00\00\00\00\00")
 (data $142 (i32.const 9420) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00M\00\00\00\00\00\00\00\00\00\00\00")
 (data $143 (i32.const 9452) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00N\00\00\00\00\00\00\00\00\00\00\00")
 (data $144 (i32.const 9484) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00O\00\00\00\00\00\00\00\00\00\00\00")
 (data $145 (i32.const 9516) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00P\00\00\00\00\00\00\00\00\00\00\00")
 (data $146 (i32.const 9548) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00Q\00\00\00\00\00\00\00\00\00\00\00")
 (data $147 (i32.const 9580) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00R\00\00\00\00\00\00\00\00\00\00\00")
 (data $148 (i32.const 9612) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00S\00\00\00\00\00\00\00\00\00\00\00")
 (data $149 (i32.const 9644) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00T\00\00\00\00\00\00\00\00\00\00\00")
 (data $150 (i32.const 9676) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00U\00\00\00\00\00\00\00\00\00\00\00")
 (data $151 (i32.const 9708) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00V\00\00\00\00\00\00\00\00\00\00\00")
 (data $152 (i32.const 9740) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00W\00\00\00\00\00\00\00\00\00\00\00")
 (data $153 (i32.const 9772) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00X\00\00\00\00\00\00\00\00\00\00\00")
 (data $154 (i32.const 9804) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00Y\00\00\00\00\00\00\00\00\00\00\00")
 (data $155 (i32.const 9836) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00Z\00\00\00\00\00\00\00\00\00\00\00")
 (data $156 (i32.const 9868) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t\00\00\00\00\00\00\00\00\00")
 (data $157 (i32.const 9932) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s\00\00\00\00\00\00\00")
 (data $158 (i32.const 9980) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data $159 (i32.const 10012) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00(\00\00\00\00\00\00\00\00\00\00\00")
 (data $160 (i32.const 10044) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00)\00\00\00\00\00\00\00\00\00\00\00")
 (data $161 (i32.const 10076) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00{\00\00\00\00\00\00\00\00\00\00\00")
 (data $162 (i32.const 10108) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00}\00\00\00\00\00\00\00\00\00\00\00")
 (data $163 (i32.const 10140) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data $164 (i32.const 10172) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00;\00\00\00\00\00\00\00\00\00\00\00")
 (data $165 (i32.const 10204) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\"\00\00\00\00\00\00\00\00\00\00\00")
 (data $166 (i32.const 10236) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data $167 (i32.const 10268) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\008\00\00\00U\00n\00t\00e\00r\00m\00i\00n\00a\00t\00e\00d\00 \00s\00t\00r\00i\00n\00g\00 \00a\00t\00 \00l\00i\00n\00e\00 \00\00\00\00\00")
 (data $168 (i32.const 10348) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006\00\00\00\00\00\00\00\00\00")
 (data $169 (i32.const 10476) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data $170 (i32.const
 (data $171 (i32.const 10940) "\1c\04\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $172 (i32.const 11996) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00\00\00\00\00")
 (data $173 (i32.const 12092) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00&\00\00\00\00\00\00\00\00\00\00\00")
 (data $174 (i32.const 12124) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00&\00&\00\00\00\00\00\00\00\00\00")
 (data $175 (i32.const 12156) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00|\00\00\00\00\00\00\00\00\00\00\00")
 (data $176 (i32.const 12188) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00|\00|\00\00\00\00\00\00\00\00\00")
 (data $177 (i32.const 12220) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00=\00\00\00\00\00\00\00\00\00\00\00")
 (data $178 (i32.const 12252) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00!\00=\00\00\00\00\00\00\00\00\00")
 (data $179 (i32.const 12284) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00=\00=\00\00\00\00\00\00\00\00\00")
 (data $180 (i32.const 12316) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00<\00\00\00\00\00\00\00\00\00\00\00")
 (data $181 (i32.const 12348) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00<\00=\00\00\00\00\00\00\00\00\00")
 (data $182 (i32.const 12380) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00>\00\00\00\00\00\00\00\00\00\00\00")
 (data $183 (i32.const 12412) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00>\00=\00\00\00\00\00\00\00\00\00")
 (data $184 (i32.const 12444) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00,\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00:\00 \00")
 (data $185 (i32.const 12508) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00 \00a\00t\00 \00l\00i\00n\00e\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data $186 (i32.const 12556) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $187 (i32.const 12588) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\0b\00\00\00\06\00\00\00\00\00\00\00")
 (data $188 (i32.const 12620) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $189 (i32.const 12748) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00\15\00\00\00\00\00\00\00\00\00\00\00")
 (data $190 (i32.const 12780) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00\13\00\00\00\00\00\00\00\00\00\00\00")
 (data $191 (i32.const 12812) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00t\00o\00k\00e\00n\00:\00 \00\00\00\00\00\00\00\00\00")
 (data $192 (i32.const 12876) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00^\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00n\00u\00l\00l\00\'\00 \00(\00n\00o\00t\00 \00a\00s\00s\00i\00g\00n\00e\00d\00 \00o\00r\00 \00f\00a\00i\00l\00e\00d\00 \00c\00a\00s\00t\00)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $193 (i32.const 13004) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00D\00\00\00F\00r\00o\00n\00t\00e\00n\00d\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00P\00a\00r\00s\00e\00r\00/\00P\00a\00r\00s\00e\00r\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data $194 (i32.const 13100) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00 \00a\00t\00 \00l\00i\00n\00e\00:\00 \00\00\00\00\00\00\00\00\00")
 (data $195 (i32.const 13148) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00E\00R\00R\00O\00R\00\00\00")
 (data $196 (i32.const 13180) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\t\00\00\00\n\00\00\00\00\00\00\00")
 (data $197 (i32.const 13212) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\06\00\00\00\07\00\00\00\00\00\00\00")
 (data $198 (i32.const 13244) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00\0f\00\00\00\10\00\00\00\11\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $199 (i32.const 13292) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\0c\00\00\00\0e\00\00\00\00\00\00\00")
 (data $200 (i32.const 13324) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\16\00\00\00\1e\00\00\00\00\00\00\00")
 (data $201 (i32.const 13356) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $202 (i32.const 13388) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00-\00-\00-\00-\00-\00 \00P\00a\00r\00s\00e\00 \00T\00r\00e\00e\00:\00 \00-\00-\00-\00-\00-\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $203 (i32.const 13468) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $204 (i32.const 13500) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00-\00-\00-\00-\00-\00 \00A\00S\00T\00:\00 \00-\00-\00-\00-\00-\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $205 (i32.const 13564) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00I\00n\00p\00u\00t\00:\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $206 (i32.const 13612) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00@\00\00\00F\00r\00o\00n\00t\00e\00n\00d\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00L\00e\00x\00e\00r\00/\00T\00o\00k\00e\00n\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $207 (i32.const 13708) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00{\00\n\00\00\00\00\00\00\00\00\00")
 (data $208 (i32.const 13740) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00\"\00p\00a\00r\00s\00e\00\"\00:\00 \00[\00\00\00\00\00\00\00\00\00")
 (data $209 (i32.const 13788) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00,\00 \00\00\00\00\00\00\00\00\00")
 (data $210 (i32.const 13820) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00]\00,\00\n\00\00\00\00\00\00\00")
 (data $211 (i32.const 13852) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00\"\00a\00s\00t\00\"\00:\00 \00[\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $212 (i32.const 13900) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00\"\00v\00a\00l\00u\00e\00\"\00:\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data $213 (i32.const 13948) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\000\00.\000\00\00\00\00\00\00\00")
 (data $214 (i32.const 13980) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00N\00a\00N\00\00\00\00\00\00\00")
 (data $215 (i32.const 14012) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data $216 (i32.const 14060) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $217 (i32.const 14112) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $218 (i32.const 14168) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\rXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data $219 (i32.const 14864) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\r\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data $220 (i32.const 15040) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data $221 (i32.const 15084) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00O\00b\00j\00e\00c\00t\00 \00a\00l\00r\00e\00a\00d\00y\00 \00p\00i\00n\00n\00e\00d\00\00\00")
 (data $222 (i32.const 15148) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00O\00b\00j\00e\00c\00t\00 \00i\00s\00 \00n\00o\00t\00 \00p\00i\00n\00n\00e\00d\00\00\00\00\00")
 (data $223 (i32.const 15212) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00X\00\00\00F\00r\00o\00n\00t\00e\00n\00d\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00P\00a\00r\00s\00e\00r\00/\00P\00a\00r\00s\00e\00T\00r\00e\00e\00P\00r\00i\00n\00t\00e\00r\00.\00t\00s\00\00\00\00\00")
 (data $224 (i32.const 15324) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00 \00 \00\00\00\00\00\00\00\00\00")
 (data $225 (i32.const 15356) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00:\00 \00B\00i\00n\00a\00r\00y\00E\00x\00p\00r\00e\00s\00s\00i\00o\00n\00 \00\00\00\00\00\00\00")
 (data $226 (i32.const 15420) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00:\00 \00E\00q\00u\00a\00l\00i\00t\00y\00E\00x\00p\00r\00e\00s\00s\00i\00o\00n\00 \00\00\00")
 (data $227 (i32.const 15484) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00:\00 \00R\00e\00l\00a\00t\00i\00o\00n\00a\00l\00E\00x\00p\00r\00e\00s\00s\00i\00o\00n\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $228 (i32.const 15564) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\006\00\00\00:\00 \00M\00u\00l\00t\00i\00p\00l\00i\00c\00a\00t\00i\00v\00e\00E\00x\00p\00r\00e\00s\00s\00i\00o\00n\00 \00\00\00\00\00\00\00")
 (data $229 (i32.const 15644) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00:\00 \00U\00n\00a\00r\00y\00E\00x\00p\00r\00e\00s\00s\00i\00o\00n\00 \00\00\00\00\00\00\00\00\00")
 (data $230 (i32.const 15708) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00:\00 \00T\00e\00r\00m\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $231 (i32.const 15756) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00:\00 \00N\00u\00m\00b\00e\00r\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data $232 (i32.const 15804) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00:\00 \00I\00d\00e\00n\00t\00i\00f\00i\00e\00r\00 \00\00\00")
 (data $233 (i32.const 15852) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00:\00 \00E\00x\00p\00r\00e\00s\00s\00i\00o\00n\00 \00\00\00")
 (data $234 (i32.const 15900) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00i\00n\00v\00a\00l\00i\00d\00 \00d\00o\00w\00n\00c\00a\00s\00t\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $235 (i32.const 15964) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00J\00\00\00F\00r\00o\00n\00t\00e\00n\00d\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00A\00S\00T\00/\00T\00o\00A\00s\00t\00V\00i\00s\00i\00t\00o\00r\00.\00t\00s\00\00\00")
 (data $236 (i32.const 16060) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00:\00 \00N\00u\00m\00 \00")
 (data $237 (i32.const 16092) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00U\00n\00k\00n\00o\00w\00n\00 \00o\00p\00e\00r\00a\00t\00o\00r\00:\00 \00\00\00\00\00\00\00\00\00")
 (data $238 (i32.const 16156) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00X\00\00\00F\00r\00o\00n\00t\00e\00n\00d\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00I\00n\00t\00e\00r\00p\00r\00e\00t\00e\00r\00/\00I\00n\00t\00e\00r\00p\00r\00e\00t\00e\00r\00.\00t\00s\00\00\00\00\00")
 (data $239 (i32.const 16268) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\006\00\00\00I\00d\00e\00n\00t\00i\00f\00i\00e\00r\00s\00 \00n\00o\00t\00 \00i\00m\00p\00l\00e\00m\00e\00n\00t\00e\00d\00\00\00\00\00\00\00")
 (data $240 (i32.const 16352) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA\00\00\00 _\a0\02B\00\00\00\e8vH7B\00\00\00\a2\94\1amB\00\00@\e5\9c0\a2B\00\00\90\1e\c4\bc\d6B\00\004&\f5k\0cC\00\80\e07y\c3AC\00\a0\d8\85W4vC\00\c8Ngm\c1\abC\00=\91`\e4X\e1C@\8c\b5x\1d\af\15DP\ef\e2\d6\e4\1aKD\92\d5M\06\cf\f0\80D")
 (data $241 (i32.const 16540) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00 \00n\00o\00t\00 \00i\00m\00p\00l\00e\00m\00e\00n\00t\00e\00d\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $242 (i32.const 16608) ",\00\00\00 \00\00\00 \00\00\00 \00\00\00\00\00\00\00\02A\00\00\10\t\82\00\00\00\00\00\00\00\00\00\02A\00\00\02\t\00\00\00\00\00\00 \00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00 \00\00\00 \00\00\00 \00\00\00\00\00\00\00 \00\00\00 \00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (table $0 1 1 funcref)
 (elem $0 (i32.const 1))
 (export "__new" (func $~lib/rt/itcms/__new))
 (export "__pin" (func $~lib/rt/itcms/__pin))
 (export "__unpin" (func $~lib/rt/itcms/__unpin))
 (export "__collect" (func $~lib/rt/itcms/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (export "calculate" (func $export:Frontend/assembly/calculator/calculate))
 (export "calculateViaLanguage" (func $export:Frontend/assembly/Index/calculateViaLanguage))
 (start $~start)
 (func $~lib/rt/common/OBJECT#get:rtSize (param $this i32) (result i32)
  local.get $this
  i32.load offset=16
 )
 (func $~lib/string/String#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 1
  i32.shr_u
  return
 )
 (func $~lib/util/string/compareImpl (param $str1 i32) (param $index1 i32) (param $str2 i32) (param $index2 i32) (param $len i32) (result i32)
  (local $ptr1 i32)
  (local $ptr2 i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  local.get $str1
  local.get $index1
  i32.const 1
  i32.shl
  i32.add
  local.set $ptr1
  local.get $str2
  local.get $index2
  i32.const 1
  i32.shl
  i32.add
  local.set $ptr2
  i32.const 0
  i32.const 2
  i32.lt_s
  drop
  local.get $len
  i32.const 4
  i32.ge_u
  if (result i32)
   local.get $ptr1
   i32.const 7
   i32.and
   local.get $ptr2
   i32.const 7
   i32.and
   i32.or
   i32.eqz
  else
   i32.const 0
  end
  if
   block $do-break|0
    loop $do-loop|0
     local.get $ptr1
     i64.load
     local.get $ptr2
     i64.load
     i64.ne
     if
      br $do-break|0
     end
     local.get $ptr1
     i32.const 8
     i32.add
     local.set $ptr1
     local.get $ptr2
     i32.const 8
     i32.add
     local.set $ptr2
     local.get $len
     i32.const 4
     i32.sub
     local.set $len
     local.get $len
     i32.const 4
     i32.ge_u
     br_if $do-loop|0
    end
   end
  end
  loop $while-continue|1
   local.get $len
   local.tee $7
   i32.const 1
   i32.sub
   local.set $len
   local.get $7
   if
    local.get $ptr1
    i32.load16_u
    local.set $a
    local.get $ptr2
    i32.load16_u
    local.set $b
    local.get $a
    local.get $b
    i32.ne
    if
     local.get $a
     local.get $b
     i32.sub
     return
    end
    local.get $ptr1
    i32.const 2
    i32.add
    local.set $ptr1
    local.get $ptr2
    i32.const 2
    i32.add
    local.set $ptr2
    br $while-continue|1
   end
  end
  i32.const 0
  return
 )
 (func $Frontend/assembly/calculator/add (param $a f64) (param $b f64) (result f64)
  local.get $a
  local.get $b
  f64.add
  return
 )
 (func $Frontend/assembly/calculator/subtract (param $a f64) (param $b f64) (result f64)
  local.get $a
  local.get $b
  f64.sub
  return
 )
 (func $Frontend/assembly/calculator/multiply (param $a f64) (param $b f64) (result f64)
  local.get $a
  local.get $b
  f64.mul
  return
 )
 (func $Frontend/assembly/calculator/divide (param $a f64) (param $b f64) (result f64)
  local.get $a
  local.get $b
  f64.div
  return
 )
 (func $~lib/math/NativeMath.mod (param $x f64) (param $y f64) (result f64)
  (local $ux i64)
  (local $uy i64)
  (local $ex i64)
  (local $ey i64)
  (local $sx i64)
  (local $uy1 i64)
  (local $m f64)
  (local $ux1 i64)
  (local $shift i64)
  local.get $y
  f64.abs
  f64.const 1
  f64.eq
  if
   local.get $x
   local.get $x
   f64.trunc
   f64.sub
   local.get $x
   f64.copysign
   return
  end
  local.get $x
  i64.reinterpret_f64
  local.set $ux
  local.get $y
  i64.reinterpret_f64
  local.set $uy
  local.get $ux
  i64.const 52
  i64.shr_u
  i64.const 2047
  i64.and
  local.set $ex
  local.get $uy
  i64.const 52
  i64.shr_u
  i64.const 2047
  i64.and
  local.set $ey
  local.get $ux
  i64.const 63
  i64.shr_u
  local.set $sx
  local.get $uy
  i64.const 1
  i64.shl
  local.set $uy1
  local.get $uy1
  i64.const 0
  i64.eq
  if (result i32)
   i32.const 1
  else
   local.get $ex
   i64.const 2047
   i64.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $y
   local.get $y
   f64.ne
  end
  if
   local.get $x
   local.get $y
   f64.mul
   local.set $m
   local.get $m
   local.get $m
   f64.div
   return
  end
  local.get $ux
  i64.const 1
  i64.shl
  local.set $ux1
  local.get $ux1
  local.get $uy1
  i64.le_u
  if
   local.get $x
   local.get $ux1
   local.get $uy1
   i64.ne
   f64.convert_i32_u
   f64.mul
   return
  end
  local.get $ex
  i64.const 0
  i64.ne
  i32.eqz
  if
   local.get $ex
   local.get $ux
   i64.const 12
   i64.shl
   i64.clz
   i64.sub
   local.set $ex
   local.get $ux
   i64.const 1
   local.get $ex
   i64.sub
   i64.shl
   local.set $ux
  else
   local.get $ux
   i64.const -1
   i64.const 12
   i64.shr_u
   i64.and
   local.set $ux
   local.get $ux
   i64.const 1
   i64.const 52
   i64.shl
   i64.or
   local.set $ux
  end
  local.get $ey
  i64.const 0
  i64.ne
  i32.eqz
  if
   local.get $ey
   local.get $uy
   i64.const 12
   i64.shl
   i64.clz
   i64.sub
   local.set $ey
   local.get $uy
   i64.const 1
   local.get $ey
   i64.sub
   i64.shl
   local.set $uy
  else
   local.get $uy
   i64.const -1
   i64.const 12
   i64.shr_u
   i64.and
   local.set $uy
   local.get $uy
   i64.const 1
   i64.const 52
   i64.shl
   i64.or
   local.set $uy
  end
  loop $while-continue|0
   local.get $ex
   local.get $ey
   i64.gt_s
   if
    local.get $ux
    local.get $uy
    i64.ge_u
    if
     local.get $ux
     local.get $uy
     i64.eq
     if
      f64.const 0
      local.get $x
      f64.mul
      return
     end
     local.get $ux
     local.get $uy
     i64.sub
     local.set $ux
    end
    local.get $ux
    i64.const 1
    i64.shl
    local.set $ux
    local.get $ex
    i64.const 1
    i64.sub
    local.set $ex
    br $while-continue|0
   end
  end
  local.get $ux
  local.get $uy
  i64.ge_u
  if
   local.get $ux
   local.get $uy
   i64.eq
   if
    f64.const 0
    local.get $x
    f64.mul
    return
   end
   local.get $ux
   local.get $uy
   i64.sub
   local.set $ux
  end
  local.get $ux
  i64.const 11
  i64.shl
  i64.clz
  local.set $shift
  local.get $ex
  local.get $shift
  i64.sub
  local.set $ex
  local.get $ux
  local.get $shift
  i64.shl
  local.set $ux
  local.get $ex
  i64.const 0
  i64.gt_s
  if
   local.get $ux
   i64.const 1
   i64.const 52
   i64.shl
   i64.sub
   local.set $ux
   local.get $ux
   local.get $ex
   i64.const 52
   i64.shl
   i64.or
   local.set $ux
  else
   local.get $ux
   i64.const 0
   local.get $ex
   i64.sub
   i64.const 1
   i64.add
   i64.shr_u
   local.set $ux
  end
  local.get $ux
  local.get $sx
  i64.const 63
  i64.shl
  i64.or
  f64.reinterpret_i64
  return
 )
 (func $Frontend/assembly/calculator/remainder (param $a f64) (param $b f64) (result f64)
  local.get $a
  local.get $b
  call $~lib/math/NativeMath.mod
  return
 )
 (func $~lib/math/NativeMath.log (param $x f64) (result f64)
  (local $x|1 f64)
  (local $ix i64)
  (local $r f64)
  (local $r2 f64)
  (local $r3 f64)
  (local $y f64)
  (local $w f64)
  (local $rhi f64)
  (local $rlo f64)
  (local $hi f64)
  (local $lo f64)
  (local $top i32)
  (local $tmp i64)
  (local $i i32)
  (local $k i64)
  (local $iz i64)
  (local $invc f64)
  (local $logc f64)
  (local $z f64)
  (local $chi f64)
  (local $clo f64)
  (local $r|22 f64)
  (local $kd f64)
  (local $w|24 f64)
  (local $hi|25 f64)
  (local $lo|26 f64)
  (local $r2|27 f64)
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  block $~lib/util/math/log_lut|inlined.0 (result f64)
   local.get $x
   local.set $x|1
   local.get $x|1
   i64.reinterpret_f64
   local.set $ix
   local.get $ix
   i64.const 4606619468846596096
   i64.sub
   i64.const 4607473789381378048
   i64.const 4606619468846596096
   i64.sub
   i64.lt_u
   if
    local.get $x|1
    f64.const 1
    f64.sub
    local.set $r
    local.get $r
    local.get $r
    f64.mul
    local.set $r2
    local.get $r2
    local.get $r
    f64.mul
    local.set $r3
    local.get $r3
    f64.const 0.3333333333333352
    local.get $r
    f64.const -0.24999999999998432
    f64.mul
    f64.add
    local.get $r2
    f64.const 0.19999999999320328
    f64.mul
    f64.add
    local.get $r3
    f64.const -0.16666666669929706
    local.get $r
    f64.const 0.14285715076560868
    f64.mul
    f64.add
    local.get $r2
    f64.const -0.12499997863982555
    f64.mul
    f64.add
    local.get $r3
    f64.const 0.11110712032936046
    local.get $r
    f64.const -0.10000486757818193
    f64.mul
    f64.add
    local.get $r2
    f64.const 0.09181994006195467
    f64.mul
    f64.add
    local.get $r3
    f64.const -0.08328363062289341
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    local.set $y
    local.get $r
    f64.const 134217728
    f64.mul
    local.set $w
    local.get $r
    local.get $w
    f64.add
    local.get $w
    f64.sub
    local.set $rhi
    local.get $r
    local.get $rhi
    f64.sub
    local.set $rlo
    local.get $rhi
    local.get $rhi
    f64.mul
    f64.const -0.5
    f64.mul
    local.set $w
    local.get $r
    local.get $w
    f64.add
    local.set $hi
    local.get $r
    local.get $hi
    f64.sub
    local.get $w
    f64.add
    local.set $lo
    local.get $lo
    f64.const -0.5
    local.get $rlo
    f64.mul
    local.get $rhi
    local.get $r
    f64.add
    f64.mul
    f64.add
    local.set $lo
    local.get $y
    local.get $lo
    f64.add
    local.get $hi
    f64.add
    br $~lib/util/math/log_lut|inlined.0
   end
   local.get $ix
   i64.const 48
   i64.shr_u
   i32.wrap_i64
   local.set $top
   local.get $top
   i32.const 16
   i32.sub
   i32.const 32752
   i32.const 16
   i32.sub
   i32.ge_u
   if
    local.get $ix
    i64.const 1
    i64.shl
    i64.const 0
    i64.eq
    if
     f64.const -1
     local.get $x|1
     local.get $x|1
     f64.mul
     f64.div
     br $~lib/util/math/log_lut|inlined.0
    end
    local.get $ix
    f64.const inf
    i64.reinterpret_f64
    i64.eq
    if
     local.get $x|1
     br $~lib/util/math/log_lut|inlined.0
    end
    local.get $top
    i32.const 32768
    i32.and
    if (result i32)
     i32.const 1
    else
     local.get $top
     i32.const 32752
     i32.and
     i32.const 32752
     i32.eq
    end
    if
     local.get $x|1
     local.get $x|1
     f64.sub
     local.get $x|1
     local.get $x|1
     f64.sub
     f64.div
     br $~lib/util/math/log_lut|inlined.0
    end
    local.get $x|1
    f64.const 4503599627370496
    f64.mul
    i64.reinterpret_f64
    local.set $ix
    local.get $ix
    i64.const 52
    i64.const 52
    i64.shl
    i64.sub
    local.set $ix
   end
   local.get $ix
   i64.const 4604367669032910848
   i64.sub
   local.set $tmp
   local.get $tmp
   i64.const 52
   i32.const 7
   i64.extend_i32_s
   i64.sub
   i64.shr_u
   i32.const 127
   i64.extend_i32_s
   i64.and
   i32.wrap_i64
   local.set $i
   local.get $tmp
   i64.const 52
   i64.shr_s
   local.set $k
   local.get $ix
   local.get $tmp
   i64.const 4095
   i64.const 52
   i64.shl
   i64.and
   i64.sub
   local.set $iz
   i32.const 208
   local.get $i
   i32.const 1
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load
   local.set $invc
   i32.const 208
   local.get $i
   i32.const 1
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load offset=8
   local.set $logc
   local.get $iz
   f64.reinterpret_i64
   local.set $z
   i32.const 2256
   local.get $i
   i32.const 1
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load
   local.set $chi
   i32.const 2256
   local.get $i
   i32.const 1
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load offset=8
   local.set $clo
   local.get $z
   local.get $chi
   f64.sub
   local.get $clo
   f64.sub
   local.get $invc
   f64.mul
   local.set $r|22
   local.get $k
   f64.convert_i64_s
   local.set $kd
   local.get $kd
   f64.const 0.6931471805598903
   f64.mul
   local.get $logc
   f64.add
   local.set $w|24
   local.get $w|24
   local.get $r|22
   f64.add
   local.set $hi|25
   local.get $w|24
   local.get $hi|25
   f64.sub
   local.get $r|22
   f64.add
   local.get $kd
   f64.const 5.497923018708371e-14
   f64.mul
   f64.add
   local.set $lo|26
   local.get $r|22
   local.get $r|22
   f64.mul
   local.set $r2|27
   local.get $lo|26
   local.get $r2|27
   f64.const -0.5000000000000001
   f64.mul
   f64.add
   local.get $r|22
   local.get $r2|27
   f64.mul
   f64.const 0.33333333331825593
   local.get $r|22
   f64.const -0.2499999999622955
   f64.mul
   f64.add
   local.get $r2|27
   f64.const 0.20000304511814496
   local.get $r|22
   f64.const -0.16667054827627667
   f64.mul
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.get $hi|25
   f64.add
   br $~lib/util/math/log_lut|inlined.0
  end
  return
 )
 (func $Frontend/assembly/calculator/log (param $a f64) (result f64)
  local.get $a
  call $~lib/math/NativeMath.log
  return
 )
 (func $Frontend/assembly/calculator/sqrt (param $a f64) (result f64)
  (local $x f64)
  block $~lib/math/NativeMath.sqrt|inlined.0 (result f64)
   local.get $a
   local.set $x
   local.get $x
   f64.sqrt
   br $~lib/math/NativeMath.sqrt|inlined.0
  end
  return
 )
 (func $~lib/math/pio2_large_quot (param $x f64) (param $u i64) (result i32)
  (local $magnitude i64)
  (local $offset i64)
  (local $shift i64)
  (local $tblPtr i32)
  (local $s0 i64)
  (local $s1 i64)
  (local $s2 i64)
  (local $b0 i64)
  (local $b1 i64)
  (local $b2 i64)
  (local $rshift i64)
  (local $b3 i64)
  (local $significand i64)
  (local $u|15 i64)
  (local $v i64)
  (local $u1 i64)
  (local $v1 i64)
  (local $w0 i64)
  (local $w1 i64)
  (local $t i64)
  (local $blo i64)
  (local $bhi i64)
  (local $ahi i64)
  (local $clo i64)
  (local $plo i64)
  (local $phi i64)
  (local $rlo i64)
  (local $rhi i64)
  (local $slo i64)
  (local $shi i64)
  (local $q i64)
  (local $q0 i64)
  (local $q1 i64)
  (local $shift|35 i64)
  (local $u|36 i64)
  (local $v|37 i64)
  (local $u1|38 i64)
  (local $v1|39 i64)
  (local $w0|40 i64)
  (local $w1|41 i64)
  (local $t|42 i64)
  (local $lo i64)
  (local $hi i64)
  (local $ahi|45 i64)
  (local $alo i64)
  (local $blo|47 i64)
  (local $shifter i64)
  (local $signbit i64)
  (local $coeff f64)
  local.get $u
  i64.const 9223372036854775807
  i64.and
  local.set $magnitude
  local.get $magnitude
  i64.const 52
  i64.shr_s
  i64.const 1045
  i64.sub
  local.set $offset
  local.get $offset
  i64.const 63
  i64.and
  local.set $shift
  i32.const 4384
  local.get $offset
  i64.const 6
  i64.shr_s
  i32.wrap_i64
  i32.const 3
  i32.shl
  i32.add
  local.set $tblPtr
  local.get $tblPtr
  i64.load
  local.set $b0
  local.get $tblPtr
  i64.load offset=8
  local.set $b1
  local.get $tblPtr
  i64.load offset=16
  local.set $b2
  local.get $shift
  i64.const 0
  i64.ne
  if
   i32.const 64
   i64.extend_i32_s
   local.get $shift
   i64.sub
   local.set $rshift
   local.get $tblPtr
   i64.load offset=24
   local.set $b3
   local.get $b1
   local.get $rshift
   i64.shr_u
   local.get $b0
   local.get $shift
   i64.shl
   i64.or
   local.set $s0
   local.get $b2
   local.get $rshift
   i64.shr_u
   local.get $b1
   local.get $shift
   i64.shl
   i64.or
   local.set $s1
   local.get $b3
   local.get $rshift
   i64.shr_u
   local.get $b2
   local.get $shift
   i64.shl
   i64.or
   local.set $s2
  else
   local.get $b0
   local.set $s0
   local.get $b1
   local.set $s1
   local.get $b2
   local.set $s2
  end
  local.get $u
  i64.const 4503599627370495
  i64.and
  i64.const 4503599627370496
  i64.or
  local.set $significand
  block $~lib/math/umuldi|inlined.0 (result i64)
   local.get $s1
   local.set $u|15
   local.get $significand
   local.set $v
   local.get $u|15
   i64.const 4294967295
   i64.and
   local.set $u1
   local.get $v
   i64.const 4294967295
   i64.and
   local.set $v1
   local.get $u|15
   i64.const 32
   i64.shr_u
   local.set $u|15
   local.get $v
   i64.const 32
   i64.shr_u
   local.set $v
   local.get $u1
   local.get $v1
   i64.mul
   local.set $t
   local.get $t
   i64.const 4294967295
   i64.and
   local.set $w0
   local.get $u|15
   local.get $v1
   i64.mul
   local.get $t
   i64.const 32
   i64.shr_u
   i64.add
   local.set $t
   local.get $t
   i64.const 32
   i64.shr_u
   local.set $w1
   local.get $u1
   local.get $v
   i64.mul
   local.get $t
   i64.const 4294967295
   i64.and
   i64.add
   local.set $t
   local.get $u|15
   local.get $v
   i64.mul
   local.get $w1
   i64.add
   local.get $t
   i64.const 32
   i64.shr_u
   i64.add
   global.set $~lib/math/res128_hi
   local.get $t
   i64.const 32
   i64.shl
   local.get $w0
   i64.add
   br $~lib/math/umuldi|inlined.0
  end
  local.set $blo
  global.get $~lib/math/res128_hi
  local.set $bhi
  local.get $s0
  local.get $significand
  i64.mul
  local.set $ahi
  local.get $s2
  i64.const 32
  i64.shr_u
  local.get $significand
  i64.const 32
  i64.shr_s
  i64.mul
  local.set $clo
  local.get $blo
  local.get $clo
  i64.add
  local.set $plo
  local.get $ahi
  local.get $bhi
  i64.add
  local.get $plo
  local.get $clo
  i64.lt_u
  i64.extend_i32_u
  i64.add
  local.set $phi
  local.get $plo
  i64.const 2
  i64.shl
  local.set $rlo
  local.get $phi
  i64.const 2
  i64.shl
  local.get $plo
  i64.const 62
  i64.shr_u
  i64.or
  local.set $rhi
  local.get $rhi
  i64.const 63
  i64.shr_s
  local.set $slo
  local.get $slo
  i64.const 1
  i64.shr_s
  local.set $shi
  local.get $phi
  i64.const 62
  i64.shr_s
  local.get $slo
  i64.sub
  local.set $q
  i64.const 4372995238176751616
  block $~lib/math/pio2_right|inlined.0 (result i64)
   local.get $rlo
   local.get $slo
   i64.xor
   local.set $q0
   local.get $rhi
   local.get $shi
   i64.xor
   local.set $q1
   local.get $q1
   i64.clz
   local.set $shift|35
   local.get $q1
   local.get $shift|35
   i64.shl
   local.get $q0
   i64.const 64
   local.get $shift|35
   i64.sub
   i64.shr_u
   i64.or
   local.set $q1
   local.get $q0
   local.get $shift|35
   i64.shl
   local.set $q0
   block $~lib/math/umuldi|inlined.1 (result i64)
    i64.const -3958705157555305932
    local.set $u|36
    local.get $q1
    local.set $v|37
    local.get $u|36
    i64.const 4294967295
    i64.and
    local.set $u1|38
    local.get $v|37
    i64.const 4294967295
    i64.and
    local.set $v1|39
    local.get $u|36
    i64.const 32
    i64.shr_u
    local.set $u|36
    local.get $v|37
    i64.const 32
    i64.shr_u
    local.set $v|37
    local.get $u1|38
    local.get $v1|39
    i64.mul
    local.set $t|42
    local.get $t|42
    i64.const 4294967295
    i64.and
    local.set $w0|40
    local.get $u|36
    local.get $v1|39
    i64.mul
    local.get $t|42
    i64.const 32
    i64.shr_u
    i64.add
    local.set $t|42
    local.get $t|42
    i64.const 32
    i64.shr_u
    local.set $w1|41
    local.get $u1|38
    local.get $v|37
    i64.mul
    local.get $t|42
    i64.const 4294967295
    i64.and
    i64.add
    local.set $t|42
    local.get $u|36
    local.get $v|37
    i64.mul
    local.get $w1|41
    i64.add
    local.get $t|42
    i64.const 32
    i64.shr_u
    i64.add
    global.set $~lib/math/res128_hi
    local.get $t|42
    i64.const 32
    i64.shl
    local.get $w0|40
    i64.add
    br $~lib/math/umuldi|inlined.1
   end
   local.set $lo
   global.get $~lib/math/res128_hi
   local.set $hi
   local.get $hi
   i64.const 11
   i64.shr_u
   local.set $ahi|45
   local.get $lo
   i64.const 11
   i64.shr_u
   local.get $hi
   i64.const 53
   i64.shl
   i64.or
   local.set $alo
   f64.const 2.6469779601696886e-23
   i64.const -4267615245585081135
   f64.convert_i64_u
   f64.mul
   local.get $q1
   f64.convert_i64_u
   f64.mul
   f64.const 2.6469779601696886e-23
   i64.const -3958705157555305932
   f64.convert_i64_u
   f64.mul
   local.get $q0
   f64.convert_i64_u
   f64.mul
   f64.add
   i64.trunc_sat_f64_u
   local.set $blo|47
   local.get $ahi|45
   local.get $lo
   local.get $blo|47
   i64.lt_u
   i64.extend_i32_u
   i64.add
   f64.convert_i64_u
   global.set $~lib/math/rempio2_y0
   f64.const 5.421010862427522e-20
   local.get $alo
   local.get $blo|47
   i64.add
   f64.convert_i64_u
   f64.mul
   global.set $~lib/math/rempio2_y1
   local.get $shift|35
   br $~lib/math/pio2_right|inlined.0
  end
  i64.const 52
  i64.shl
  i64.sub
  local.set $shifter
  local.get $u
  local.get $rhi
  i64.xor
  i64.const -9223372036854775808
  i64.and
  local.set $signbit
  local.get $shifter
  local.get $signbit
  i64.or
  f64.reinterpret_i64
  local.set $coeff
  global.get $~lib/math/rempio2_y0
  local.get $coeff
  f64.mul
  global.set $~lib/math/rempio2_y0
  global.get $~lib/math/rempio2_y1
  local.get $coeff
  f64.mul
  global.set $~lib/math/rempio2_y1
  local.get $q
  i32.wrap_i64
  return
 )
 (func $~lib/math/NativeMath.sin (param $x f64) (result f64)
  (local $u i64)
  (local $ux i32)
  (local $sign i32)
  (local $x|4 f64)
  (local $y f64)
  (local $iy i32)
  (local $z f64)
  (local $w f64)
  (local $r f64)
  (local $v f64)
  (local $x|11 f64)
  (local $u|12 i64)
  (local $sign|13 i32)
  (local $ix i32)
  (local $q i32)
  (local $z|16 f64)
  (local $y0 f64)
  (local $y1 f64)
  (local $q|19 f64)
  (local $r|20 f64)
  (local $w|21 f64)
  (local $j i32)
  (local $y0|23 f64)
  (local $hi i32)
  (local $i i32)
  (local $t f64)
  (local $t|27 f64)
  (local $y1|28 f64)
  (local $q|29 i32)
  (local $n i32)
  (local $y0|31 f64)
  (local $y1|32 f64)
  (local $x|33 f64)
  (local $y|34 f64)
  (local $z|35 f64)
  (local $w|36 f64)
  (local $r|37 f64)
  (local $hz f64)
  (local $x|39 f64)
  (local $y|40 f64)
  (local $iy|41 i32)
  (local $z|42 f64)
  (local $w|43 f64)
  (local $r|44 f64)
  (local $v|45 f64)
  local.get $x
  i64.reinterpret_f64
  local.set $u
  local.get $u
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $ux
  local.get $ux
  i32.const 31
  i32.shr_u
  local.set $sign
  local.get $ux
  i32.const 2147483647
  i32.and
  local.set $ux
  local.get $ux
  i32.const 1072243195
  i32.le_u
  if
   local.get $ux
   i32.const 1045430272
   i32.lt_u
   if
    local.get $x
    return
   end
   block $~lib/math/sin_kern|inlined.0 (result f64)
    local.get $x
    local.set $x|4
    f64.const 0
    local.set $y
    i32.const 0
    local.set $iy
    local.get $x|4
    local.get $x|4
    f64.mul
    local.set $z
    local.get $z
    local.get $z
    f64.mul
    local.set $w
    f64.const 0.00833333333332249
    local.get $z
    f64.const -1.984126982985795e-04
    local.get $z
    f64.const 2.7557313707070068e-06
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $z
    local.get $w
    f64.mul
    f64.const -2.5050760253406863e-08
    local.get $z
    f64.const 1.58969099521155e-10
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $r
    local.get $z
    local.get $x|4
    f64.mul
    local.set $v
    local.get $iy
    i32.eqz
    if
     local.get $x|4
     local.get $v
     f64.const -0.16666666666666632
     local.get $z
     local.get $r
     f64.mul
     f64.add
     f64.mul
     f64.add
     br $~lib/math/sin_kern|inlined.0
    else
     local.get $x|4
     local.get $z
     f64.const 0.5
     local.get $y
     f64.mul
     local.get $v
     local.get $r
     f64.mul
     f64.sub
     f64.mul
     local.get $y
     f64.sub
     local.get $v
     f64.const -0.16666666666666632
     f64.mul
     f64.sub
     f64.sub
     br $~lib/math/sin_kern|inlined.0
    end
    unreachable
   end
   return
  end
  local.get $ux
  i32.const 2146435072
  i32.ge_u
  if
   local.get $x
   local.get $x
   f64.sub
   return
  end
  block $~lib/math/rempio2|inlined.0 (result i32)
   local.get $x
   local.set $x|11
   local.get $u
   local.set $u|12
   local.get $sign
   local.set $sign|13
   local.get $u|12
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const 2147483647
   i32.and
   local.set $ix
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   local.get $ix
   i32.const 1073928572
   i32.lt_u
   if
    i32.const 1
    local.set $q
    local.get $sign|13
    i32.eqz
    if
     local.get $x|11
     f64.const 1.5707963267341256
     f64.sub
     local.set $z|16
     local.get $ix
     i32.const 1073291771
     i32.ne
     if
      local.get $z|16
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $y0
      local.get $z|16
      local.get $y0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $y1
     else
      local.get $z|16
      f64.const 6.077100506303966e-11
      f64.sub
      local.set $z|16
      local.get $z|16
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $y0
      local.get $z|16
      local.get $y0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $y1
     end
    else
     local.get $x|11
     f64.const 1.5707963267341256
     f64.add
     local.set $z|16
     local.get $ix
     i32.const 1073291771
     i32.ne
     if
      local.get $z|16
      f64.const 6.077100506506192e-11
      f64.add
      local.set $y0
      local.get $z|16
      local.get $y0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.add
      local.set $y1
     else
      local.get $z|16
      f64.const 6.077100506303966e-11
      f64.add
      local.set $z|16
      local.get $z|16
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $y0
      local.get $z|16
      local.get $y0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $y1
     end
     i32.const -1
     local.set $q
    end
    local.get $y0
    global.set $~lib/math/rempio2_y0
    local.get $y1
    global.set $~lib/math/rempio2_y1
    local.get $q
    br $~lib/math/rempio2|inlined.0
   end
   local.get $ix
   i32.const 1094263291
   i32.lt_u
   if
    local.get $x|11
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.set $q|19
    local.get $x|11
    local.get $q|19
    f64.const 1.5707963267341256
    f64.mul
    f64.sub
    local.set $r|20
    local.get $q|19
    f64.const 6.077100506506192e-11
    f64.mul
    local.set $w|21
    local.get $ix
    i32.const 20
    i32.shr_u
    local.set $j
    local.get $r|20
    local.get $w|21
    f64.sub
    local.set $y0|23
    local.get $y0|23
    i64.reinterpret_f64
    i64.const 32
    i64.shr_u
    i32.wrap_i64
    local.set $hi
    local.get $j
    local.get $hi
    i32.const 20
    i32.shr_u
    i32.const 2047
    i32.and
    i32.sub
    local.set $i
    local.get $i
    i32.const 16
    i32.gt_u
    if
     local.get $r|20
     local.set $t
     local.get $q|19
     f64.const 6.077100506303966e-11
     f64.mul
     local.set $w|21
     local.get $t
     local.get $w|21
     f64.sub
     local.set $r|20
     local.get $q|19
     f64.const 2.0222662487959506e-21
     f64.mul
     local.get $t
     local.get $r|20
     f64.sub
     local.get $w|21
     f64.sub
     f64.sub
     local.set $w|21
     local.get $r|20
     local.get $w|21
     f64.sub
     local.set $y0|23
     local.get $y0|23
     i64.reinterpret_f64
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     local.set $hi
     local.get $j
     local.get $hi
     i32.const 20
     i32.shr_u
     i32.const 2047
     i32.and
     i32.sub
     local.set $i
     local.get $i
     i32.const 49
     i32.gt_u
     if
      local.get $r|20
      local.set $t|27
      local.get $q|19
      f64.const 2.0222662487111665e-21
      f64.mul
      local.set $w|21
      local.get $t|27
      local.get $w|21
      f64.sub
      local.set $r|20
      local.get $q|19
      f64.const 8.4784276603689e-32
      f64.mul
      local.get $t|27
      local.get $r|20
      f64.sub
      local.get $w|21
      f64.sub
      f64.sub
      local.set $w|21
      local.get $r|20
      local.get $w|21
      f64.sub
      local.set $y0|23
     end
    end
    local.get $r|20
    local.get $y0|23
    f64.sub
    local.get $w|21
    f64.sub
    local.set $y1|28
    local.get $y0|23
    global.set $~lib/math/rempio2_y0
    local.get $y1|28
    global.set $~lib/math/rempio2_y1
    local.get $q|19
    i32.trunc_sat_f64_s
    br $~lib/math/rempio2|inlined.0
   end
   local.get $x|11
   local.get $u|12
   call $~lib/math/pio2_large_quot
   local.set $q|29
   i32.const 0
   local.get $q|29
   i32.sub
   local.get $q|29
   local.get $sign|13
   select
   br $~lib/math/rempio2|inlined.0
  end
  local.set $n
  global.get $~lib/math/rempio2_y0
  local.set $y0|31
  global.get $~lib/math/rempio2_y1
  local.set $y1|32
  local.get $n
  i32.const 1
  i32.and
  if (result f64)
   block $~lib/math/cos_kern|inlined.0 (result f64)
    local.get $y0|31
    local.set $x|33
    local.get $y1|32
    local.set $y|34
    local.get $x|33
    local.get $x|33
    f64.mul
    local.set $z|35
    local.get $z|35
    local.get $z|35
    f64.mul
    local.set $w|36
    local.get $z|35
    f64.const 0.0416666666666666
    local.get $z|35
    f64.const -0.001388888888887411
    local.get $z|35
    f64.const 2.480158728947673e-05
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    local.get $w|36
    local.get $w|36
    f64.mul
    f64.const -2.7557314351390663e-07
    local.get $z|35
    f64.const 2.087572321298175e-09
    local.get $z|35
    f64.const -1.1359647557788195e-11
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $r|37
    f64.const 0.5
    local.get $z|35
    f64.mul
    local.set $hz
    f64.const 1
    local.get $hz
    f64.sub
    local.set $w|36
    local.get $w|36
    f64.const 1
    local.get $w|36
    f64.sub
    local.get $hz
    f64.sub
    local.get $z|35
    local.get $r|37
    f64.mul
    local.get $x|33
    local.get $y|34
    f64.mul
    f64.sub
    f64.add
    f64.add
    br $~lib/math/cos_kern|inlined.0
   end
  else
   block $~lib/math/sin_kern|inlined.1 (result f64)
    local.get $y0|31
    local.set $x|39
    local.get $y1|32
    local.set $y|40
    i32.const 1
    local.set $iy|41
    local.get $x|39
    local.get $x|39
    f64.mul
    local.set $z|42
    local.get $z|42
    local.get $z|42
    f64.mul
    local.set $w|43
    f64.const 0.00833333333332249
    local.get $z|42
    f64.const -1.984126982985795e-04
    local.get $z|42
    f64.const 2.7557313707070068e-06
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $z|42
    local.get $w|43
    f64.mul
    f64.const -2.5050760253406863e-08
    local.get $z|42
    f64.const 1.58969099521155e-10
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $r|44
    local.get $z|42
    local.get $x|39
    f64.mul
    local.set $v|45
    local.get $iy|41
    i32.eqz
    if
     local.get $x|39
     local.get $v|45
     f64.const -0.16666666666666632
     local.get $z|42
     local.get $r|44
     f64.mul
     f64.add
     f64.mul
     f64.add
     br $~lib/math/sin_kern|inlined.1
    else
     local.get $x|39
     local.get $z|42
     f64.const 0.5
     local.get $y|40
     f64.mul
     local.get $v|45
     local.get $r|44
     f64.mul
     f64.sub
     f64.mul
     local.get $y|40
     f64.sub
     local.get $v|45
     f64.const -0.16666666666666632
     f64.mul
     f64.sub
     f64.sub
     br $~lib/math/sin_kern|inlined.1
    end
    unreachable
   end
  end
  local.set $x
  local.get $n
  i32.const 2
  i32.and
  if (result f64)
   local.get $x
   f64.neg
  else
   local.get $x
  end
  return
 )
 (func $Frontend/assembly/calculator/sin (param $a f64) (result f64)
  local.get $a
  call $~lib/math/NativeMath.sin
  return
 )
 (func $~lib/math/NativeMath.cos (param $x f64) (result f64)
  (local $u i64)
  (local $ux i32)
  (local $sign i32)
  (local $x|4 f64)
  (local $y f64)
  (local $z f64)
  (local $w f64)
  (local $r f64)
  (local $hz f64)
  (local $x|10 f64)
  (local $u|11 i64)
  (local $sign|12 i32)
  (local $ix i32)
  (local $q i32)
  (local $z|15 f64)
  (local $y0 f64)
  (local $y1 f64)
  (local $q|18 f64)
  (local $r|19 f64)
  (local $w|20 f64)
  (local $j i32)
  (local $y0|22 f64)
  (local $hi i32)
  (local $i i32)
  (local $t f64)
  (local $t|26 f64)
  (local $y1|27 f64)
  (local $q|28 i32)
  (local $n i32)
  (local $y0|30 f64)
  (local $y1|31 f64)
  (local $x|32 f64)
  (local $y|33 f64)
  (local $iy i32)
  (local $z|35 f64)
  (local $w|36 f64)
  (local $r|37 f64)
  (local $v f64)
  (local $x|39 f64)
  (local $y|40 f64)
  (local $z|41 f64)
  (local $w|42 f64)
  (local $r|43 f64)
  (local $hz|44 f64)
  local.get $x
  i64.reinterpret_f64
  local.set $u
  local.get $u
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $ux
  local.get $ux
  i32.const 31
  i32.shr_u
  local.set $sign
  local.get $ux
  i32.const 2147483647
  i32.and
  local.set $ux
  local.get $ux
  i32.const 1072243195
  i32.le_u
  if
   local.get $ux
   i32.const 1044816030
   i32.lt_u
   if
    f64.const 1
    return
   end
   block $~lib/math/cos_kern|inlined.1 (result f64)
    local.get $x
    local.set $x|4
    f64.const 0
    local.set $y
    local.get $x|4
    local.get $x|4
    f64.mul
    local.set $z
    local.get $z
    local.get $z
    f64.mul
    local.set $w
    local.get $z
    f64.const 0.0416666666666666
    local.get $z
    f64.const -0.001388888888887411
    local.get $z
    f64.const 2.480158728947673e-05
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    local.get $w
    local.get $w
    f64.mul
    f64.const -2.7557314351390663e-07
    local.get $z
    f64.const 2.087572321298175e-09
    local.get $z
    f64.const -1.1359647557788195e-11
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $r
    f64.const 0.5
    local.get $z
    f64.mul
    local.set $hz
    f64.const 1
    local.get $hz
    f64.sub
    local.set $w
    local.get $w
    f64.const 1
    local.get $w
    f64.sub
    local.get $hz
    f64.sub
    local.get $z
    local.get $r
    f64.mul
    local.get $x|4
    local.get $y
    f64.mul
    f64.sub
    f64.add
    f64.add
    br $~lib/math/cos_kern|inlined.1
   end
   return
  end
  local.get $ux
  i32.const 2146435072
  i32.ge_u
  if
   local.get $x
   local.get $x
   f64.sub
   return
  end
  block $~lib/math/rempio2|inlined.1 (result i32)
   local.get $x
   local.set $x|10
   local.get $u
   local.set $u|11
   local.get $sign
   local.set $sign|12
   local.get $u|11
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const 2147483647
   i32.and
   local.set $ix
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   local.get $ix
   i32.const 1073928572
   i32.lt_u
   if
    i32.const 1
    local.set $q
    local.get $sign|12
    i32.eqz
    if
     local.get $x|10
     f64.const 1.5707963267341256
     f64.sub
     local.set $z|15
     local.get $ix
     i32.const 1073291771
     i32.ne
     if
      local.get $z|15
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $y0
      local.get $z|15
      local.get $y0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $y1
     else
      local.get $z|15
      f64.const 6.077100506303966e-11
      f64.sub
      local.set $z|15
      local.get $z|15
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $y0
      local.get $z|15
      local.get $y0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $y1
     end
    else
     local.get $x|10
     f64.const 1.5707963267341256
     f64.add
     local.set $z|15
     local.get $ix
     i32.const 1073291771
     i32.ne
     if
      local.get $z|15
      f64.const 6.077100506506192e-11
      f64.add
      local.set $y0
      local.get $z|15
      local.get $y0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.add
      local.set $y1
     else
      local.get $z|15
      f64.const 6.077100506303966e-11
      f64.add
      local.set $z|15
      local.get $z|15
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $y0
      local.get $z|15
      local.get $y0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $y1
     end
     i32.const -1
     local.set $q
    end
    local.get $y0
    global.set $~lib/math/rempio2_y0
    local.get $y1
    global.set $~lib/math/rempio2_y1
    local.get $q
    br $~lib/math/rempio2|inlined.1
   end
   local.get $ix
   i32.const 1094263291
   i32.lt_u
   if
    local.get $x|10
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.set $q|18
    local.get $x|10
    local.get $q|18
    f64.const 1.5707963267341256
    f64.mul
    f64.sub
    local.set $r|19
    local.get $q|18
    f64.const 6.077100506506192e-11
    f64.mul
    local.set $w|20
    local.get $ix
    i32.const 20
    i32.shr_u
    local.set $j
    local.get $r|19
    local.get $w|20
    f64.sub
    local.set $y0|22
    local.get $y0|22
    i64.reinterpret_f64
    i64.const 32
    i64.shr_u
    i32.wrap_i64
    local.set $hi
    local.get $j
    local.get $hi
    i32.const 20
    i32.shr_u
    i32.const 2047
    i32.and
    i32.sub
    local.set $i
    local.get $i
    i32.const 16
    i32.gt_u
    if
     local.get $r|19
     local.set $t
     local.get $q|18
     f64.const 6.077100506303966e-11
     f64.mul
     local.set $w|20
     local.get $t
     local.get $w|20
     f64.sub
     local.set $r|19
     local.get $q|18
     f64.const 2.0222662487959506e-21
     f64.mul
     local.get $t
     local.get $r|19
     f64.sub
     local.get $w|20
     f64.sub
     f64.sub
     local.set $w|20
     local.get $r|19
     local.get $w|20
     f64.sub
     local.set $y0|22
     local.get $y0|22
     i64.reinterpret_f64
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     local.set $hi
     local.get $j
     local.get $hi
     i32.const 20
     i32.shr_u
     i32.const 2047
     i32.and
     i32.sub
     local.set $i
     local.get $i
     i32.const 49
     i32.gt_u
     if
      local.get $r|19
      local.set $t|26
      local.get $q|18
      f64.const 2.0222662487111665e-21
      f64.mul
      local.set $w|20
      local.get $t|26
      local.get $w|20
      f64.sub
      local.set $r|19
      local.get $q|18
      f64.const 8.4784276603689e-32
      f64.mul
      local.get $t|26
      local.get $r|19
      f64.sub
      local.get $w|20
      f64.sub
      f64.sub
      local.set $w|20
      local.get $r|19
      local.get $w|20
      f64.sub
      local.set $y0|22
     end
    end
    local.get $r|19
    local.get $y0|22
    f64.sub
    local.get $w|20
    f64.sub
    local.set $y1|27
    local.get $y0|22
    global.set $~lib/math/rempio2_y0
    local.get $y1|27
    global.set $~lib/math/rempio2_y1
    local.get $q|18
    i32.trunc_sat_f64_s
    br $~lib/math/rempio2|inlined.1
   end
   local.get $x|10
   local.get $u|11
   call $~lib/math/pio2_large_quot
   local.set $q|28
   i32.const 0
   local.get $q|28
   i32.sub
   local.get $q|28
   local.get $sign|12
   select
   br $~lib/math/rempio2|inlined.1
  end
  local.set $n
  global.get $~lib/math/rempio2_y0
  local.set $y0|30
  global.get $~lib/math/rempio2_y1
  local.set $y1|31
  local.get $n
  i32.const 1
  i32.and
  if (result f64)
   block $~lib/math/sin_kern|inlined.2 (result f64)
    local.get $y0|30
    local.set $x|32
    local.get $y1|31
    local.set $y|33
    i32.const 1
    local.set $iy
    local.get $x|32
    local.get $x|32
    f64.mul
    local.set $z|35
    local.get $z|35
    local.get $z|35
    f64.mul
    local.set $w|36
    f64.const 0.00833333333332249
    local.get $z|35
    f64.const -1.984126982985795e-04
    local.get $z|35
    f64.const 2.7557313707070068e-06
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $z|35
    local.get $w|36
    f64.mul
    f64.const -2.5050760253406863e-08
    local.get $z|35
    f64.const 1.58969099521155e-10
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $r|37
    local.get $z|35
    local.get $x|32
    f64.mul
    local.set $v
    local.get $iy
    i32.eqz
    if
     local.get $x|32
     local.get $v
     f64.const -0.16666666666666632
     local.get $z|35
     local.get $r|37
     f64.mul
     f64.add
     f64.mul
     f64.add
     br $~lib/math/sin_kern|inlined.2
    else
     local.get $x|32
     local.get $z|35
     f64.const 0.5
     local.get $y|33
     f64.mul
     local.get $v
     local.get $r|37
     f64.mul
     f64.sub
     f64.mul
     local.get $y|33
     f64.sub
     local.get $v
     f64.const -0.16666666666666632
     f64.mul
     f64.sub
     f64.sub
     br $~lib/math/sin_kern|inlined.2
    end
    unreachable
   end
  else
   block $~lib/math/cos_kern|inlined.2 (result f64)
    local.get $y0|30
    local.set $x|39
    local.get $y1|31
    local.set $y|40
    local.get $x|39
    local.get $x|39
    f64.mul
    local.set $z|41
    local.get $z|41
    local.get $z|41
    f64.mul
    local.set $w|42
    local.get $z|41
    f64.const 0.0416666666666666
    local.get $z|41
    f64.const -0.001388888888887411
    local.get $z|41
    f64.const 2.480158728947673e-05
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    local.get $w|42
    local.get $w|42
    f64.mul
    f64.const -2.7557314351390663e-07
    local.get $z|41
    f64.const 2.087572321298175e-09
    local.get $z|41
    f64.const -1.1359647557788195e-11
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $r|43
    f64.const 0.5
    local.get $z|41
    f64.mul
    local.set $hz|44
    f64.const 1
    local.get $hz|44
    f64.sub
    local.set $w|42
    local.get $w|42
    f64.const 1
    local.get $w|42
    f64.sub
    local.get $hz|44
    f64.sub
    local.get $z|41
    local.get $r|43
    f64.mul
    local.get $x|39
    local.get $y|40
    f64.mul
    f64.sub
    f64.add
    f64.add
    br $~lib/math/cos_kern|inlined.2
   end
  end
  local.set $x
  local.get $n
  i32.const 1
  i32.add
  i32.const 2
  i32.and
  if (result f64)
   local.get $x
   f64.neg
  else
   local.get $x
  end
  return
 )
 (func $Frontend/assembly/calculator/cos (param $a f64) (result f64)
  local.get $a
  call $~lib/math/NativeMath.cos
  return
 )
 (func $~lib/math/tan_kern (param $x f64) (param $y f64) (param $iy i32) (result f64)
  (local $z f64)
  (local $r f64)
  (local $v f64)
  (local $w f64)
  (local $s f64)
  (local $hx i32)
  (local $ix i32)
  (local $big i32)
  (local $a f64)
  (local $t f64)
  local.get $x
  i64.reinterpret_f64
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $hx
  local.get $hx
  i32.const 2147483647
  i32.and
  local.set $ix
  local.get $ix
  i32.const 1072010280
  i32.ge_s
  local.set $big
  local.get $big
  if
   local.get $hx
   i32.const 0
   i32.lt_s
   if
    local.get $x
    f64.neg
    local.set $x
    local.get $y
    f64.neg
    local.set $y
   end
   f64.const 0.7853981633974483
   local.get $x
   f64.sub
   local.set $z
   f64.const 3.061616997868383e-17
   local.get $y
   f64.sub
   local.set $w
   local.get $z
   local.get $w
   f64.add
   local.set $x
   f64.const 0
   local.set $y
  end
  local.get $x
  local.get $x
  f64.mul
  local.set $z
  local.get $z
  local.get $z
  f64.mul
  local.set $w
  f64.const 0.13333333333320124
  local.get $w
  f64.const 0.021869488294859542
  local.get $w
  f64.const 3.5920791075913124e-03
  local.get $w
  f64.const 5.880412408202641e-04
  local.get $w
  f64.const 7.817944429395571e-05
  local.get $w
  f64.const -1.8558637485527546e-05
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  local.set $r
  local.get $z
  f64.const 0.05396825397622605
  local.get $w
  f64.const 0.0088632398235993
  local.get $w
  f64.const 1.4562094543252903e-03
  local.get $w
  f64.const 2.464631348184699e-04
  local.get $w
  f64.const 7.140724913826082e-05
  local.get $w
  f64.const 2.590730518636337e-05
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  local.set $v
  local.get $z
  local.get $x
  f64.mul
  local.set $s
  local.get $y
  local.get $z
  local.get $s
  local.get $r
  local.get $v
  f64.add
  f64.mul
  local.get $y
  f64.add
  f64.mul
  f64.add
  local.set $r
  local.get $r
  f64.const 0.3333333333333341
  local.get $s
  f64.mul
  f64.add
  local.set $r
  local.get $x
  local.get $r
  f64.add
  local.set $w
  local.get $big
  if
   local.get $iy
   f64.convert_i32_s
   local.set $v
   f64.const 1
   local.get $hx
   i32.const 30
   i32.shr_s
   i32.const 2
   i32.and
   f64.convert_i32_s
   f64.sub
   local.get $v
   f64.const 2
   local.get $x
   local.get $w
   local.get $w
   f64.mul
   local.get $w
   local.get $v
   f64.add
   f64.div
   local.get $r
   f64.sub
   f64.sub
   f64.mul
   f64.sub
   f64.mul
   return
  end
  local.get $iy
  i32.const 1
  i32.eq
  if
   local.get $w
   return
  end
  local.get $w
  local.set $z
  local.get $z
  i64.reinterpret_f64
  i64.const -4294967296
  i64.and
  f64.reinterpret_i64
  local.set $z
  local.get $r
  local.get $z
  local.get $x
  f64.sub
  f64.sub
  local.set $v
  f64.const 1
  f64.neg
  local.get $w
  f64.div
  local.tee $a
  local.set $t
  local.get $t
  i64.reinterpret_f64
  i64.const -4294967296
  i64.and
  f64.reinterpret_i64
  local.set $t
  f64.const 1
  local.get $t
  local.get $z
  f64.mul
  f64.add
  local.set $s
  local.get $t
  local.get $a
  local.get $s
  local.get $t
  local.get $v
  f64.mul
  f64.add
  f64.mul
  f64.add
  return
 )
 (func $~lib/math/NativeMath.tan (param $x f64) (result f64)
  (local $u i64)
  (local $ux i32)
  (local $sign i32)
  (local $x|4 f64)
  (local $u|5 i64)
  (local $sign|6 i32)
  (local $ix i32)
  (local $q i32)
  (local $z f64)
  (local $y0 f64)
  (local $y1 f64)
  (local $q|12 f64)
  (local $r f64)
  (local $w f64)
  (local $j i32)
  (local $y0|16 f64)
  (local $hi i32)
  (local $i i32)
  (local $t f64)
  (local $t|20 f64)
  (local $y1|21 f64)
  (local $q|22 i32)
  (local $n i32)
  local.get $x
  i64.reinterpret_f64
  local.set $u
  local.get $u
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $ux
  local.get $ux
  i32.const 31
  i32.shr_u
  local.set $sign
  local.get $ux
  i32.const 2147483647
  i32.and
  local.set $ux
  local.get $ux
  i32.const 1072243195
  i32.le_u
  if
   local.get $ux
   i32.const 1044381696
   i32.lt_u
   if
    local.get $x
    return
   end
   local.get $x
   f64.const 0
   i32.const 1
   call $~lib/math/tan_kern
   return
  end
  local.get $ux
  i32.const 2146435072
  i32.ge_u
  if
   local.get $x
   local.get $x
   f64.sub
   return
  end
  block $~lib/math/rempio2|inlined.2 (result i32)
   local.get $x
   local.set $x|4
   local.get $u
   local.set $u|5
   local.get $sign
   local.set $sign|6
   local.get $u|5
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const 2147483647
   i32.and
   local.set $ix
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   local.get $ix
   i32.const 1073928572
   i32.lt_u
   if
    i32.const 1
    local.set $q
    local.get $sign|6
    i32.eqz
    if
     local.get $x|4
     f64.const 1.5707963267341256
     f64.sub
     local.set $z
     local.get $ix
     i32.const 1073291771
     i32.ne
     if
      local.get $z
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $y0
      local.get $z
      local.get $y0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $y1
     else
      local.get $z
      f64.const 6.077100506303966e-11
      f64.sub
      local.set $z
      local.get $z
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $y0
      local.get $z
      local.get $y0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $y1
     end
    else
     local.get $x|4
     f64.const 1.5707963267341256
     f64.add
     local.set $z
     local.get $ix
     i32.const 1073291771
     i32.ne
     if
      local.get $z
      f64.const 6.077100506506192e-11
      f64.add
      local.set $y0
      local.get $z
      local.get $y0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.add
      local.set $y1
     else
      local.get $z
      f64.const 6.077100506303966e-11
      f64.add
      local.set $z
      local.get $z
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $y0
      local.get $z
      local.get $y0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $y1
     end
     i32.const -1
     local.set $q
    end
    local.get $y0
    global.set $~lib/math/rempio2_y0
    local.get $y1
    global.set $~lib/math/rempio2_y1
    local.get $q
    br $~lib/math/rempio2|inlined.2
   end
   local.get $ix
   i32.const 1094263291
   i32.lt_u
   if
    local.get $x|4
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.set $q|12
    local.get $x|4
    local.get $q|12
    f64.const 1.5707963267341256
    f64.mul
    f64.sub
    local.set $r
    local.get $q|12
    f64.const 6.077100506506192e-11
    f64.mul
    local.set $w
    local.get $ix
    i32.const 20
    i32.shr_u
    local.set $j
    local.get $r
    local.get $w
    f64.sub
    local.set $y0|16
    local.get $y0|16
    i64.reinterpret_f64
    i64.const 32
    i64.shr_u
    i32.wrap_i64
    local.set $hi
    local.get $j
    local.get $hi
    i32.const 20
    i32.shr_u
    i32.const 2047
    i32.and
    i32.sub
    local.set $i
    local.get $i
    i32.const 16
    i32.gt_u
    if
     local.get $r
     local.set $t
     local.get $q|12
     f64.const 6.077100506303966e-11
     f64.mul
     local.set $w
     local.get $t
     local.get $w
     f64.sub
     local.set $r
     local.get $q|12
     f64.const 2.0222662487959506e-21
     f64.mul
     local.get $t
     local.get $r
     f64.sub
     local.get $w
     f64.sub
     f64.sub
     local.set $w
     local.get $r
     local.get $w
     f64.sub
     local.set $y0|16
     local.get $y0|16
     i64.reinterpret_f64
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     local.set $hi
     local.get $j
     local.get $hi
     i32.const 20
     i32.shr_u
     i32.const 2047
     i32.and
     i32.sub
     local.set $i
     local.get $i
     i32.const 49
     i32.gt_u
     if
      local.get $r
      local.set $t|20
      local.get $q|12
      f64.const 2.0222662487111665e-21
      f64.mul
      local.set $w
      local.get $t|20
      local.get $w
      f64.sub
      local.set $r
      local.get $q|12
      f64.const 8.4784276603689e-32
      f64.mul
      local.get $t|20
      local.get $r
      f64.sub
      local.get $w
      f64.sub
      f64.sub
      local.set $w
      local.get $r
      local.get $w
      f64.sub
      local.set $y0|16
     end
    end
    local.get $r
    local.get $y0|16
    f64.sub
    local.get $w
    f64.sub
    local.set $y1|21
    local.get $y0|16
    global.set $~lib/math/rempio2_y0
    local.get $y1|21
    global.set $~lib/math/rempio2_y1
    local.get $q|12
    i32.trunc_sat_f64_s
    br $~lib/math/rempio2|inlined.2
   end
   local.get $x|4
   local.get $u|5
   call $~lib/math/pio2_large_quot
   local.set $q|22
   i32.const 0
   local.get $q|22
   i32.sub
   local.get $q|22
   local.get $sign|6
   select
   br $~lib/math/rempio2|inlined.2
  end
  local.set $n
  global.get $~lib/math/rempio2_y0
  global.get $~lib/math/rempio2_y1
  i32.const 1
  local.get $n
  i32.const 1
  i32.and
  i32.const 1
  i32.shl
  i32.sub
  call $~lib/math/tan_kern
  return
 )
 (func $Frontend/assembly/calculator/tan (param $a f64) (result f64)
  local.get $a
  call $~lib/math/NativeMath.tan
  return
 )
 (func $~lib/math/R (param $z f64) (result f64)
  (local $p f64)
  (local $q f64)
  local.get $z
  f64.const 0.16666666666666666
  local.get $z
  f64.const -0.3255658186224009
  local.get $z
  f64.const 0.20121253213486293
  local.get $z
  f64.const -0.04005553450067941
  local.get $z
  f64.const 7.915349942898145e-04
  local.get $z
  f64.const 3.479331075960212e-05
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  local.set $p
  f64.const 1
  local.get $z
  f64.const -2.403394911734414
  local.get $z
  f64.const 2.0209457602335057
  local.get $z
  f64.const -0.6882839716054533
  local.get $z
  f64.const 0.07703815055590194
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  local.set $q
  local.get $p
  local.get $q
  f64.div
  return
 )
 (func $~lib/math/NativeMath.asin (param $x f64) (result f64)
  (local $hx i32)
  (local $ix i32)
  (local $lx i32)
  (local $z f64)
  (local $s f64)
  (local $r f64)
  (local $f f64)
  (local $c f64)
  local.get $x
  i64.reinterpret_f64
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $hx
  local.get $hx
  i32.const 2147483647
  i32.and
  local.set $ix
  local.get $ix
  i32.const 1072693248
  i32.ge_u
  if
   local.get $x
   i64.reinterpret_f64
   i32.wrap_i64
   local.set $lx
   local.get $ix
   i32.const 1072693248
   i32.sub
   local.get $lx
   i32.or
   i32.const 0
   i32.eq
   if
    local.get $x
    f64.const 1.5707963267948966
    f64.mul
    f32.const 7.52316384526264e-37
    f64.promote_f32
    f64.add
    return
   end
   f64.const 0
   local.get $x
   local.get $x
   f64.sub
   f64.div
   return
  end
  local.get $ix
  i32.const 1071644672
  i32.lt_u
  if
   local.get $ix
   i32.const 1045430272
   i32.lt_u
   if (result i32)
    local.get $ix
    i32.const 1048576
    i32.ge_u
   else
    i32.const 0
   end
   if
    local.get $x
    return
   end
   local.get $x
   local.get $x
   local.get $x
   local.get $x
   f64.mul
   call $~lib/math/R
   f64.mul
   f64.add
   return
  end
  f64.const 0.5
  local.get $x
  f64.abs
  f64.const 0.5
  f64.mul
  f64.sub
  local.set $z
  local.get $z
  f64.sqrt
  local.set $s
  local.get $z
  call $~lib/math/R
  local.set $r
  local.get $ix
  i32.const 1072640819
  i32.ge_u
  if
   f64.const 1.5707963267948966
   f64.const 2
   local.get $s
   local.get $s
   local.get $r
   f64.mul
   f64.add
   f64.mul
   f64.const 6.123233995736766e-17
   f64.sub
   f64.sub
   local.set $x
  else
   local.get $s
   i64.reinterpret_f64
   i64.const -4294967296
   i64.and
   f64.reinterpret_i64
   local.set $f
   local.get $z
   local.get $f
   local.get $f
   f64.mul
   f64.sub
   local.get $s
   local.get $f
   f64.add
   f64.div
   local.set $c
   f64.const 0.5
   f64.const 1.5707963267948966
   f64.mul
   f64.const 2
   local.get $s
   f64.mul
   local.get $r
   f64.mul
   f64.const 6.123233995736766e-17
   f64.const 2
   local.get $c
   f64.mul
   f64.sub
   f64.sub
   f64.const 0.5
   f64.const 1.5707963267948966
   f64.mul
   f64.const 2
   local.get $f
   f64.mul
   f64.sub
   f64.sub
   f64.sub
   local.set $x
  end
  local.get $x
  f64.neg
  local.get $x
  local.get $hx
  i32.const 0
  i32.lt_s
  select
  return
 )
 (func $Frontend/assembly/calculator/asin (param $a f64) (result f64)
  local.get $a
  call $~lib/math/NativeMath.asin
  return
 )
 (func $~lib/math/NativeMath.acos (param $x f64) (result f64)
  (local $hx i32)
  (local $ix i32)
  (local $lx i32)
  (local $s f64)
  (local $w f64)
  (local $z f64)
  (local $df f64)
  (local $c f64)
  local.get $x
  i64.reinterpret_f64
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $hx
  local.get $hx
  i32.const 2147483647
  i32.and
  local.set $ix
  local.get $ix
  i32.const 1072693248
  i32.ge_u
  if
   local.get $x
   i64.reinterpret_f64
   i32.wrap_i64
   local.set $lx
   local.get $ix
   i32.const 1072693248
   i32.sub
   local.get $lx
   i32.or
   i32.const 0
   i32.eq
   if
    local.get $hx
    i32.const 0
    i32.lt_s
    if
     f64.const 2
     f64.const 1.5707963267948966
     f64.mul
     f32.const 7.52316384526264e-37
     f64.promote_f32
     f64.add
     return
    end
    f64.const 0
    return
   end
   f64.const 0
   local.get $x
   local.get $x
   f64.sub
   f64.div
   return
  end
  local.get $ix
  i32.const 1071644672
  i32.lt_u
  if
   local.get $ix
   i32.const 1012924416
   i32.le_u
   if
    f64.const 1.5707963267948966
    f32.const 7.52316384526264e-37
    f64.promote_f32
    f64.add
    return
   end
   f64.const 1.5707963267948966
   local.get $x
   f64.const 6.123233995736766e-17
   local.get $x
   local.get $x
   local.get $x
   f64.mul
   call $~lib/math/R
   f64.mul
   f64.sub
   f64.sub
   f64.sub
   return
  end
  local.get $hx
  i32.const 0
  i32.lt_s
  if
   f64.const 0.5
   local.get $x
   f64.const 0.5
   f64.mul
   f64.add
   local.set $z
   local.get $z
   f64.sqrt
   local.set $s
   local.get $z
   call $~lib/math/R
   local.get $s
   f64.mul
   f64.const 6.123233995736766e-17
   f64.sub
   local.set $w
   f64.const 2
   f64.const 1.5707963267948966
   local.get $s
   local.get $w
   f64.add
   f64.sub
   f64.mul
   return
  end
  f64.const 0.5
  local.get $x
  f64.const 0.5
  f64.mul
  f64.sub
  local.set $z
  local.get $z
  f64.sqrt
  local.set $s
  local.get $s
  i64.reinterpret_f64
  i64.const -4294967296
  i64.and
  f64.reinterpret_i64
  local.set $df
  local.get $z
  local.get $df
  local.get $df
  f64.mul
  f64.sub
  local.get $s
  local.get $df
  f64.add
  f64.div
  local.set $c
  local.get $z
  call $~lib/math/R
  local.get $s
  f64.mul
  local.get $c
  f64.add
  local.set $w
  f64.const 2
  local.get $df
  local.get $w
  f64.add
  f64.mul
  return
 )
 (func $Frontend/assembly/calculator/acos (param $a f64) (result f64)
  local.get $a
  call $~lib/math/NativeMath.acos
  return
 )
 (func $~lib/math/NativeMath.atan (param $x f64) (result f64)
  (local $ix i32)
  (local $sx f64)
  (local $z f64)
  (local $id i32)
  (local $w f64)
  (local $s1 f64)
  (local $s2 f64)
  (local $s3 f64)
  (local $9 i32)
  local.get $x
  i64.reinterpret_f64
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $ix
  local.get $x
  local.set $sx
  local.get $ix
  i32.const 2147483647
  i32.and
  local.set $ix
  local.get $ix
  i32.const 1141899264
  i32.ge_u
  if
   local.get $x
   local.get $x
   f64.ne
   if
    local.get $x
    return
   end
   f64.const 1.5707963267948966
   f32.const 7.52316384526264e-37
   f64.promote_f32
   f64.add
   local.set $z
   local.get $z
   local.get $sx
   f64.copysign
   return
  end
  local.get $ix
  i32.const 1071382528
  i32.lt_u
  if
   local.get $ix
   i32.const 1044381696
   i32.lt_u
   if
    local.get $x
    return
   end
   i32.const -1
   local.set $id
  else
   local.get $x
   f64.abs
   local.set $x
   local.get $ix
   i32.const 1072889856
   i32.lt_u
   if
    local.get $ix
    i32.const 1072037888
    i32.lt_u
    if
     i32.const 0
     local.set $id
     f64.const 2
     local.get $x
     f64.mul
     f64.const 1
     f64.sub
     f64.const 2
     local.get $x
     f64.add
     f64.div
     local.set $x
    else
     i32.const 1
     local.set $id
     local.get $x
     f64.const 1
     f64.sub
     local.get $x
     f64.const 1
     f64.add
     f64.div
     local.set $x
    end
   else
    local.get $ix
    i32.const 1073971200
    i32.lt_u
    if
     i32.const 2
     local.set $id
     local.get $x
     f64.const 1.5
     f64.sub
     f64.const 1
     f64.const 1.5
     local.get $x
     f64.mul
     f64.add
     f64.div
     local.set $x
    else
     i32.const 3
     local.set $id
     f64.const -1
     local.get $x
     f64.div
     local.set $x
    end
   end
  end
  local.get $x
  local.get $x
  f64.mul
  local.set $z
  local.get $z
  local.get $z
  f64.mul
  local.set $w
  local.get $z
  f64.const 0.3333333333333293
  local.get $w
  f64.const 0.14285714272503466
  local.get $w
  f64.const 0.09090887133436507
  local.get $w
  f64.const 0.06661073137387531
  local.get $w
  f64.const 0.049768779946159324
  local.get $w
  f64.const 0.016285820115365782
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  local.set $s1
  local.get $w
  f64.const -0.19999999999876483
  local.get $w
  f64.const -0.11111110405462356
  local.get $w
  f64.const -0.0769187620504483
  local.get $w
  f64.const -0.058335701337905735
  local.get $w
  f64.const -0.036531572744216916
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  local.set $s2
  local.get $x
  local.get $s1
  local.get $s2
  f64.add
  f64.mul
  local.set $s3
  local.get $id
  i32.const 0
  i32.lt_s
  if
   local.get $x
   local.get $s3
   f64.sub
   return
  end
  block $break|0
   block $case4|0
    block $case3|0
     block $case2|0
      block $case1|0
       block $case0|0
        local.get $id
        local.set $9
        local.get $9
        i32.const 0
        i32.eq
        br_if $case0|0
        local.get $9
        i32.const 1
        i32.eq
        br_if $case1|0
        local.get $9
        i32.const 2
        i32.eq
        br_if $case2|0
        local.get $9
        i32.const 3
        i32.eq
        br_if $case3|0
        br $case4|0
       end
       f64.const 0.4636476090008061
       local.get $s3
       f64.const 2.2698777452961687e-17
       f64.sub
       local.get $x
       f64.sub
       f64.sub
       local.set $z
       br $break|0
      end
      f64.const 0.7853981633974483
      local.get $s3
      f64.const 3.061616997868383e-17
      f64.sub
      local.get $x
      f64.sub
      f64.sub
      local.set $z
      br $break|0
     end
     f64.const 0.982793723247329
     local.get $s3
     f64.const 1.3903311031230998e-17
     f64.sub
     local.get $x
     f64.sub
     f64.sub
     local.set $z
     br $break|0
    end
    f64.const 1.5707963267948966
    local.get $s3
    f64.const 6.123233995736766e-17
    f64.sub
    local.get $x
    f64.sub
    f64.sub
    local.set $z
    br $break|0
   end
   unreachable
  end
  local.get $z
  local.get $sx
  f64.copysign
  return
 )
 (func $Frontend/assembly/calculator/atan (param $a f64) (result f64)
  local.get $a
  call $~lib/math/NativeMath.atan
  return
 )
 (func $Frontend/assembly/calculator/power (param $a f64) (param $b f64) (result f64)
  local.get $b
  f64.const 0
  f64.eq
  if
   f64.const 1
   return
  end
  local.get $a
  f64.const 0
  f64.eq
  if
   f64.const 0
   return
  end
  local.get $a
  local.get $a
  local.get $b
  f64.const 1
  f64.sub
  call $Frontend/assembly/calculator/power
  f64.mul
  return
 )
 (func $Frontend/assembly/calculator/factorial (param $a f64) (result f64)
  local.get $a
  f64.const 0
  f64.eq
  if
   f64.const 1
   return
  end
  local.get $a
  local.get $a
  f64.const 1
  f64.sub
  call $Frontend/assembly/calculator/factorial
  f64.mul
  return
 )
 (func $~lib/rt/itcms/Object#set:nextWithColor (param $this i32) (param $nextWithColor i32)
  local.get $this
  local.get $nextWithColor
  i32.store offset=4
 )
 (func $~lib/rt/itcms/Object#set:prev (param $this i32) (param $prev i32)
  local.get $this
  local.get $prev
  i32.store offset=8
 )
 (func $~lib/rt/itcms/initLazy (param $space i32) (result i32)
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:prev
  local.get $space
  return
 )
 (func $~lib/rt/itcms/Object#get:nextWithColor (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/rt/itcms/Object#get:next (param $this i32) (result i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  return
 )
 (func $~lib/rt/itcms/Object#get:color (param $this i32) (result i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.and
  return
 )
 (func $~lib/rt/itcms/visitRoots (param $cookie i32)
  (local $pn i32)
  (local $iter i32)
  local.get $cookie
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.set $pn
  local.get $pn
  call $~lib/rt/itcms/Object#get:next
  local.set $iter
  loop $while-continue|0
   local.get $iter
   local.get $pn
   i32.ne
   if
    i32.const 1
    drop
    local.get $iter
    call $~lib/rt/itcms/Object#get:color
    i32.const 3
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 6704
     i32.const 160
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $iter
    i32.const 20
    i32.add
    local.get $cookie
    call $~lib/rt/__visit_members
    local.get $iter
    call $~lib/rt/itcms/Object#get:next
    local.set $iter
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (param $this i32) (param $color i32)
  local.get $this
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $color
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#get:prev (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $~lib/rt/itcms/Object#set:next (param $this i32) (param $obj i32)
  local.get $this
  local.get $obj
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.and
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#unlink (param $this i32)
  (local $next i32)
  (local $prev i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:next
  local.set $next
  local.get $next
  i32.const 0
  i32.eq
  if
   i32.const 1
   drop
   local.get $this
   call $~lib/rt/itcms/Object#get:prev
   i32.const 0
   i32.eq
   if (result i32)
    local.get $this
    global.get $~lib/memory/__heap_base
    i32.lt_u
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 6704
    i32.const 128
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $this
  call $~lib/rt/itcms/Object#get:prev
  local.set $prev
  i32.const 1
  drop
  local.get $prev
  i32.eqz
  if
   i32.const 0
   i32.const 6704
   i32.const 132
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $next
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $next
  call $~lib/rt/itcms/Object#set:next
 )
 (func $~lib/rt/itcms/Object#get:rtId (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/shared/typeinfo/Typeinfo#get:flags (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/rt/__typeinfo (param $id i32) (result i32)
  (local $ptr i32)
  global.get $~lib/rt/__rtti_base
  local.set $ptr
  local.get $id
  local.get $ptr
  i32.load
  i32.gt_u
  if
   i32.const 6832
   i32.const 6896
   i32.const 21
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.get $ptr
  i32.const 4
  i32.add
  local.get $id
  i32.const 4
  i32.mul
  i32.add
  call $~lib/shared/typeinfo/Typeinfo#get:flags
  return
 )
 (func $~lib/rt/itcms/Object#get:isPointerfree (param $this i32) (result i32)
  (local $rtId i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:rtId
  local.set $rtId
  local.get $rtId
  i32.const 2
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $rtId
   call $~lib/rt/__typeinfo
   i32.const 32
   i32.and
   i32.const 0
   i32.ne
  end
  return
 )
 (func $~lib/rt/itcms/Object#linkTo (param $this i32) (param $list i32) (param $withColor i32)
  (local $prev i32)
  local.get $list
  call $~lib/rt/itcms/Object#get:prev
  local.set $prev
  local.get $this
  local.get $list
  local.get $withColor
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $this
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $this
  call $~lib/rt/itcms/Object#set:next
  local.get $list
  local.get $this
  call $~lib/rt/itcms/Object#set:prev
 )
 (func $~lib/rt/itcms/Object#makeGray (param $this i32)
  (local $1 i32)
  local.get $this
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $this
   call $~lib/rt/itcms/Object#get:prev
   local.tee $1
   i32.eqz
   if (result i32)
    i32.const 0
    i32.const 6704
    i32.const 148
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   else
    local.get $1
   end
   global.set $~lib/rt/itcms/iter
  end
  local.get $this
  call $~lib/rt/itcms/Object#unlink
  local.get $this
  global.get $~lib/rt/itcms/toSpace
  local.get $this
  call $~lib/rt/itcms/Object#get:isPointerfree
  if (result i32)
   global.get $~lib/rt/itcms/white
   i32.eqz
  else
   i32.const 2
  end
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/itcms/__visit (param $ptr i32) (param $cookie i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  i32.const 0
  drop
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/itcms/visitStack (param $cookie i32)
  (local $ptr i32)
  global.get $~lib/memory/__stack_pointer
  local.set $ptr
  loop $while-continue|0
   local.get $ptr
   global.get $~lib/memory/__heap_base
   i32.lt_u
   if
    local.get $ptr
    i32.load
    local.get $cookie
    call $~lib/rt/itcms/__visit
    local.get $ptr
    i32.const 4
    i32.add
    local.set $ptr
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/common/BLOCK#get:mmInfo (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/rt/itcms/Object#get:size (param $this i32) (result i32)
  i32.const 4
  local.get $this
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
  return
 )
 (func $~lib/rt/tlsf/Root#set:flMap (param $this i32) (param $flMap i32)
  local.get $this
  local.get $flMap
  i32.store
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (param $this i32) (param $mmInfo i32)
  local.get $this
  local.get $mmInfo
  i32.store
 )
 (func $~lib/rt/tlsf/Block#set:prev (param $this i32) (param $prev i32)
  local.get $this
  local.get $prev
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/Block#set:next (param $this i32) (param $next i32)
  local.get $this
  local.get $next
  i32.store offset=8
 )
 (func $~lib/rt/tlsf/Block#get:prev (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/rt/tlsf/Block#get:next (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $~lib/rt/tlsf/Root#get:flMap (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/rt/tlsf/removeBlock (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $6 i32)
  (local $7 i32)
  (local $boundedSize i32)
  (local $prev i32)
  (local $next i32)
  (local $root|11 i32)
  (local $fl|12 i32)
  (local $sl|13 i32)
  (local $root|14 i32)
  (local $fl|15 i32)
  (local $sl|16 i32)
  (local $head i32)
  (local $root|18 i32)
  (local $fl|19 i32)
  (local $slMap i32)
  (local $root|21 i32)
  (local $fl|22 i32)
  (local $slMap|23 i32)
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 6976
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 6976
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $6
   i32.const 1073741820
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_u
   select
   local.set $boundedSize
   i32.const 31
   local.get $boundedSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $boundedSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 6976
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  call $~lib/rt/tlsf/Block#get:prev
  local.set $prev
  local.get $block
  call $~lib/rt/tlsf/Block#get:next
  local.set $next
  local.get $prev
  if
   local.get $prev
   local.get $next
   call $~lib/rt/tlsf/Block#set:next
  end
  local.get $next
  if
   local.get $next
   local.get $prev
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $block
  block $~lib/rt/tlsf/GETHEAD|inlined.0 (result i32)
   local.get $root
   local.set $root|11
   local.get $fl
   local.set $fl|12
   local.get $sl
   local.set $sl|13
   local.get $root|11
   local.get $fl|12
   i32.const 4
   i32.shl
   local.get $sl|13
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
   br $~lib/rt/tlsf/GETHEAD|inlined.0
  end
  i32.eq
  if
   local.get $root
   local.set $root|14
   local.get $fl
   local.set $fl|15
   local.get $sl
   local.set $sl|16
   local.get $next
   local.set $head
   local.get $root|14
   local.get $fl|15
   i32.const 4
   i32.shl
   local.get $sl|16
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $head
   i32.store offset=96
   local.get $next
   i32.eqz
   if
    block $~lib/rt/tlsf/GETSL|inlined.0 (result i32)
     local.get $root
     local.set $root|18
     local.get $fl
     local.set $fl|19
     local.get $root|18
     local.get $fl|19
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     br $~lib/rt/tlsf/GETSL|inlined.0
    end
    local.set $slMap
    local.get $root
    local.set $root|21
    local.get $fl
    local.set $fl|22
    local.get $slMap
    i32.const 1
    local.get $sl
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.tee $slMap
    local.set $slMap|23
    local.get $root|21
    local.get $fl|22
    i32.const 2
    i32.shl
    i32.add
    local.get $slMap|23
    i32.store offset=4
    local.get $slMap
    i32.eqz
    if
     local.get $root
     local.get $root
     call $~lib/rt/tlsf/Root#get:flMap
     i32.const 1
     local.get $fl
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     call $~lib/rt/tlsf/Root#set:flMap
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $block|3 i32)
  (local $right i32)
  (local $rightInfo i32)
  (local $block|6 i32)
  (local $block|7 i32)
  (local $left i32)
  (local $leftInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $13 i32)
  (local $14 i32)
  (local $boundedSize i32)
  (local $root|16 i32)
  (local $fl|17 i32)
  (local $sl|18 i32)
  (local $head i32)
  (local $root|20 i32)
  (local $fl|21 i32)
  (local $sl|22 i32)
  (local $head|23 i32)
  (local $root|24 i32)
  (local $fl|25 i32)
  (local $root|26 i32)
  (local $fl|27 i32)
  (local $slMap i32)
  i32.const 1
  drop
  local.get $block
  i32.eqz
  if
   i32.const 0
   i32.const 6976
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 6976
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  block $~lib/rt/tlsf/GETRIGHT|inlined.0 (result i32)
   local.get $block
   local.set $block|3
   local.get $block|3
   i32.const 4
   i32.add
   local.get $block|3
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   br $~lib/rt/tlsf/GETRIGHT|inlined.0
  end
  local.set $right
  local.get $right
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $rightInfo
  local.get $rightInfo
  i32.const 1
  i32.and
  if
   local.get $root
   local.get $right
   call $~lib/rt/tlsf/removeBlock
   local.get $block
   local.get $blockInfo
   i32.const 4
   i32.add
   local.get $rightInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
   block $~lib/rt/tlsf/GETRIGHT|inlined.1 (result i32)
    local.get $block
    local.set $block|6
    local.get $block|6
    i32.const 4
    i32.add
    local.get $block|6
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.1
   end
   local.set $right
   local.get $right
   call $~lib/rt/common/BLOCK#get:mmInfo
   local.set $rightInfo
  end
  local.get $blockInfo
  i32.const 2
  i32.and
  if
   block $~lib/rt/tlsf/GETFREELEFT|inlined.0 (result i32)
    local.get $block
    local.set $block|7
    local.get $block|7
    i32.const 4
    i32.sub
    i32.load
    br $~lib/rt/tlsf/GETFREELEFT|inlined.0
   end
   local.set $left
   local.get $left
   call $~lib/rt/common/BLOCK#get:mmInfo
   local.set $leftInfo
   i32.const 1
   drop
   local.get $leftInfo
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 6976
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $root
   local.get $left
   call $~lib/rt/tlsf/removeBlock
   local.get $left
   local.set $block
   local.get $block
   local.get $leftInfo
   i32.const 4
   i32.add
   local.get $blockInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
  local.get $right
  local.get $rightInfo
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 6976
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  drop
  local.get $block
  i32.const 4
  i32.add
  local.get $size
  i32.add
  local.get $right
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 6976
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $right
  i32.const 4
  i32.sub
  local.get $block
  i32.store
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $13
   i32.const 1073741820
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_u
   select
   local.set $boundedSize
   i32.const 31
   local.get $boundedSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $boundedSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 6976
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  block $~lib/rt/tlsf/GETHEAD|inlined.1 (result i32)
   local.get $root
   local.set $root|16
   local.get $fl
   local.set $fl|17
   local.get $sl
   local.set $sl|18
   local.get $root|16
   local.get $fl|17
   i32.const 4
   i32.shl
   local.get $sl|18
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
   br $~lib/rt/tlsf/GETHEAD|inlined.1
  end
  local.set $head
  local.get $block
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $block
  local.get $head
  call $~lib/rt/tlsf/Block#set:next
  local.get $head
  if
   local.get $head
   local.get $block
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $root
  local.set $root|20
  local.get $fl
  local.set $fl|21
  local.get $sl
  local.set $sl|22
  local.get $block
  local.set $head|23
  local.get $root|20
  local.get $fl|21
  i32.const 4
  i32.shl
  local.get $sl|22
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $head|23
  i32.store offset=96
  local.get $root
  local.get $root
  call $~lib/rt/tlsf/Root#get:flMap
  i32.const 1
  local.get $fl
  i32.shl
  i32.or
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $root|26
  local.get $fl
  local.set $fl|27
  block $~lib/rt/tlsf/GETSL|inlined.1 (result i32)
   local.get $root
   local.set $root|24
   local.get $fl
   local.set $fl|25
   local.get $root|24
   local.get $fl|25
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=4
   br $~lib/rt/tlsf/GETSL|inlined.1
  end
  i32.const 1
  local.get $sl
  i32.shl
  i32.or
  local.set $slMap
  local.get $root|26
  local.get $fl|27
  i32.const 2
  i32.shl
  i32.add
  local.get $slMap
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $root i32) (param $start i32) (param $endU64 i64) (result i32)
  (local $end i32)
  (local $root|4 i32)
  (local $tail i32)
  (local $tailInfo i32)
  (local $size i32)
  (local $leftSize i32)
  (local $left i32)
  (local $root|10 i32)
  (local $tail|11 i32)
  local.get $endU64
  i32.wrap_i64
  local.set $end
  i32.const 1
  drop
  local.get $start
  i64.extend_i32_u
  local.get $endU64
  i64.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 6976
   i32.const 382
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $start
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $start
  local.get $end
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $end
  block $~lib/rt/tlsf/GETTAIL|inlined.0 (result i32)
   local.get $root
   local.set $root|4
   local.get $root|4
   i32.load offset=1568
   br $~lib/rt/tlsf/GETTAIL|inlined.0
  end
  local.set $tail
  i32.const 0
  local.set $tailInfo
  local.get $tail
  if
   i32.const 1
   drop
   local.get $start
   local.get $tail
   i32.const 4
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 6976
    i32.const 389
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $start
   i32.const 16
   i32.sub
   local.get $tail
   i32.eq
   if
    local.get $start
    i32.const 16
    i32.sub
    local.set $start
    local.get $tail
    call $~lib/rt/common/BLOCK#get:mmInfo
    local.set $tailInfo
   else
   end
  else
   i32.const 1
   drop
   local.get $start
   local.get $root
   i32.const 1572
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 6976
    i32.const 402
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $end
  local.get $start
  i32.sub
  local.set $size
  local.get $size
  i32.const 4
  i32.const 12
  i32.add
  i32.const 4
  i32.add
  i32.lt_u
  if
   i32.const 0
   return
  end
  local.get $size
  i32.const 2
  i32.const 4
  i32.mul
  i32.sub
  local.set $leftSize
  local.get $start
  local.set $left
  local.get $left
  local.get $leftSize
  i32.const 1
  i32.or
  local.get $tailInfo
  i32.const 2
  i32.and
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:next
  local.get $start
  i32.const 4
  i32.add
  local.get $leftSize
  i32.add
  local.set $tail
  local.get $tail
  i32.const 0
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.set $root|10
  local.get $tail
  local.set $tail|11
  local.get $root|10
  local.get $tail|11
  i32.store offset=1568
  local.get $root
  local.get $left
  call $~lib/rt/tlsf/insertBlock
  i32.const 1
  return
 )
 (func $~lib/rt/tlsf/initialize
  (local $rootOffset i32)
  (local $pagesBefore i32)
  (local $pagesNeeded i32)
  (local $root i32)
  (local $root|4 i32)
  (local $tail i32)
  (local $fl i32)
  (local $root|7 i32)
  (local $fl|8 i32)
  (local $slMap i32)
  (local $sl i32)
  (local $root|11 i32)
  (local $fl|12 i32)
  (local $sl|13 i32)
  (local $head i32)
  (local $memStart i32)
  i32.const 0
  drop
  global.get $~lib/memory/__heap_base
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $rootOffset
  memory.size
  local.set $pagesBefore
  local.get $rootOffset
  i32.const 1572
  i32.add
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesNeeded
  local.get $pagesBefore
  i32.gt_s
  if (result i32)
   local.get $pagesNeeded
   local.get $pagesBefore
   i32.sub
   memory.grow
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  local.get $rootOffset
  local.set $root
  local.get $root
  i32.const 0
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $root|4
  i32.const 0
  local.set $tail
  local.get $root|4
  local.get $tail
  i32.store offset=1568
  i32.const 0
  local.set $fl
  loop $for-loop|0
   local.get $fl
   i32.const 23
   i32.lt_u
   if
    local.get $root
    local.set $root|7
    local.get $fl
    local.set $fl|8
    i32.const 0
    local.set $slMap
    local.get $root|7
    local.get $fl|8
    i32.const 2
    i32.shl
    i32.add
    local.get $slMap
    i32.store offset=4
    i32.const 0
    local.set $sl
    loop $for-loop|1
     local.get $sl
     i32.const 16
     i32.lt_u
     if
      local.get $root
      local.set $root|11
      local.get $fl
      local.set $fl|12
      local.get $sl
      local.set $sl|13
      i32.const 0
      local.set $head
      local.get $root|11
      local.get $fl|12
      i32.const 4
      i32.shl
      local.get $sl|13
      i32.add
      i32.const 2
      i32.shl
      i32.add
      local.get $head
      i32.store offset=96
      local.get $sl
      i32.const 1
      i32.add
      local.set $sl
      br $for-loop|1
     end
    end
    local.get $fl
    i32.const 1
    i32.add
    local.set $fl
    br $for-loop|0
   end
  end
  local.get $rootOffset
  i32.const 1572
  i32.add
  local.set $memStart
  i32.const 0
  drop
  local.get $root
  local.get $memStart
  memory.size
  i64.extend_i32_s
  i64.const 16
  i64.shl
  call $~lib/rt/tlsf/addMemory
  drop
  local.get $root
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/checkUsedBlock (param $ptr i32) (result i32)
  (local $block i32)
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $block
  local.get $ptr
  i32.const 0
  i32.ne
  if (result i32)
   local.get $ptr
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $block
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 6976
   i32.const 562
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  return
 )
 (func $~lib/rt/tlsf/freeBlock (param $root i32) (param $block i32)
  i32.const 0
  drop
  local.get $block
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 1
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/__free (param $ptr i32)
  local.get $ptr
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $ptr
  call $~lib/rt/tlsf/checkUsedBlock
  call $~lib/rt/tlsf/freeBlock
 )
 (func $~lib/rt/itcms/free (param $obj i32)
  local.get $obj
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:nextWithColor
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:prev
  else
   global.get $~lib/rt/itcms/total
   local.get $obj
   call $~lib/rt/itcms/Object#get:size
   i32.sub
   global.set $~lib/rt/itcms/total
   i32.const 0
   drop
   local.get $obj
   i32.const 4
   i32.add
   call $~lib/rt/tlsf/__free
  end
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $obj i32)
  (local $1 i32)
  (local $black i32)
  (local $from i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      local.set $1
      local.get $1
      i32.const 0
      i32.eq
      br_if $case0|0
      local.get $1
      i32.const 1
      i32.eq
      br_if $case1|0
      local.get $1
      i32.const 2
      i32.eq
      br_if $case2|0
      br $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     i32.const 0
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     i32.const 1
     i32.mul
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $black
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    loop $while-continue|1
     local.get $obj
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     if
      local.get $obj
      global.set $~lib/rt/itcms/iter
      local.get $obj
      call $~lib/rt/itcms/Object#get:color
      local.get $black
      i32.ne
      if
       local.get $obj
       local.get $black
       call $~lib/rt/itcms/Object#set:color
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $obj
       i32.const 20
       i32.add
       i32.const 0
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       i32.const 1
       i32.mul
       return
      end
      local.get $obj
      call $~lib/rt/itcms/Object#get:next
      local.set $obj
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    i32.const 0
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    local.get $obj
    global.get $~lib/rt/itcms/toSpace
    i32.eq
    if
     i32.const 0
     call $~lib/rt/itcms/visitStack
     global.get $~lib/rt/itcms/iter
     call $~lib/rt/itcms/Object#get:next
     local.set $obj
     loop $while-continue|2
      local.get $obj
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $obj
       call $~lib/rt/itcms/Object#get:color
       local.get $black
       i32.ne
       if
        local.get $obj
        local.get $black
        call $~lib/rt/itcms/Object#set:color
        local.get $obj
        i32.const 20
        i32.add
        i32.const 0
        call $~lib/rt/__visit_members
       end
       local.get $obj
       call $~lib/rt/itcms/Object#get:next
       local.set $obj
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $from
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $from
     global.set $~lib/rt/itcms/toSpace
     local.get $black
     global.set $~lib/rt/itcms/white
     local.get $from
     call $~lib/rt/itcms/Object#get:next
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    i32.const 1
    i32.mul
    return
   end
   global.get $~lib/rt/itcms/iter
   local.set $obj
   local.get $obj
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $obj
    call $~lib/rt/itcms/Object#get:next
    global.set $~lib/rt/itcms/iter
    i32.const 1
    drop
    local.get $obj
    call $~lib/rt/itcms/Object#get:color
    global.get $~lib/rt/itcms/white
    i32.eqz
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 6704
     i32.const 229
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $obj
    call $~lib/rt/itcms/free
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:nextWithColor
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:prev
   i32.const 0
   global.set $~lib/rt/itcms/state
   br $break|0
  end
  i32.const 0
  return
 )
 (func $~lib/rt/itcms/interrupt
  (local $budget i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1024
  i32.const 200
  i32.mul
  i32.const 100
  i32.div_u
  local.set $budget
  loop $do-loop|0
   local.get $budget
   call $~lib/rt/itcms/step
   i32.sub
   local.set $budget
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.eq
   if
    i32.const 0
    drop
    global.get $~lib/rt/itcms/total
    i64.extend_i32_u
    i32.const 200
    i64.extend_i32_u
    i64.mul
    i64.const 100
    i64.div_u
    i32.wrap_i64
    i32.const 1024
    i32.add
    global.set $~lib/rt/itcms/threshold
    i32.const 0
    drop
    return
   end
   local.get $budget
   i32.const 0
   i32.gt_s
   br_if $do-loop|0
  end
  i32.const 0
  drop
  global.get $~lib/rt/itcms/total
  i32.const 1024
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.sub
  i32.const 1024
  i32.lt_u
  i32.mul
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
 )
 (func $~lib/rt/tlsf/computeSize (param $size i32) (result i32)
  local.get $size
  i32.const 12
  i32.le_u
  if (result i32)
   i32.const 12
  else
   local.get $size
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
  end
  return
 )
 (func $~lib/rt/tlsf/prepareSize (param $size i32) (result i32)
  local.get $size
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 6640
   i32.const 6976
   i32.const 461
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $size
  call $~lib/rt/tlsf/computeSize
  return
 )
 (func $~lib/rt/tlsf/roundSize (param $size i32) (result i32)
  local.get $size
  i32.const 536870910
  i32.lt_u
  if (result i32)
   local.get $size
   i32.const 1
   i32.const 27
   local.get $size
   i32.clz
   i32.sub
   i32.shl
   i32.add
   i32.const 1
   i32.sub
  else
   local.get $size
  end
  return
 )
 (func $~lib/rt/tlsf/searchBlock (param $root i32) (param $size i32) (result i32)
  (local $fl i32)
  (local $sl i32)
  (local $requestSize i32)
  (local $root|5 i32)
  (local $fl|6 i32)
  (local $slMap i32)
  (local $head i32)
  (local $flMap i32)
  (local $root|10 i32)
  (local $fl|11 i32)
  (local $root|12 i32)
  (local $fl|13 i32)
  (local $sl|14 i32)
  (local $root|15 i32)
  (local $fl|16 i32)
  (local $sl|17 i32)
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   call $~lib/rt/tlsf/roundSize
   local.set $requestSize
   i32.const 4
   i32.const 8
   i32.mul
   i32.const 1
   i32.sub
   local.get $requestSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $requestSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 6976
   i32.const 334
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  block $~lib/rt/tlsf/GETSL|inlined.2 (result i32)
   local.get $root
   local.set $root|5
   local.get $fl
   local.set $fl|6
   local.get $root|5
   local.get $fl|6
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=4
   br $~lib/rt/tlsf/GETSL|inlined.2
  end
  i32.const 0
  i32.const -1
  i32.xor
  local.get $sl
  i32.shl
  i32.and
  local.set $slMap
  i32.const 0
  local.set $head
  local.get $slMap
  i32.eqz
  if
   local.get $root
   call $~lib/rt/tlsf/Root#get:flMap
   i32.const 0
   i32.const -1
   i32.xor
   local.get $fl
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.set $flMap
   local.get $flMap
   i32.eqz
   if
    i32.const 0
    local.set $head
   else
    local.get $flMap
    i32.ctz
    local.set $fl
    block $~lib/rt/tlsf/GETSL|inlined.3 (result i32)
     local.get $root
     local.set $root|10
     local.get $fl
     local.set $fl|11
     local.get $root|10
     local.get $fl|11
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     br $~lib/rt/tlsf/GETSL|inlined.3
    end
    local.set $slMap
    i32.const 1
    drop
    local.get $slMap
    i32.eqz
    if
     i32.const 0
     i32.const 6976
     i32.const 347
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    block $~lib/rt/tlsf/GETHEAD|inlined.2 (result i32)
     local.get $root
     local.set $root|12
     local.get $fl
     local.set $fl|13
     local.get $slMap
     i32.ctz
     local.set $sl|14
     local.get $root|12
     local.get $fl|13
     i32.const 4
     i32.shl
     local.get $sl|14
     i32.add
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=96
     br $~lib/rt/tlsf/GETHEAD|inlined.2
    end
    local.set $head
   end
  else
   block $~lib/rt/tlsf/GETHEAD|inlined.3 (result i32)
    local.get $root
    local.set $root|15
    local.get $fl
    local.set $fl|16
    local.get $slMap
    i32.ctz
    local.set $sl|17
    local.get $root|15
    local.get $fl|16
    i32.const 4
    i32.shl
    local.get $sl|17
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=96
    br $~lib/rt/tlsf/GETHEAD|inlined.3
   end
   local.set $head
  end
  local.get $head
  return
 )
 (func $~lib/rt/tlsf/growMemory (param $root i32) (param $size i32)
  (local $pagesBefore i32)
  (local $root|3 i32)
  (local $pagesNeeded i32)
  (local $5 i32)
  (local $6 i32)
  (local $pagesWanted i32)
  (local $pagesAfter i32)
  i32.const 0
  drop
  local.get $size
  i32.const 256
  i32.ge_u
  if
   local.get $size
   call $~lib/rt/tlsf/roundSize
   local.set $size
  end
  memory.size
  local.set $pagesBefore
  local.get $size
  i32.const 4
  local.get $pagesBefore
  i32.const 16
  i32.shl
  i32.const 4
  i32.sub
  block $~lib/rt/tlsf/GETTAIL|inlined.1 (result i32)
   local.get $root
   local.set $root|3
   local.get $root|3
   i32.load offset=1568
   br $~lib/rt/tlsf/GETTAIL|inlined.1
  end
  i32.ne
  i32.shl
  i32.add
  local.set $size
  local.get $size
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesBefore
  local.tee $5
  local.get $pagesNeeded
  local.tee $6
  local.get $5
  local.get $6
  i32.gt_s
  select
  local.set $pagesWanted
  local.get $pagesWanted
  memory.grow
  i32.const 0
  i32.lt_s
  if
   local.get $pagesNeeded
   memory.grow
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
  end
  memory.size
  local.set $pagesAfter
  local.get $root
  local.get $pagesBefore
  i32.const 16
  i32.shl
  local.get $pagesAfter
  i64.extend_i32_s
  i64.const 16
  i64.shl
  call $~lib/rt/tlsf/addMemory
  drop
 )
 (func $~lib/rt/tlsf/prepareBlock (param $root i32) (param $block i32) (param $size i32)
  (local $blockInfo i32)
  (local $remaining i32)
  (local $spare i32)
  (local $block|6 i32)
  (local $block|7 i32)
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $blockInfo
  i32.const 1
  drop
  local.get $size
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 6976
   i32.const 361
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $size
  i32.sub
  local.set $remaining
  local.get $remaining
  i32.const 4
  i32.const 12
  i32.add
  i32.ge_u
  if
   local.get $block
   local.get $size
   local.get $blockInfo
   i32.const 2
   i32.and
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   i32.const 4
   i32.add
   local.get $size
   i32.add
   local.set $spare
   local.get $spare
   local.get $remaining
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $root
   local.get $spare
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $block
   local.get $blockInfo
   i32.const 1
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
   block $~lib/rt/tlsf/GETRIGHT|inlined.3 (result i32)
    local.get $block
    local.set $block|7
    local.get $block|7
    i32.const 4
    i32.add
    local.get $block|7
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.3
   end
   block $~lib/rt/tlsf/GETRIGHT|inlined.2 (result i32)
    local.get $block
    local.set $block|6
    local.get $block|6
    i32.const 4
    i32.add
    local.get $block|6
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.2
   end
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 2
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $root i32) (param $size i32) (result i32)
  (local $payloadSize i32)
  (local $block i32)
  local.get $size
  call $~lib/rt/tlsf/prepareSize
  local.set $payloadSize
  local.get $root
  local.get $payloadSize
  call $~lib/rt/tlsf/searchBlock
  local.set $block
  local.get $block
  i32.eqz
  if
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/growMemory
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/searchBlock
   local.set $block
   i32.const 1
   drop
   local.get $block
   i32.eqz
   if
    i32.const 0
    i32.const 6976
    i32.const 499
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 1
  drop
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $payloadSize
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 6976
   i32.const 501
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/removeBlock
  local.get $root
  local.get $block
  local.get $payloadSize
  call $~lib/rt/tlsf/prepareBlock
  i32.const 0
  drop
  local.get $block
  return
 )
 (func $~lib/rt/tlsf/__alloc (param $size i32) (result i32)
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $size
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
  return
 )
 (func $~lib/rt/itcms/Object#set:rtId (param $this i32) (param $rtId i32)
  local.get $this
  local.get $rtId
  i32.store offset=12
 )
 (func $~lib/rt/itcms/Object#set:rtSize (param $this i32) (param $rtSize i32)
  local.get $this
  local.get $rtSize
  i32.store offset=16
 )
 (func $~lib/rt/itcms/__new (param $size i32) (param $id i32) (result i32)
  (local $obj i32)
  (local $ptr i32)
  local.get $size
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 6640
   i32.const 6704
   i32.const 261
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   call $~lib/rt/itcms/interrupt
  end
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/tlsf/__alloc
  i32.const 4
  i32.sub
  local.set $obj
  local.get $obj
  local.get $id
  call $~lib/rt/itcms/Object#set:rtId
  local.get $obj
  local.get $size
  call $~lib/rt/itcms/Object#set:rtSize
  local.get $obj
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $obj
  call $~lib/rt/itcms/Object#get:size
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $obj
  i32.const 20
  i32.add
  local.set $ptr
  local.get $ptr
  i32.const 0
  local.get $size
  memory.fill
  local.get $ptr
  return
 )
 (func $~lib/rt/itcms/__link (param $parentPtr i32) (param $childPtr i32) (param $expectMultiple i32)
  (local $child i32)
  (local $parent i32)
  (local $parentColor i32)
  local.get $childPtr
  i32.eqz
  if
   return
  end
  i32.const 1
  drop
  local.get $parentPtr
  i32.eqz
  if
   i32.const 0
   i32.const 6704
   i32.const 295
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $childPtr
  i32.const 20
  i32.sub
  local.set $child
  local.get $child
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $parentPtr
   i32.const 20
   i32.sub
   local.set $parent
   local.get $parent
   call $~lib/rt/itcms/Object#get:color
   local.set $parentColor
   local.get $parentColor
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $expectMultiple
    if
     local.get $parent
     call $~lib/rt/itcms/Object#makeGray
    else
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   else
    local.get $parentColor
    i32.const 3
    i32.eq
    if (result i32)
     global.get $~lib/rt/itcms/state
     i32.const 1
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#set:buckets" (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#set:bucketsMask" (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store offset=4
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#set:entries" (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#set:entriesCapacity" (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store offset=12
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#set:entriesOffset" (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store offset=16
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#set:entriesCount" (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store offset=20
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#get:buckets" (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#get:bucketsMask" (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $"~lib/map/MapEntry<~lib/string/String,i32>#get:taggedNext" (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $"~lib/map/MapEntry<~lib/string/String,i32>#get:key" (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $"~lib/map/MapEntry<~lib/string/String,i32>#set:value" (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store offset=4
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#get:entriesOffset" (param $this i32) (result i32)
  local.get $this
  i32.load offset=16
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#get:entriesCapacity" (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#get:entriesCount" (param $this i32) (result i32)
  local.get $this
  i32.load offset=20
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#get:entries" (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $"~lib/map/MapEntry<~lib/string/String,i32>#set:key" (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store
 )
 (func $"~lib/map/MapEntry<~lib/string/String,i32>#get:value" (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $"~lib/map/MapEntry<~lib/string/String,i32>#set:taggedNext" (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store offset=8
 )
 (func $start:Frontend/assembly/Lexer/Scanner
  call $start:Frontend/assembly/Lexer/ReservedWords
 )
 (func $start:Frontend/assembly/Index
  call $start:Frontend/assembly/Lexer/Scanner
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#set:source (param $this i32) (param $source i32)
  local.get $this
  local.get $source
  i32.store
  local.get $this
  local.get $source
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/rt/__newBuffer (param $size i32) (param $id i32) (param $data i32) (result i32)
  (local $buffer i32)
  local.get $size
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $buffer
  local.get $data
  if
   local.get $buffer
   local.get $data
   local.get $size
   memory.copy
  end
  local.get $buffer
  return
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#set:tokens (param $this i32) (param $tokens i32)
  local.get $this
  local.get $tokens
  i32.store offset=4
  local.get $this
  local.get $tokens
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#set:current (param $this i32) (param $current i32)
  local.get $this
  local.get $current
  i32.store offset=8
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#set:start (param $this i32) (param $start i32)
  local.get $this
  local.get $start
  i32.store offset=12
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#set:line (param $this i32) (param $line i32)
  local.get $this
  local.get $line
  i32.store offset=16
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#set:errors (param $this i32) (param $errors i32)
  local.get $this
  local.get $errors
  i32.store offset=20
  local.get $this
  local.get $errors
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#get:source (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#get:current (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#get:start (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#get:tokens (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/Lexer/Token/Token#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store
 )
 (func $Frontend/assembly/Lexer/Token/Token#set:lexeme (param $this i32) (param $lexeme i32)
  local.get $this
  local.get $lexeme
  i32.store offset=4
  local.get $this
  local.get $lexeme
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Lexer/Token/Token#set:literal (param $this i32) (param $literal i32)
  local.get $this
  local.get $literal
  i32.store offset=8
  local.get $this
  local.get $literal
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Lexer/Token/Token#set:line (param $this i32) (param $line i32)
  local.get $this
  local.get $line
  i32.store offset=12
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#get:line (param $this i32) (result i32)
  local.get $this
  i32.load offset=16
 )
 (func $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:byteLength (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/rt/itcms/Object#get:rtSize (param $this i32) (result i32)
  local.get $this
  i32.load offset=16
 )
 (func $~lib/rt/itcms/__renew (param $oldPtr i32) (param $size i32) (result i32)
  (local $oldObj i32)
  (local $newPtr i32)
  (local $4 i32)
  (local $5 i32)
  local.get $oldPtr
  i32.const 20
  i32.sub
  local.set $oldObj
  local.get $size
  local.get $oldObj
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $oldObj
   local.get $size
   call $~lib/rt/itcms/Object#set:rtSize
   local.get $oldPtr
   return
  end
  local.get $size
  local.get $oldObj
  call $~lib/rt/itcms/Object#get:rtId
  call $~lib/rt/itcms/__new
  local.set $newPtr
  local.get $newPtr
  local.get $oldPtr
  local.get $size
  local.tee $4
  local.get $oldObj
  call $~lib/rt/itcms/Object#get:rtSize
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_u
  select
  memory.copy
  local.get $newPtr
  return
 )
 (func $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store offset=12
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#get:errors (param $this i32) (result i32)
  local.get $this
  i32.load offset=20
 )
 (func $~lib/util/number/decimalCount32 (param $value i32) (result i32)
  local.get $value
  i32.const 100000
  i32.lt_u
  if
   local.get $value
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    local.get $value
    i32.const 10
    i32.ge_u
    i32.add
    return
   else
    i32.const 3
    local.get $value
    i32.const 10000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 1000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $value
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    local.get $value
    i32.const 1000000
    i32.ge_u
    i32.add
    return
   else
    i32.const 8
    local.get $value
    i32.const 1000000000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 100000000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa32_dec_lut (param $buffer i32) (param $num i32) (param $offset i32)
  (local $t i32)
  (local $r i32)
  (local $d1 i32)
  (local $d2 i32)
  (local $digits1 i64)
  (local $digits2 i64)
  (local $t|9 i32)
  (local $d1|10 i32)
  (local $digits i32)
  (local $digits|12 i32)
  (local $digit i32)
  loop $while-continue|0
   local.get $num
   i32.const 10000
   i32.ge_u
   if
    local.get $num
    i32.const 10000
    i32.div_u
    local.set $t
    local.get $num
    i32.const 10000
    i32.rem_u
    local.set $r
    local.get $t
    local.set $num
    local.get $r
    i32.const 100
    i32.div_u
    local.set $d1
    local.get $r
    i32.const 100
    i32.rem_u
    local.set $d2
    i32.const 10540
    local.get $d1
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $digits1
    i32.const 10540
    local.get $d2
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $digits2
    local.get $offset
    i32.const 4
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $digits1
    local.get $digits2
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $num
  i32.const 100
  i32.ge_u
  if
   local.get $num
   i32.const 100
   i32.div_u
   local.set $t|9
   local.get $num
   i32.const 100
   i32.rem_u
   local.set $d1|10
   local.get $t|9
   local.set $num
   local.get $offset
   i32.const 2
   i32.sub
   local.set $offset
   i32.const 10540
   local.get $d1|10
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $digits
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $digits
   i32.store
  end
  local.get $num
  i32.const 10
  i32.ge_u
  if
   local.get $offset
   i32.const 2
   i32.sub
   local.set $offset
   i32.const 10540
   local.get $num
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $digits|12
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $digits|12
   i32.store
  else
   local.get $offset
   i32.const 1
   i32.sub
   local.set $offset
   i32.const 48
   local.get $num
   i32.add
   local.set $digit
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $digit
   i32.store16
  end
 )
 (func $~lib/util/number/utoa_hex_lut (param $buffer i32) (param $num i64) (param $offset i32)
  loop $while-continue|0
   local.get $offset
   i32.const 2
   i32.ge_u
   if
    local.get $offset
    i32.const 2
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 10960
    local.get $num
    i32.wrap_i64
    i32.const 255
    i32.and
    i32.const 2
    i32.shl
    i32.add
    i32.load
    i32.store
    local.get $num
    i64.const 8
    i64.shr_u
    local.set $num
    br $while-continue|0
   end
  end
  local.get $offset
  i32.const 1
  i32.and
  if
   local.get $buffer
   i32.const 10960
   local.get $num
   i32.wrap_i64
   i32.const 6
   i32.shl
   i32.add
   i32.load16_u
   i32.store16
  end
 )
 (func $~lib/util/number/ulog_base (param $num i64) (param $base i32) (result i32)
  (local $value i32)
  (local $b64 i64)
  (local $b i64)
  (local $e i32)
  block $~lib/util/number/isPowerOf2<i32>|inlined.0 (result i32)
   local.get $base
   local.set $value
   local.get $value
   i32.popcnt
   i32.const 1
   i32.eq
   br $~lib/util/number/isPowerOf2<i32>|inlined.0
  end
  if
   i32.const 63
   local.get $num
   i64.clz
   i32.wrap_i64
   i32.sub
   i32.const 31
   local.get $base
   i32.clz
   i32.sub
   i32.div_u
   i32.const 1
   i32.add
   return
  end
  local.get $base
  i64.extend_i32_s
  local.set $b64
  local.get $b64
  local.set $b
  i32.const 1
  local.set $e
  loop $while-continue|0
   local.get $num
   local.get $b
   i64.ge_u
   if
    local.get $num
    local.get $b
    i64.div_u
    local.set $num
    local.get $b
    local.get $b
    i64.mul
    local.set $b
    local.get $e
    i32.const 1
    i32.shl
    local.set $e
    br $while-continue|0
   end
  end
  loop $while-continue|1
   local.get $num
   i64.const 1
   i64.ge_u
   if
    local.get $num
    local.get $b64
    i64.div_u
    local.set $num
    local.get $e
    i32.const 1
    i32.add
    local.set $e
    br $while-continue|1
   end
  end
  local.get $e
  i32.const 1
  i32.sub
  return
 )
 (func $~lib/util/number/utoa64_any_core (param $buffer i32) (param $num i64) (param $offset i32) (param $radix i32)
  (local $base i64)
  (local $shift i64)
  (local $mask i64)
  (local $q i64)
  local.get $radix
  i64.extend_i32_s
  local.set $base
  local.get $radix
  local.get $radix
  i32.const 1
  i32.sub
  i32.and
  i32.const 0
  i32.eq
  if
   local.get $radix
   i32.ctz
   i32.const 7
   i32.and
   i64.extend_i32_s
   local.set $shift
   local.get $base
   i64.const 1
   i64.sub
   local.set $mask
   loop $do-loop|0
    local.get $offset
    i32.const 1
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 12016
    local.get $num
    local.get $mask
    i64.and
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    i32.store16
    local.get $num
    local.get $shift
    i64.shr_u
    local.set $num
    local.get $num
    i64.const 0
    i64.ne
    br_if $do-loop|0
   end
  else
   loop $do-loop|1
    local.get $offset
    i32.const 1
    i32.sub
    local.set $offset
    local.get $num
    local.get $base
    i64.div_u
    local.set $q
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 12016
    local.get $num
    local.get $q
    local.get $base
    i64.mul
    i64.sub
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    i32.store16
    local.get $q
    local.set $num
    local.get $num
    i64.const 0
    i64.ne
    br_if $do-loop|1
   end
  end
 )
 (func $~lib/number/I32#toString (param $this i32) (param $radix i32) (result i32)
  local.get $this
  local.get $radix
  call $~lib/util/number/itoa32
  return
 )
 (func $~lib/array/Array<~lib/string/String>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/array/Array<~lib/string/String>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/array/Array<~lib/string/String>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store offset=12
 )
 (func $Frontend/assembly/Parser/Parser/Parser#set:tokens (param $this i32) (param $tokens i32)
  local.get $this
  local.get $tokens
  i32.store
  local.get $this
  local.get $tokens
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Parser/Parser#set:current (param $this i32) (param $current i32)
  local.get $this
  local.get $current
  i32.store offset=4
 )
 (func $Frontend/assembly/Parser/Parser/Parser#set:errors (param $this i32) (param $errors i32)
  local.get $this
  local.get $errors
  i32.store offset=8
  local.get $this
  local.get $errors
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Parser/Parser#get:tokens (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/Parser/Parser/Parser#get:current (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/Lexer/Token/Token#get:type (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<i32>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/array/Array<i32>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Num/Num#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store
  local.get $this
  local.get $value
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier#set:name (param $this i32) (param $name i32)
  local.get $this
  local.get $name
  i32.store
  local.get $this
  local.get $name
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Parser/Parser#get:errors (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $Frontend/assembly/Lexer/Token/Token#get:literal (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $Frontend/assembly/Lexer/Token/Token#get:line (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Term/Term#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store
  local.get $this
  local.get $value
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#set:operator (param $this i32) (param $operator i32)
  local.get $this
  local.get $operator
  i32.store
  local.get $this
  local.get $operator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#set:primaryOrRight (param $this i32) (param $primaryOrRight i32)
  local.get $this
  local.get $primaryOrRight
  i32.store offset=4
  local.get $this
  local.get $primaryOrRight
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:primaryOrLeft (param $this i32) (param $primaryOrLeft i32)
  local.get $this
  local.get $primaryOrLeft
  i32.store
  local.get $this
  local.get $primaryOrLeft
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:operator (param $this i32) (param $operator i32)
  local.get $this
  local.get $operator
  i32.store offset=4
  local.get $this
  local.get $operator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:right (param $this i32) (param $right i32)
  local.get $this
  local.get $right
  i32.store offset=8
  local.get $this
  local.get $right
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#set:primaryOrLeft (param $this i32) (param $primaryOrLeft i32)
  local.get $this
  local.get $primaryOrLeft
  i32.store
  local.get $this
  local.get $primaryOrLeft
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#set:operator (param $this i32) (param $operator i32)
  local.get $this
  local.get $operator
  i32.store offset=4
  local.get $this
  local.get $operator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#set:right (param $this i32) (param $right i32)
  local.get $this
  local.get $right
  i32.store offset=8
  local.get $this
  local.get $right
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#set:primaryOrLeft (param $this i32) (param $primaryOrLeft i32)
  local.get $this
  local.get $primaryOrLeft
  i32.store
  local.get $this
  local.get $primaryOrLeft
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#set:operator (param $this i32) (param $operator i32)
  local.get $this
  local.get $operator
  i32.store offset=4
  local.get $this
  local.get $operator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#set:right (param $this i32) (param $right i32)
  local.get $this
  local.get $right
  i32.store offset=8
  local.get $this
  local.get $right
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#set:primaryOrLeft (param $this i32) (param $primaryOrLeft i32)
  local.get $this
  local.get $primaryOrLeft
  i32.store
  local.get $this
  local.get $primaryOrLeft
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#set:operator (param $this i32) (param $operator i32)
  local.get $this
  local.get $operator
  i32.store offset=4
  local.get $this
  local.get $operator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#set:right (param $this i32) (param $right i32)
  local.get $this
  local.get $right
  i32.store offset=8
  local.get $this
  local.get $right
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/Expression/Expression#set:primaryOrLeft (param $this i32) (param $primaryOrLeft i32)
  local.get $this
  local.get $primaryOrLeft
  i32.store
  local.get $this
  local.get $primaryOrLeft
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/Expression/Expression#set:operator (param $this i32) (param $operator i32)
  local.get $this
  local.get $operator
  i32.store offset=4
  local.get $this
  local.get $operator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/Expressions/Expression/Expression#set:right (param $this i32) (param $right i32)
  local.get $this
  local.get $right
  i32.store offset=8
  local.get $this
  local.get $right
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number (param $this i32) (param $number i32)
  local.get $this
  local.get $number
  i32.store
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:tree (param $this i32) (param $tree i32)
  local.get $this
  local.get $tree
  i32.store offset=4
  local.get $this
  local.get $tree
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<void> (param $this i32) (param $visitor i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:tree (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode> (param $this i32) (param $visitor i32) (result i32)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number (param $this i32) (param $number i32)
  local.get $this
  local.get $number
  i32.store
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:tree (param $this i32) (param $tree i32)
  local.get $this
  local.get $tree
  i32.store offset=4
  local.get $this
  local.get $tree
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<void> (param $this i32) (param $visitor i32)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:tree (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/Lexer/Token/Token#get:lexeme (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/string/String#toString (param $this i32) (result i32)
  local.get $this
  return
 )
 (func $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<f64> (param $this i32) (param $visitor i32) (result f64)
  unreachable
 )
 (func $Frontend/assembly/Index/value#set:parse (param $this i32) (param $parse i32)
  local.get $this
  local.get $parse
  i32.store
  local.get $this
  local.get $parse
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Index/value#set:ast (param $this i32) (param $ast i32)
  local.get $this
  local.get $ast
  i32.store offset=4
  local.get $this
  local.get $ast
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/Index/value#set:value (param $this i32) (param $value f64)
  local.get $this
  local.get $value
  f64.store offset=8
 )
 (func $Frontend/assembly/Index/value#get:parse (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/Index/value#get:ast (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/Index/value#get:value (param $this i32) (result f64)
  local.get $this
  f64.load offset=8
 )
 (func $~lib/util/number/genDigits (param $buffer i32) (param $w_frc i64) (param $w_exp i32) (param $mp_frc i64) (param $mp_exp i32) (param $delta i64) (param $sign i32) (result i32)
  (local $one_exp i32)
  (local $one_frc i64)
  (local $mask i64)
  (local $wp_w_frc i64)
  (local $p1 i32)
  (local $p2 i64)
  (local $kappa i32)
  (local $len i32)
  (local $d i32)
  (local $16 i32)
  (local $17 i32)
  (local $tmp i64)
  (local $buffer|19 i32)
  (local $len|20 i32)
  (local $delta|21 i64)
  (local $rest i64)
  (local $ten_kappa i64)
  (local $wp_w i64)
  (local $lastp i32)
  (local $digit i32)
  (local $d|27 i64)
  (local $28 i32)
  (local $buffer|29 i32)
  (local $len|30 i32)
  (local $delta|31 i64)
  (local $rest|32 i64)
  (local $ten_kappa|33 i64)
  (local $wp_w|34 i64)
  (local $lastp|35 i32)
  (local $digit|36 i32)
  i32.const 0
  local.get $mp_exp
  i32.sub
  local.set $one_exp
  i64.const 1
  local.get $one_exp
  i64.extend_i32_s
  i64.shl
  local.set $one_frc
  local.get $one_frc
  i64.const 1
  i64.sub
  local.set $mask
  local.get $mp_frc
  local.get $w_frc
  i64.sub
  local.set $wp_w_frc
  local.get $mp_frc
  local.get $one_exp
  i64.extend_i32_s
  i64.shr_u
  i32.wrap_i64
  local.set $p1
  local.get $mp_frc
  local.get $mask
  i64.and
  local.set $p2
  local.get $p1
  call $~lib/util/number/decimalCount32
  local.set $kappa
  local.get $sign
  local.set $len
  loop $while-continue|0
   local.get $kappa
   i32.const 0
   i32.gt_s
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $kappa
                local.set $16
                local.get $16
                i32.const 10
                i32.eq
                br_if $case0|1
                local.get $16
                i32.const 9
                i32.eq
                br_if $case1|1
                local.get $16
                i32.const 8
                i32.eq
                br_if $case2|1
                local.get $16
                i32.const 7
                i32.eq
                br_if $case3|1
                local.get $16
                i32.const 6
                i32.eq
                br_if $case4|1
                local.get $16
                i32.const 5
                i32.eq
                br_if $case5|1
                local.get $16
                i32.const 4
                i32.eq
                br_if $case6|1
                local.get $16
                i32.const 3
                i32.eq
                br_if $case7|1
                local.get $16
                i32.const 2
                i32.eq
                br_if $case8|1
                local.get $16
                i32.const 1
                i32.eq
                br_if $case9|1
                br $case10|1
               end
               local.get $p1
               i32.const 1000000000
               i32.div_u
               local.set $d
               local.get $p1
               i32.const 1000000000
               i32.rem_u
               local.set $p1
               br $break|1
              end
              local.get $p1
              i32.const 100000000
              i32.div_u
              local.set $d
              local.get $p1
              i32.const 100000000
              i32.rem_u
              local.set $p1
              br $break|1
             end
             local.get $p1
             i32.const 10000000
             i32.div_u
             local.set $d
             local.get $p1
             i32.const 10000000
             i32.rem_u
             local.set $p1
             br $break|1
            end
            local.get $p1
            i32.const 1000000
            i32.div_u
            local.set $d
            local.get $p1
            i32.const 1000000
            i32.rem_u
            local.set $p1
            br $break|1
           end
           local.get $p1
           i32.const 100000
           i32.div_u
           local.set $d
           local.get $p1
           i32.const 100000
           i32.rem_u
           local.set $p1
           br $break|1
          end
          local.get $p1
          i32.const 10000
          i32.div_u
          local.set $d
          local.get $p1
          i32.const 10000
          i32.rem_u
          local.set $p1
          br $break|1
         end
         local.get $p1
         i32.const 1000
         i32.div_u
         local.set $d
         local.get $p1
         i32.const 1000
         i32.rem_u
         local.set $p1
         br $break|1
        end
        local.get $p1
        i32.const 100
        i32.div_u
        local.set $d
        local.get $p1
        i32.const 100
        i32.rem_u
        local.set $p1
        br $break|1
       end
       local.get $p1
       i32.const 10
       i32.div_u
       local.set $d
       local.get $p1
       i32.const 10
       i32.rem_u
       local.set $p1
       br $break|1
      end
      local.get $p1
      local.set $d
      i32.const 0
      local.set $p1
      br $break|1
     end
     i32.const 0
     local.set $d
     br $break|1
    end
    local.get $d
    local.get $len
    i32.or
    if
     local.get $buffer
     local.get $len
     local.tee $17
     i32.const 1
     i32.add
     local.set $len
     local.get $17
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $d
     i32.const 65535
     i32.and
     i32.add
     i32.store16
    end
    local.get $kappa
    i32.const 1
    i32.sub
    local.set $kappa
    local.get $p1
    i64.extend_i32_u
    local.get $one_exp
    i64.extend_i32_s
    i64.shl
    local.get $p2
    i64.add
    local.set $tmp
    local.get $tmp
    local.get $delta
    i64.le_u
    if
     global.get $~lib/util/number/_K
     local.get $kappa
     i32.add
     global.set $~lib/util/number/_K
     local.get $buffer
     local.set $buffer|19
     local.get $len
     local.set $len|20
     local.get $delta
     local.set $delta|21
     local.get $tmp
     local.set $rest
     i32.const 15040
     local.get $kappa
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u
     local.get $one_exp
     i64.extend_i32_s
     i64.shl
     local.set $ten_kappa
     local.get $wp_w_frc
     local.set $wp_w
     local.get $buffer|19
     local.get $len|20
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $lastp
     local.get $lastp
     i32.load16_u
     local.set $digit
     loop $while-continue|3
      local.get $rest
      local.get $wp_w
      i64.lt_u
      if (result i32)
       local.get $delta|21
       local.get $rest
       i64.sub
       local.get $ten_kappa
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $rest
       local.get $ten_kappa
       i64.add
       local.get $wp_w
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $wp_w
        local.get $rest
        i64.sub
        local.get $rest
        local.get $ten_kappa
        i64.add
        local.get $wp_w
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      if
       local.get $digit
       i32.const 1
       i32.sub
       local.set $digit
       local.get $rest
       local.get $ten_kappa
       i64.add
       local.set $rest
       br $while-continue|3
      end
     end
     local.get $lastp
     local.get $digit
     i32.store16
     local.get $len
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4
   i32.const 1
   if
    local.get $p2
    i64.const 10
    i64.mul
    local.set $p2
    local.get $delta
    i64.const 10
    i64.mul
    local.set $delta
    local.get $p2
    local.get $one_exp
    i64.extend_i32_s
    i64.shr_u
    local.set $d|27
    local.get $d|27
    local.get $len
    i64.extend_i32_s
    i64.or
    i64.const 0
    i64.ne
    if
     local.get $buffer
     local.get $len
     local.tee $28
     i32.const 1
     i32.add
     local.set $len
     local.get $28
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $d|27
     i32.wrap_i64
     i32.const 65535
     i32.and
     i32.add
     i32.store16
    end
    local.get $p2
    local.get $mask
    i64.and
    local.set $p2
    local.get $kappa
    i32.const 1
    i32.sub
    local.set $kappa
    local.get $p2
    local.get $delta
    i64.lt_u
    if
     global.get $~lib/util/number/_K
     local.get $kappa
     i32.add
     global.set $~lib/util/number/_K
     local.get $wp_w_frc
     i32.const 15040
     i32.const 0
     local.get $kappa
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u
     i64.mul
     local.set $wp_w_frc
     local.get $buffer
     local.set $buffer|29
     local.get $len
     local.set $len|30
     local.get $delta
     local.set $delta|31
     local.get $p2
     local.set $rest|32
     local.get $one_frc
     local.set $ten_kappa|33
     local.get $wp_w_frc
     local.set $wp_w|34
     local.get $buffer|29
     local.get $len|30
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $lastp|35
     local.get $lastp|35
     i32.load16_u
     local.set $digit|36
     loop $while-continue|6
      local.get $rest|32
      local.get $wp_w|34
      i64.lt_u
      if (result i32)
       local.get $delta|31
       local.get $rest|32
       i64.sub
       local.get $ten_kappa|33
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $rest|32
       local.get $ten_kappa|33
       i64.add
       local.get $wp_w|34
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $wp_w|34
        local.get $rest|32
        i64.sub
        local.get $rest|32
        local.get $ten_kappa|33
        i64.add
        local.get $wp_w|34
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      if
       local.get $digit|36
       i32.const 1
       i32.sub
       local.set $digit|36
       local.get $rest|32
       local.get $ten_kappa|33
       i64.add
       local.set $rest|32
       br $while-continue|6
      end
     end
     local.get $lastp|35
     local.get $digit|36
     i32.store16
     local.get $len
     return
    end
    br $while-continue|4
   end
  end
  unreachable
 )
 (func $~lib/util/number/prettify (param $buffer i32) (param $length i32) (param $k i32) (result i32)
  (local $kk i32)
  (local $i i32)
  (local $ptr i32)
  (local $offset i32)
  (local $i|7 i32)
  (local $buffer|8 i32)
  (local $k|9 i32)
  (local $sign i32)
  (local $decimals i32)
  (local $buffer|12 i32)
  (local $num i32)
  (local $offset|14 i32)
  (local $len i32)
  (local $buffer|16 i32)
  (local $k|17 i32)
  (local $sign|18 i32)
  (local $decimals|19 i32)
  (local $buffer|20 i32)
  (local $num|21 i32)
  (local $offset|22 i32)
  local.get $k
  i32.eqz
  if
   local.get $buffer
   local.get $length
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store
   local.get $length
   i32.const 2
   i32.add
   return
  end
  local.get $length
  local.get $k
  i32.add
  local.set $kk
  local.get $length
  local.get $kk
  i32.le_s
  if (result i32)
   local.get $kk
   i32.const 21
   i32.le_s
  else
   i32.const 0
  end
  if
   local.get $length
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $kk
    i32.lt_s
    if
     local.get $buffer
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   local.get $buffer
   local.get $kk
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store
   local.get $kk
   i32.const 2
   i32.add
   return
  else
   local.get $kk
   i32.const 0
   i32.gt_s
   if (result i32)
    local.get $kk
    i32.const 21
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $buffer
    local.get $kk
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $ptr
    i32.const 2
    i32.add
    local.get $ptr
    i32.const 0
    local.get $k
    i32.sub
    i32.const 1
    i32.shl
    memory.copy
    local.get $buffer
    local.get $kk
    i32.const 1
    i32.shl
    i32.add
    i32.const 46
    i32.store16
    local.get $length
    i32.const 1
    i32.add
    return
   else
    i32.const -6
    local.get $kk
    i32.lt_s
    if (result i32)
     local.get $kk
     i32.const 0
     i32.le_s
    else
     i32.const 0
    end
    if
     i32.const 2
     local.get $kk
     i32.sub
     local.set $offset
     local.get $buffer
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $buffer
     local.get $length
     i32.const 1
     i32.shl
     memory.copy
     local.get $buffer
     i32.const 48
     i32.const 46
     i32.const 16
     i32.shl
     i32.or
     i32.store
     i32.const 2
     local.set $i|7
     loop $for-loop|1
      local.get $i|7
      local.get $offset
      i32.lt_s
      if
       local.get $buffer
       local.get $i|7
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16
       local.get $i|7
       i32.const 1
       i32.add
       local.set $i|7
       br $for-loop|1
      end
     end
     local.get $length
     local.get $offset
     i32.add
     return
    else
     local.get $length
     i32.const 1
     i32.eq
     if
      local.get $buffer
      i32.const 101
      i32.store16 offset=2
      block $~lib/util/number/genExponent|inlined.0 (result i32)
       local.get $buffer
       i32.const 4
       i32.add
       local.set $buffer|8
       local.get $kk
       i32.const 1
       i32.sub
       local.set $k|9
       local.get $k|9
       i32.const 0
       i32.lt_s
       local.set $sign
       local.get $sign
       if
        i32.const 0
        local.get $k|9
        i32.sub
        local.set $k|9
       end
       local.get $k|9
       call $~lib/util/number/decimalCount32
       i32.const 1
       i32.add
       local.set $decimals
       local.get $buffer|8
       local.set $buffer|12
       local.get $k|9
       local.set $num
       local.get $decimals
       local.set $offset|14
       i32.const 0
       i32.const 1
       i32.ge_s
       drop
       local.get $buffer|12
       local.get $num
       local.get $offset|14
       call $~lib/util/number/utoa32_dec_lut
       local.get $buffer|8
       i32.const 45
       i32.const 43
       local.get $sign
       select
       i32.store16
       local.get $decimals
       br $~lib/util/number/genExponent|inlined.0
      end
      local.set $length
      local.get $length
      i32.const 2
      i32.add
      return
     else
      local.get $length
      i32.const 1
      i32.shl
      local.set $len
      local.get $buffer
      i32.const 4
      i32.add
      local.get $buffer
      i32.const 2
      i32.add
      local.get $len
      i32.const 2
      i32.sub
      memory.copy
      local.get $buffer
      i32.const 46
      i32.store16 offset=2
      local.get $buffer
      local.get $len
      i32.add
      i32.const 101
      i32.store16 offset=2
      local.get $length
      block $~lib/util/number/genExponent|inlined.1 (result i32)
       local.get $buffer
       local.get $len
       i32.add
       i32.const 4
       i32.add
       local.set $buffer|16
       local.get $kk
       i32.const 1
       i32.sub
       local.set $k|17
       local.get $k|17
       i32.const 0
       i32.lt_s
       local.set $sign|18
       local.get $sign|18
       if
        i32.const 0
        local.get $k|17
        i32.sub
        local.set $k|17
       end
       local.get $k|17
       call $~lib/util/number/decimalCount32
       i32.const 1
       i32.add
       local.set $decimals|19
       local.get $buffer|16
       local.set $buffer|20
       local.get $k|17
       local.set $num|21
       local.get $decimals|19
       local.set $offset|22
       i32.const 0
       i32.const 1
       i32.ge_s
       drop
       local.get $buffer|20
       local.get $num|21
       local.get $offset|22
       call $~lib/util/number/utoa32_dec_lut
       local.get $buffer|16
       i32.const 45
       i32.const 43
       local.get $sign|18
       select
       i32.store16
       local.get $decimals|19
       br $~lib/util/number/genExponent|inlined.1
      end
      i32.add
      local.set $length
      local.get $length
      i32.const 2
      i32.add
      return
     end
     unreachable
    end
    unreachable
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/dtoa_core (param $buffer i32) (param $value f64) (result i32)
  (local $sign i32)
  (local $value|3 f64)
  (local $buffer|4 i32)
  (local $sign|5 i32)
  (local $uv i64)
  (local $exp i32)
  (local $sid i64)
  (local $frc i64)
  (local $f i64)
  (local $e i32)
  (local $frc|12 i64)
  (local $exp|13 i32)
  (local $off i32)
  (local $m i32)
  (local $minExp i32)
  (local $dk f64)
  (local $k i32)
  (local $index i32)
  (local $off|20 i32)
  (local $frc_pow i64)
  (local $exp_pow i32)
  (local $u i64)
  (local $v i64)
  (local $u0 i64)
  (local $v0 i64)
  (local $u1 i64)
  (local $v1 i64)
  (local $l i64)
  (local $t i64)
  (local $w i64)
  (local $w_frc i64)
  (local $e1 i32)
  (local $e2 i32)
  (local $w_exp i32)
  (local $u|36 i64)
  (local $v|37 i64)
  (local $u0|38 i64)
  (local $v0|39 i64)
  (local $u1|40 i64)
  (local $v1|41 i64)
  (local $l|42 i64)
  (local $t|43 i64)
  (local $w|44 i64)
  (local $wp_frc i64)
  (local $e1|46 i32)
  (local $e2|47 i32)
  (local $wp_exp i32)
  (local $u|49 i64)
  (local $v|50 i64)
  (local $u0|51 i64)
  (local $v0|52 i64)
  (local $u1|53 i64)
  (local $v1|54 i64)
  (local $l|55 i64)
  (local $t|56 i64)
  (local $w|57 i64)
  (local $wm_frc i64)
  (local $delta i64)
  (local $len i32)
  local.get $value
  f64.const 0
  f64.lt
  local.set $sign
  local.get $sign
  if
   local.get $value
   f64.neg
   local.set $value
   local.get $buffer
   i32.const 45
   i32.store16
  end
  block $~lib/util/number/grisu2|inlined.0 (result i32)
   local.get $value
   local.set $value|3
   local.get $buffer
   local.set $buffer|4
   local.get $sign
   local.set $sign|5
   local.get $value|3
   i64.reinterpret_f64
   local.set $uv
   local.get $uv
   i64.const 9218868437227405312
   i64.and
   i64.const 52
   i64.shr_u
   i32.wrap_i64
   local.set $exp
   local.get $uv
   i64.const 4503599627370495
   i64.and
   local.set $sid
   local.get $exp
   i32.const 0
   i32.ne
   i64.extend_i32_u
   i64.const 52
   i64.shl
   local.get $sid
   i64.add
   local.set $frc
   local.get $exp
   i32.const 1
   local.get $exp
   select
   i32.const 1023
   i32.const 52
   i32.add
   i32.sub
   local.set $exp
   local.get $frc
   local.set $f
   local.get $exp
   local.set $e
   local.get $f
   i64.const 1
   i64.shl
   i64.const 1
   i64.add
   local.set $frc|12
   local.get $e
   i32.const 1
   i32.sub
   local.set $exp|13
   local.get $frc|12
   i64.clz
   i32.wrap_i64
   local.set $off
   local.get $frc|12
   local.get $off
   i64.extend_i32_s
   i64.shl
   local.set $frc|12
   local.get $exp|13
   local.get $off
   i32.sub
   local.set $exp|13
   i32.const 1
   local.get $f
   i64.const 4503599627370496
   i64.eq
   i32.add
   local.set $m
   local.get $frc|12
   global.set $~lib/util/number/_frc_plus
   local.get $f
   local.get $m
   i64.extend_i32_s
   i64.shl
   i64.const 1
   i64.sub
   local.get $e
   local.get $m
   i32.sub
   local.get $exp|13
   i32.sub
   i64.extend_i32_s
   i64.shl
   global.set $~lib/util/number/_frc_minus
   local.get $exp|13
   global.set $~lib/util/number/_exp
   global.get $~lib/util/number/_exp
   local.set $minExp
   i32.const -61
   local.get $minExp
   i32.sub
   f64.convert_i32_s
   f64.const 0.30102999566398114
   f64.mul
   f64.const 347
   f64.add
   local.set $dk
   local.get $dk
   i32.trunc_sat_f64_s
   local.set $k
   local.get $k
   local.get $k
   f64.convert_i32_s
   local.get $dk
   f64.ne
   i32.add
   local.set $k
   local.get $k
   i32.const 3
   i32.shr_s
   i32.const 1
   i32.add
   local.set $index
   i32.const 348
   local.get $index
   i32.const 3
   i32.shl
   i32.sub
   global.set $~lib/util/number/_K
   i32.const 14168
   local.get $index
   i32.const 3
   i32.shl
   i32.add
   i64.load
   global.set $~lib/util/number/_frc_pow
   i32.const 14864
   local.get $index
   i32.const 1
   i32.shl
   i32.add
   i32.load16_s
   global.set $~lib/util/number/_exp_pow
   local.get $frc
   i64.clz
   i32.wrap_i64
   local.set $off|20
   local.get $frc
   local.get $off|20
   i64.extend_i32_s
   i64.shl
   local.set $frc
   local.get $exp
   local.get $off|20
   i32.sub
   local.set $exp
   global.get $~lib/util/number/_frc_pow
   local.set $frc_pow
   global.get $~lib/util/number/_exp_pow
   local.set $exp_pow
   block $~lib/util/number/umul64f|inlined.0 (result i64)
    local.get $frc
    local.set $u
    local.get $frc_pow
    local.set $v
    local.get $u
    i64.const 4294967295
    i64.and
    local.set $u0
    local.get $v
    i64.const 4294967295
    i64.and
    local.set $v0
    local.get $u
    i64.const 32
    i64.shr_u
    local.set $u1
    local.get $v
    i64.const 32
    i64.shr_u
    local.set $v1
    local.get $u0
    local.get $v0
    i64.mul
    local.set $l
    local.get $u1
    local.get $v0
    i64.mul
    local.get $l
    i64.const 32
    i64.shr_u
    i64.add
    local.set $t
    local.get $u0
    local.get $v1
    i64.mul
    local.get $t
    i64.const 4294967295
    i64.and
    i64.add
    local.set $w
    local.get $w
    i64.const 2147483647
    i64.add
    local.set $w
    local.get $t
    i64.const 32
    i64.shr_u
    local.set $t
    local.get $w
    i64.const 32
    i64.shr_u
    local.set $w
    local.get $u1
    local.get $v1
    i64.mul
    local.get $t
    i64.add
    local.get $w
    i64.add
    br $~lib/util/number/umul64f|inlined.0
   end
   local.set $w_frc
   block $~lib/util/number/umul64e|inlined.0 (result i32)
    local.get $exp
    local.set $e1
    local.get $exp_pow
    local.set $e2
    local.get $e1
    local.get $e2
    i32.add
    i32.const 64
    i32.add
    br $~lib/util/number/umul64e|inlined.0
   end
   local.set $w_exp
   block $~lib/util/number/umul64f|inlined.1 (result i64)
    global.get $~lib/util/number/_frc_plus
    local.set $u|36
    local.get $frc_pow
    local.set $v|37
    local.get $u|36
    i64.const 4294967295
    i64.and
    local.set $u0|38
    local.get $v|37
    i64.const 4294967295
    i64.and
    local.set $v0|39
    local.get $u|36
    i64.const 32
    i64.shr_u
    local.set $u1|40
    local.get $v|37
    i64.const 32
    i64.shr_u
    local.set $v1|41
    local.get $u0|38
    local.get $v0|39
    i64.mul
    local.set $l|42
    local.get $u1|40
    local.get $v0|39
    i64.mul
    local.get $l|42
    i64.const 32
    i64.shr_u
    i64.add
    local.set $t|43
    local.get $u0|38
    local.get $v1|41
    i64.mul
    local.get $t|43
    i64.const 4294967295
    i64.and
    i64.add
    local.set $w|44
    local.get $w|44
    i64.const 2147483647
    i64.add
    local.set $w|44
    local.get $t|43
    i64.const 32
    i64.shr_u
    local.set $t|43
    local.get $w|44
    i64.const 32
    i64.shr_u
    local.set $w|44
    local.get $u1|40
    local.get $v1|41
    i64.mul
    local.get $t|43
    i64.add
    local.get $w|44
    i64.add
    br $~lib/util/number/umul64f|inlined.1
   end
   i64.const 1
   i64.sub
   local.set $wp_frc
   block $~lib/util/number/umul64e|inlined.1 (result i32)
    global.get $~lib/util/number/_exp
    local.set $e1|46
    local.get $exp_pow
    local.set $e2|47
    local.get $e1|46
    local.get $e2|47
    i32.add
    i32.const 64
    i32.add
    br $~lib/util/number/umul64e|inlined.1
   end
   local.set $wp_exp
   block $~lib/util/number/umul64f|inlined.2 (result i64)
    global.get $~lib/util/number/_frc_minus
    local.set $u|49
    local.get $frc_pow
    local.set $v|50
    local.get $u|49
    i64.const 4294967295
    i64.and
    local.set $u0|51
    local.get $v|50
    i64.const 4294967295
    i64.and
    local.set $v0|52
    local.get $u|49
    i64.const 32
    i64.shr_u
    local.set $u1|53
    local.get $v|50
    i64.const 32
    i64.shr_u
    local.set $v1|54
    local.get $u0|51
    local.get $v0|52
    i64.mul
    local.set $l|55
    local.get $u1|53
    local.get $v0|52
    i64.mul
    local.get $l|55
    i64.const 32
    i64.shr_u
    i64.add
    local.set $t|56
    local.get $u0|51
    local.get $v1|54
    i64.mul
    local.get $t|56
    i64.const 4294967295
    i64.and
    i64.add
    local.set $w|57
    local.get $w|57
    i64.const 2147483647
    i64.add
    local.set $w|57
    local.get $t|56
    i64.const 32
    i64.shr_u
    local.set $t|56
    local.get $w|57
    i64.const 32
    i64.shr_u
    local.set $w|57
    local.get $u1|53
    local.get $v1|54
    i64.mul
    local.get $t|56
    i64.add
    local.get $w|57
    i64.add
    br $~lib/util/number/umul64f|inlined.2
   end
   i64.const 1
   i64.add
   local.set $wm_frc
   local.get $wp_frc
   local.get $wm_frc
   i64.sub
   local.set $delta
   local.get $buffer|4
   local.get $w_frc
   local.get $w_exp
   local.get $wp_frc
   local.get $wp_exp
   local.get $delta
   local.get $sign|5
   call $~lib/util/number/genDigits
   br $~lib/util/number/grisu2|inlined.0
  end
  local.set $len
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.get $len
  local.get $sign
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.set $len
  local.get $len
  local.get $sign
  i32.add
  return
 )
 (func $~lib/number/F64#toString (param $this f64) (param $radix i32) (result i32)
  local.get $this
  call $~lib/util/number/dtoa
  return
 )
 (func $~lib/rt/itcms/__pin (param $ptr i32) (result i32)
  (local $obj i32)
  local.get $ptr
  if
   local.get $ptr
   i32.const 20
   i32.sub
   local.set $obj
   local.get $obj
   call $~lib/rt/itcms/Object#get:color
   i32.const 3
   i32.eq
   if
    i32.const 15104
    i32.const 6704
    i32.const 338
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $obj
   call $~lib/rt/itcms/Object#unlink
   local.get $obj
   global.get $~lib/rt/itcms/pinSpace
   i32.const 3
   call $~lib/rt/itcms/Object#linkTo
  end
  local.get $ptr
  return
 )
 (func $~lib/rt/itcms/__unpin (param $ptr i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  i32.const 3
  i32.ne
  if
   i32.const 15168
   i32.const 6704
   i32.const 352
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/state
  i32.const 1
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
  else
   local.get $obj
   call $~lib/rt/itcms/Object#unlink
   local.get $obj
   global.get $~lib/rt/itcms/fromSpace
   global.get $~lib/rt/itcms/white
   call $~lib/rt/itcms/Object#linkTo
  end
 )
 (func $~lib/rt/itcms/__collect
  i32.const 0
  drop
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    i32.const 0
    i32.ne
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.ne
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i32.const 200
  i64.extend_i32_u
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
  i32.const 0
  drop
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitBinaryExpression (param $this i32) (param $expression i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitEqualityExpression (param $this i32) (param $expression i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitRelationalExpression (param $this i32) (param $expression i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitMultiplicativeExpression (param $this i32) (param $expression i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitUnaryExpression (param $this i32) (param $expression i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitTerm (param $this i32) (param $term i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitNumber (param $this i32) (param $term i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitIdentifier (param $this i32) (param $term i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitExpression (param $this i32) (param $expression i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitBinaryExpression (param $this i32) (param $expression i32) (result i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitEqualityExpression (param $this i32) (param $expression i32) (result i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitRelationalExpression (param $this i32) (param $expression i32) (result i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitMultiplicativeExpression (param $this i32) (param $expression i32) (result i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitUnaryExpression (param $this i32) (param $expression i32) (result i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitTerm (param $this i32) (param $term i32) (result i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitNumber (param $this i32) (param $term i32) (result i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitIdentifier (param $this i32) (param $term i32) (result i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitExpression (param $this i32) (param $expression i32) (result i32)
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#get:primaryOrLeft (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#get:right (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#get:operator (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#get:primaryOrLeft (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#get:right (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#get:operator (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#get:primaryOrLeft (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#get:right (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#get:operator (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:primaryOrLeft (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:right (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:operator (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#get:primaryOrRight (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#get:operator (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Term/Term#get:value (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Num/Num#get:value (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier#get:name (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/Parser/Expressions/Expression/Expression#get:primaryOrLeft (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/Parser/Expressions/Expression/Expression#get:right (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $Frontend/assembly/Parser/Expressions/Expression/Expression#get:operator (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#set:primaryOrLeft (param $this i32) (param $primaryOrLeft i32)
  local.get $this
  local.get $primaryOrLeft
  i32.store
  local.get $this
  local.get $primaryOrLeft
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#set:operator (param $this i32) (param $operator i32)
  local.get $this
  local.get $operator
  i32.store offset=4
  local.get $this
  local.get $operator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#set:right (param $this i32) (param $right i32)
  local.get $this
  local.get $right
  i32.store offset=8
  local.get $this
  local.get $right
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#set:primaryOrLeft (param $this i32) (param $primaryOrLeft i32)
  local.get $this
  local.get $primaryOrLeft
  i32.store
  local.get $this
  local.get $primaryOrLeft
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#set:operator (param $this i32) (param $operator i32)
  local.get $this
  local.get $operator
  i32.store offset=4
  local.get $this
  local.get $operator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#set:right (param $this i32) (param $right i32)
  local.get $this
  local.get $right
  i32.store offset=8
  local.get $this
  local.get $right
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#set:primaryOrLeft (param $this i32) (param $primaryOrLeft i32)
  local.get $this
  local.get $primaryOrLeft
  i32.store
  local.get $this
  local.get $primaryOrLeft
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#set:operator (param $this i32) (param $operator i32)
  local.get $this
  local.get $operator
  i32.store offset=4
  local.get $this
  local.get $operator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#set:right (param $this i32) (param $right i32)
  local.get $this
  local.get $right
  i32.store offset=8
  local.get $this
  local.get $right
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:primaryOrLeft (param $this i32) (param $primaryOrLeft i32)
  local.get $this
  local.get $primaryOrLeft
  i32.store
  local.get $this
  local.get $primaryOrLeft
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:operator (param $this i32) (param $operator i32)
  local.get $this
  local.get $operator
  i32.store offset=4
  local.get $this
  local.get $operator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:right (param $this i32) (param $right i32)
  local.get $this
  local.get $right
  i32.store offset=8
  local.get $this
  local.get $right
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#set:operator (param $this i32) (param $operator i32)
  local.get $this
  local.get $operator
  i32.store
  local.get $this
  local.get $operator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#set:primaryOrRight (param $this i32) (param $primaryOrRight i32)
  local.get $this
  local.get $primaryOrRight
  i32.store offset=4
  local.get $this
  local.get $primaryOrRight
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Term/Term#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store
  local.get $this
  local.get $value
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Num/Num#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store
  local.get $this
  local.get $value
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier#set:name (param $this i32) (param $name i32)
  local.get $this
  local.get $name
  i32.store
  local.get $this
  local.get $name
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/Expression/Expression#set:primaryOrLeft (param $this i32) (param $primaryOrLeft i32)
  local.get $this
  local.get $primaryOrLeft
  i32.store
  local.get $this
  local.get $primaryOrLeft
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/Expression/Expression#set:operator (param $this i32) (param $operator i32)
  local.get $this
  local.get $operator
  i32.store offset=4
  local.get $this
  local.get $operator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/Expressions/Expression/Expression#set:right (param $this i32) (param $right i32)
  local.get $this
  local.get $right
  i32.store offset=8
  local.get $this
  local.get $right
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitEqualityExpression (param $this i32) (param $expression i32)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitExpression (param $this i32) (param $expression i32)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitIdentifier (param $this i32) (param $term i32)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitMultiplicativeExpression (param $this i32) (param $expression i32)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitNumber (param $this i32) (param $term i32)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitBinaryExpression (param $this i32) (param $expression i32)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitUnaryExpression (param $this i32) (param $expression i32)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitTerm (param $this i32) (param $term i32)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitRelationalExpression (param $this i32) (param $expression i32)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitEqualityExpression (param $this i32) (param $expression i32) (result f64)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitExpression (param $this i32) (param $expression i32) (result f64)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitIdentifier (param $this i32) (param $term i32) (result f64)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitMultiplicativeExpression (param $this i32) (param $expression i32) (result f64)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitNumber (param $this i32) (param $term i32) (result f64)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitBinaryExpression (param $this i32) (param $expression i32) (result f64)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitUnaryExpression (param $this i32) (param $expression i32) (result f64)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitTerm (param $this i32) (param $term i32) (result f64)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitRelationalExpression (param $this i32) (param $expression i32) (result f64)
  unreachable
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#get:primaryOrLeft (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#get:right (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#get:operator (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/AST/Expressions/Expression/Expression#get:primaryOrLeft (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/AST/Expressions/Expression/Expression#get:right (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $Frontend/assembly/AST/Expressions/Expression/Expression#get:operator (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier#get:name (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:primaryOrLeft (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:right (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:operator (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Num/Num#get:value (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#get:primaryOrLeft (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#get:right (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#get:operator (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#get:primaryOrRight (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#get:operator (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Term/Term#get:value (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:primaryOrLeft (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:right (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:operator (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitIdentifier (param $this i32) (param $term i32) (result f64)
  i32.const 16288
  i32.const 16176
  i32.const 55
  i32.const 9
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/string/isSpace (param $c i32) (result i32)
  (local $1 i32)
  local.get $c
  i32.const 5760
  i32.lt_u
  if
   local.get $c
   i32.const 128
   i32.or
   i32.const 160
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $c
    i32.const 9
    i32.sub
    i32.const 13
    i32.const 9
    i32.sub
    i32.le_u
   end
   return
  end
  local.get $c
  i32.const 8192
  i32.sub
  i32.const 8202
  i32.const 8192
  i32.sub
  i32.le_u
  if
   i32.const 1
   return
  end
  block $break|0
   block $case6|0
    block $case5|0
     block $case4|0
      block $case3|0
       block $case2|0
        block $case1|0
         block $case0|0
          local.get $c
          local.set $1
          local.get $1
          i32.const 5760
          i32.eq
          br_if $case0|0
          local.get $1
          i32.const 8232
          i32.eq
          br_if $case1|0
          local.get $1
          i32.const 8233
          i32.eq
          br_if $case2|0
          local.get $1
          i32.const 8239
          i32.eq
          br_if $case3|0
          local.get $1
          i32.const 8287
          i32.eq
          br_if $case4|0
          local.get $1
          i32.const 12288
          i32.eq
          br_if $case5|0
          local.get $1
          i32.const 65279
          i32.eq
          br_if $case6|0
          br $break|0
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   return
  end
  i32.const 0
  return
 )
 (func $~lib/math/ipow32 (param $x i32) (param $e i32) (result i32)
  (local $out i32)
  (local $log i32)
  (local $4 i32)
  i32.const 1
  local.set $out
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  local.get $x
  i32.const 2
  i32.eq
  if
   i32.const 1
   local.get $e
   i32.shl
   i32.const 0
   local.get $e
   i32.const 32
   i32.lt_u
   select
   return
  end
  local.get $e
  i32.const 0
  i32.le_s
  if
   local.get $x
   i32.const -1
   i32.eq
   if
    i32.const -1
    i32.const 1
    local.get $e
    i32.const 1
    i32.and
    select
    return
   end
   local.get $e
   i32.const 0
   i32.eq
   local.get $x
   i32.const 1
   i32.eq
   i32.or
   return
  else
   local.get $e
   i32.const 1
   i32.eq
   if
    local.get $x
    return
   else
    local.get $e
    i32.const 2
    i32.eq
    if
     local.get $x
     local.get $x
     i32.mul
     return
    else
     local.get $e
     i32.const 32
     i32.lt_s
     if
      i32.const 32
      local.get $e
      i32.clz
      i32.sub
      local.set $log
      block $break|0
       block $case4|0
        block $case3|0
         block $case2|0
          block $case1|0
           block $case0|0
            local.get $log
            local.set $4
            local.get $4
            i32.const 5
            i32.eq
            br_if $case0|0
            local.get $4
            i32.const 4
            i32.eq
            br_if $case1|0
            local.get $4
            i32.const 3
            i32.eq
            br_if $case2|0
            local.get $4
            i32.const 2
            i32.eq
            br_if $case3|0
            local.get $4
            i32.const 1
            i32.eq
            br_if $case4|0
            br $break|0
           end
           local.get $e
           i32.const 1
           i32.and
           if
            local.get $out
            local.get $x
            i32.mul
            local.set $out
           end
           local.get $e
           i32.const 1
           i32.shr_u
           local.set $e
           local.get $x
           local.get $x
           i32.mul
           local.set $x
          end
          local.get $e
          i32.const 1
          i32.and
          if
           local.get $out
           local.get $x
           i32.mul
           local.set $out
          end
          local.get $e
          i32.const 1
          i32.shr_u
          local.set $e
          local.get $x
          local.get $x
          i32.mul
          local.set $x
         end
         local.get $e
         i32.const 1
         i32.and
         if
          local.get $out
          local.get $x
          i32.mul
          local.set $out
         end
         local.get $e
         i32.const 1
         i32.shr_u
         local.set $e
         local.get $x
         local.get $x
         i32.mul
         local.set $x
        end
        local.get $e
        i32.const 1
        i32.and
        if
         local.get $out
         local.get $x
         i32.mul
         local.set $out
        end
        local.get $e
        i32.const 1
        i32.shr_u
        local.set $e
        local.get $x
        local.get $x
        i32.mul
        local.set $x
       end
       local.get $e
       i32.const 1
       i32.and
       if
        local.get $out
        local.get $x
        i32.mul
        local.set $out
       end
      end
      local.get $out
      return
     end
    end
   end
  end
  loop $while-continue|1
   local.get $e
   if
    local.get $e
    i32.const 1
    i32.and
    if
     local.get $out
     local.get $x
     i32.mul
     local.set $out
    end
    local.get $e
    i32.const 1
    i32.shr_u
    local.set $e
    local.get $x
    local.get $x
    i32.mul
    local.set $x
    br $while-continue|1
   end
  end
  local.get $out
  return
 )
 (func $~lib/math/NativeMath.scalbn (param $x f64) (param $n i32) (result f64)
  (local $y f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $x
  local.set $y
  local.get $n
  i32.const 1023
  i32.gt_s
  if
   local.get $y
   f64.const 8988465674311579538646525e283
   f64.mul
   local.set $y
   local.get $n
   i32.const 1023
   i32.sub
   local.set $n
   local.get $n
   i32.const 1023
   i32.gt_s
   if
    local.get $y
    f64.const 8988465674311579538646525e283
    f64.mul
    local.set $y
    local.get $n
    i32.const 1023
    i32.sub
    local.tee $3
    i32.const 1023
    local.tee $4
    local.get $3
    local.get $4
    i32.lt_s
    select
    local.set $n
   end
  else
   local.get $n
   i32.const -1022
   i32.lt_s
   if
    local.get $y
    f64.const 2.2250738585072014e-308
    f64.const 9007199254740992
    f64.mul
    f64.mul
    local.set $y
    local.get $n
    i32.const 1022
    i32.const 53
    i32.sub
    i32.add
    local.set $n
    local.get $n
    i32.const -1022
    i32.lt_s
    if
     local.get $y
     f64.const 2.2250738585072014e-308
     f64.const 9007199254740992
     f64.mul
     f64.mul
     local.set $y
     local.get $n
     i32.const 1022
     i32.add
     i32.const 53
     i32.sub
     local.tee $5
     i32.const -1022
     local.tee $6
     local.get $5
     local.get $6
     i32.gt_s
     select
     local.set $n
    end
   end
  end
  local.get $y
  i64.const 1023
  local.get $n
  i64.extend_i32_s
  i64.add
  i64.const 52
  i64.shl
  f64.reinterpret_i64
  f64.mul
  return
 )
 (func $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<void>@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case8
    block $case7
     block $case6
      block $case5
       block $case4
        block $case3
         block $case2
          block $case1
           block $case0
            local.get $0
            i32.const 8
            i32.sub
            i32.load
            local.set $2
            local.get $2
            i32.const 16
            i32.eq
            br_if $case0
            local.get $2
            i32.const 14
            i32.eq
            br_if $case1
            local.get $2
            i32.const 15
            i32.eq
            br_if $case2
            local.get $2
            i32.const 17
            i32.eq
            br_if $case3
            local.get $2
            i32.const 18
            i32.eq
            br_if $case4
            local.get $2
            i32.const 22
            i32.eq
            br_if $case5
            local.get $2
            i32.const 20
            i32.eq
            br_if $case6
            local.get $2
            i32.const 21
            i32.eq
            br_if $case7
            local.get $2
            i32.const 13
            i32.eq
            br_if $case8
            br $default
           end
           local.get $0
           local.get $1
           call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#accept<void>
           return
          end
          local.get $0
          local.get $1
          call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#accept<void>
          return
         end
         local.get $0
         local.get $1
         call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#accept<void>
         return
        end
        local.get $0
        local.get $1
        call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#accept<void>
        return
       end
       local.get $0
       local.get $1
       call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#accept<void>
       return
      end
      local.get $0
      local.get $1
      call $Frontend/assembly/Parser/Expressions/Terms/Term/Term#accept<void>
      return
     end
     local.get $0
     local.get $1
     call $Frontend/assembly/Parser/Expressions/Terms/Num/Num#accept<void>
     return
    end
    local.get $0
    local.get $1
    call $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier#accept<void>
    return
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Parser/Expressions/Expression/Expression#accept<void>
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>@override (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block $default
   block $case8
    block $case7
     block $case6
      block $case5
       block $case4
        block $case3
         block $case2
          block $case1
           block $case0
            local.get $0
            i32.const 8
            i32.sub
            i32.load
            local.set $2
            local.get $2
            i32.const 16
            i32.eq
            br_if $case0
            local.get $2
            i32.const 14
            i32.eq
            br_if $case1
            local.get $2
            i32.const 15
            i32.eq
            br_if $case2
            local.get $2
            i32.const 17
            i32.eq
            br_if $case3
            local.get $2
            i32.const 18
            i32.eq
            br_if $case4
            local.get $2
            i32.const 22
            i32.eq
            br_if $case5
            local.get $2
            i32.const 20
            i32.eq
            br_if $case6
            local.get $2
            i32.const 21
            i32.eq
            br_if $case7
            local.get $2
            i32.const 13
            i32.eq
            br_if $case8
            br $default
           end
           local.get $0
           local.get $1
           call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
           return
          end
          local.get $0
          local.get $1
          call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
          return
         end
         local.get $0
         local.get $1
         call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
         return
        end
        local.get $0
        local.get $1
        call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
        return
       end
       local.get $0
       local.get $1
       call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
       return
      end
      local.get $0
      local.get $1
      call $Frontend/assembly/Parser/Expressions/Terms/Term/Term#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
      return
     end
     local.get $0
     local.get $1
     call $Frontend/assembly/Parser/Expressions/Terms/Num/Num#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
     return
    end
    local.get $0
    local.get $1
    call $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
    return
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Parser/Expressions/Expression/Expression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<void>@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case8
    block $case7
     block $case6
      block $case5
       block $case4
        block $case3
         block $case2
          block $case1
           block $case0
            local.get $0
            i32.const 8
            i32.sub
            i32.load
            local.set $2
            local.get $2
            i32.const 35
            i32.eq
            br_if $case0
            local.get $2
            i32.const 43
            i32.eq
            br_if $case1
            local.get $2
            i32.const 42
            i32.eq
            br_if $case2
            local.get $2
            i32.const 37
            i32.eq
            br_if $case3
            local.get $2
            i32.const 41
            i32.eq
            br_if $case4
            local.get $2
            i32.const 34
            i32.eq
            br_if $case5
            local.get $2
            i32.const 38
            i32.eq
            br_if $case6
            local.get $2
            i32.const 39
            i32.eq
            br_if $case7
            local.get $2
            i32.const 36
            i32.eq
            br_if $case8
            br $default
           end
           local.get $0
           local.get $1
           call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#accept<void>
           return
          end
          local.get $0
          local.get $1
          call $Frontend/assembly/AST/Expressions/Expression/Expression#accept<void>
          return
         end
         local.get $0
         local.get $1
         call $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier#accept<void>
         return
        end
        local.get $0
        local.get $1
        call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#accept<void>
        return
       end
       local.get $0
       local.get $1
       call $Frontend/assembly/AST/Expressions/Terms/Num/Num#accept<void>
       return
      end
      local.get $0
      local.get $1
      call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#accept<void>
      return
     end
     local.get $0
     local.get $1
     call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#accept<void>
     return
    end
    local.get $0
    local.get $1
    call $Frontend/assembly/AST/Expressions/Terms/Term/Term#accept<void>
    return
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#accept<void>
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<f64>@override (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  block $default
   block $case8
    block $case7
     block $case6
      block $case5
       block $case4
        block $case3
         block $case2
          block $case1
           block $case0
            local.get $0
            i32.const 8
            i32.sub
            i32.load
            local.set $2
            local.get $2
            i32.const 35
            i32.eq
            br_if $case0
            local.get $2
            i32.const 43
            i32.eq
            br_if $case1
            local.get $2
            i32.const 42
            i32.eq
            br_if $case2
            local.get $2
            i32.const 37
            i32.eq
            br_if $case3
            local.get $2
            i32.const 41
            i32.eq
            br_if $case4
            local.get $2
            i32.const 34
            i32.eq
            br_if $case5
            local.get $2
            i32.const 38
            i32.eq
            br_if $case6
            local.get $2
            i32.const 39
            i32.eq
            br_if $case7
            local.get $2
            i32.const 36
            i32.eq
            br_if $case8
            br $default
           end
           local.get $0
           local.get $1
           call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#accept<f64>
           return
          end
          local.get $0
          local.get $1
          call $Frontend/assembly/AST/Expressions/Expression/Expression#accept<f64>
          return
         end
         local.get $0
         local.get $1
         call $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier#accept<f64>
         return
        end
        local.get $0
        local.get $1
        call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#accept<f64>
        return
       end
       local.get $0
       local.get $1
       call $Frontend/assembly/AST/Expressions/Terms/Num/Num#accept<f64>
       return
      end
      local.get $0
      local.get $1
      call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#accept<f64>
      return
     end
     local.get $0
     local.get $1
     call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#accept<f64>
     return
    end
    local.get $0
    local.get $1
    call $Frontend/assembly/AST/Expressions/Terms/Term/Term#accept<f64>
    return
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#accept<f64>
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitBinaryExpression@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 23
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitBinaryExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitEqualityExpression@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 23
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitEqualityExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitRelationalExpression@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 23
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitRelationalExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitMultiplicativeExpression@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 23
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitMultiplicativeExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitUnaryExpression@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 23
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitUnaryExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitTerm@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 23
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitTerm
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitNumber@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 23
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitNumber
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitIdentifier@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 23
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitIdentifier
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitExpression@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 23
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitBinaryExpression@override (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 25
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitBinaryExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitEqualityExpression@override (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 25
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitEqualityExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitRelationalExpression@override (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 25
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitRelationalExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitMultiplicativeExpression@override (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 25
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitMultiplicativeExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitUnaryExpression@override (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 25
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitUnaryExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitTerm@override (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 25
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitTerm
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitNumber@override (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 25
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitNumber
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitIdentifier@override (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 25
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitIdentifier
   return
  end
  unreachable
 )
 (func $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitExpression@override (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 25
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitEqualityExpression@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 28
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitEqualityExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitExpression@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 28
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitIdentifier@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 28
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitIdentifier
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitMultiplicativeExpression@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 28
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitMultiplicativeExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitNumber@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 28
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitNumber
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitBinaryExpression@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 28
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitBinaryExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitUnaryExpression@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 28
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitUnaryExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitTerm@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 28
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitTerm
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitRelationalExpression@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 28
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitRelationalExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitEqualityExpression@override (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 30
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitEqualityExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitExpression@override (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 30
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitIdentifier@override (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 30
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitIdentifier
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitMultiplicativeExpression@override (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 30
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitMultiplicativeExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitNumber@override (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 30
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitNumber
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitBinaryExpression@override (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 30
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitBinaryExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitUnaryExpression@override (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 30
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitUnaryExpression
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitTerm@override (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 30
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitTerm
   return
  end
  unreachable
 )
 (func $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitRelationalExpression@override (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 30
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitRelationalExpression
   return
  end
  unreachable
 )
 (func $~instanceof|Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load
   local.set $1
   local.get $1
   i32.const 33
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 34
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 35
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 36
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 37
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 38
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 40
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 39
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 41
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 42
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 43
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~lib/rt/__visit_globals (param $0 i32)
  (local $1 i32)
  i32.const 6832
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 7040
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 12640
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 9888
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 6640
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 15104
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 15168
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 10960
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 12016
  local.get $0
  call $~lib/rt/itcms/__visit
  global.get $Frontend/assembly/Lexer/TokenType/TokenTypes
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/object/Object~visit (param $0 i32) (param $1 i32)
 )
 (func $~lib/array/Array<~lib/string/String>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#__visit
 )
 (func $"~lib/map/Map<~lib/string/String,i32>~visit" (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $"~lib/map/Map<~lib/string/String,i32>#__visit"
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/Lexer/Token/Token~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#__visit
 )
 (func $~lib/array/Array<i32>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#__visit
 )
 (func $Frontend/assembly/Parser/Parser/Parser~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/Parser/Expressions/Expression/Expression~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode~visit
 )
 (func $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
 )
 (func $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Num/Num~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/Parser/Expressions/Terms/AbstractTerm/AbstractTerm~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/AbstractTerm/AbstractTerm~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression~visit
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/Parser/Expressions/Terms/AbstractTerm/AbstractTerm~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Term/Term~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/Parser/Expressions/Terms/AbstractTerm/AbstractTerm~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/Index/value~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode~visit
 )
 (func $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
 )
 (func $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Term/Term~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/AST/Expressions/Terms/AbstractTerm/AbstractTerm~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/AST/Expressions/Terms/AbstractTerm/AbstractTerm~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression~visit
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Num/Num~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/AST/Expressions/Terms/AbstractTerm/AbstractTerm~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/AST/Expressions/Terms/AbstractTerm/AbstractTerm~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $Frontend/assembly/AST/Expressions/Expression/Expression~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression~visit
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/rt/__visit_members (param $0 i32) (param $1 i32)
  block $invalid
   block $Frontend/assembly/AST/Expressions/Expression/Expression
    block $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier
     block $Frontend/assembly/AST/Expressions/Terms/Num/Num
      block $Frontend/assembly/AST/Expressions/Terms/AbstractTerm/AbstractTerm
       block $Frontend/assembly/AST/Expressions/Terms/Term/Term
        block $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression
         block $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression
          block $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression
           block $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression
            block $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression
             block $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression
              block $Frontend/assembly/Index/value
               block $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>
                block $Frontend/assembly/Interpreter/Interpreter/Interpreter
                 block $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>
                  block $Frontend/assembly/AST/ASTPrinter/ASTPrinter
                   block $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
                    block $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode
                     block $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor
                      block $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>
                       block $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter
                        block $Frontend/assembly/Parser/Expressions/Terms/Term/Term
                         block $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier
                          block $Frontend/assembly/Parser/Expressions/Terms/Num/Num
                           block $Frontend/assembly/Parser/Expressions/Terms/AbstractTerm/AbstractTerm
                            block $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression
                             block $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression
                              block $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression
                               block $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression
                                block $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression
                                 block $Frontend/assembly/Parser/Expressions/Expression/Expression
                                  block $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode
                                   block $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression
                                    block $Frontend/assembly/Parser/Parser/Parser
                                     block $~lib/array/Array<i32>
                                      block $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>
                                       block $Frontend/assembly/Lexer/Token/Token
                                        block $Frontend/assembly/Lexer/Scanner/Scanner
                                         block $"~lib/map/Map<~lib/string/String,i32>"
                                          block $~lib/array/Array<~lib/string/String>
                                           block $~lib/arraybuffer/ArrayBufferView
                                            block $~lib/string/String
                                             block $~lib/arraybuffer/ArrayBuffer
                                              block $~lib/object/Object
                                               local.get $0
                                               i32.const 8
                                               i32.sub
                                               i32.load
                                               br_table $~lib/object/Object $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $~lib/array/Array<~lib/string/String> $"~lib/map/Map<~lib/string/String,i32>" $Frontend/assembly/Lexer/Scanner/Scanner $Frontend/assembly/Lexer/Token/Token $~lib/array/Array<Frontend/assembly/Lexer/Token/Token> $~lib/array/Array<i32> $Frontend/assembly/Parser/Parser/Parser $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode $Frontend/assembly/Parser/Expressions/Expression/Expression $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression $Frontend/assembly/Parser/Expressions/Terms/AbstractTerm/AbstractTerm $Frontend/assembly/Parser/Expressions/Terms/Num/Num $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier $Frontend/assembly/Parser/Expressions/Terms/Term/Term $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void> $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode> $Frontend/assembly/AST/ASTPrinter/ASTPrinter $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void> $Frontend/assembly/Interpreter/Interpreter/Interpreter $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64> $Frontend/assembly/Index/value $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression $Frontend/assembly/AST/Expressions/Terms/Term/Term $Frontend/assembly/AST/Expressions/Terms/AbstractTerm/AbstractTerm $Frontend/assembly/AST/Expressions/Terms/Num/Num $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier $Frontend/assembly/AST/Expressions/Expression/Expression $invalid
                                              end
                                              return
                                             end
                                             return
                                            end
                                            return
                                           end
                                           local.get $0
                                           local.get $1
                                           call $~lib/arraybuffer/ArrayBufferView~visit
                                           return
                                          end
                                          local.get $0
                                          local.get $1
                                          call $~lib/array/Array<~lib/string/String>~visit
                                          return
                                         end
                                         local.get $0
                                         local.get $1
                                         call $"~lib/map/Map<~lib/string/String,i32>~visit"
                                         return
                                        end
                                        local.get $0
                                        local.get $1
                                        call $Frontend/assembly/Lexer/Scanner/Scanner~visit
                                        return
                                       end
                                       local.get $0
                                       local.get $1
                                       call $Frontend/assembly/Lexer/Token/Token~visit
                                       return
                                      end
                                      local.get $0
                                      local.get $1
                                      call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>~visit
                                      return
                                     end
                                     local.get $0
                                     local.get $1
                                     call $~lib/array/Array<i32>~visit
                                     return
                                    end
                                    local.get $0
                                    local.get $1
                                    call $Frontend/assembly/Parser/Parser/Parser~visit
                                    return
                                   end
                                   return
                                  end
                                  return
                                 end
                                 local.get $0
                                 local.get $1
                                 call $Frontend/assembly/Parser/Expressions/Expression/Expression~visit
                                 return
                                end
                                local.get $0
                                local.get $1
                                call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression~visit
                                return
                               end
                               local.get $0
                               local.get $1
                               call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression~visit
                               return
                              end
                              local.get $0
                              local.get $1
                              call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression~visit
                              return
                             end
                             local.get $0
                             local.get $1
                             call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression~visit
                             return
                            end
                            local.get $0
                            local.get $1
                            call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression~visit
                            return
                           end
                           return
                          end
                          local.get $0
                          local.get $1
                          call $Frontend/assembly/Parser/Expressions/Terms/Num/Num~visit
                          return
                         end
                         local.get $0
                         local.get $1
                         call $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier~visit
                         return
                        end
                        local.get $0
                        local.get $1
                        call $Frontend/assembly/Parser/Expressions/Terms/Term/Term~visit
                        return
                       end
                       local.get $0
                       local.get $1
                       call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter~visit
                       return
                      end
                      return
                     end
                     return
                    end
                    return
                   end
                   return
                  end
                  local.get $0
                  local.get $1
                  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter~visit
                  return
                 end
                 return
                end
                return
               end
               return
              end
              local.get $0
              local.get $1
              call $Frontend/assembly/Index/value~visit
              return
             end
             return
            end
            local.get $0
            local.get $1
            call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression~visit
            return
           end
           local.get $0
           local.get $1
           call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression~visit
           return
          end
          local.get $0
          local.get $1
          call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression~visit
          return
         end
         local.get $0
         local.get $1
         call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression~visit
         return
        end
        local.get $0
        local.get $1
        call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression~visit
        return
       end
       local.get $0
       local.get $1
       call $Frontend/assembly/AST/Expressions/Terms/Term/Term~visit
       return
      end
      return
     end
     local.get $0
     local.get $1
     call $Frontend/assembly/AST/Expressions/Terms/Num/Num~visit
     return
    end
    local.get $0
    local.get $1
    call $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier~visit
    return
   end
   local.get $0
   local.get $1
   call $Frontend/assembly/AST/Expressions/Expression/Expression~visit
   return
  end
  unreachable
 )
 (func $~start
  call $start:Frontend/assembly/Index
 )
 (func $~stack_check
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__data_end
  i32.lt_s
  if
   i32.const 49584
   i32.const 49632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/string/String.__eq (param $left i32) (param $right i32) (result i32)
  (local $leftLength i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $left
  local.get $right
  i32.eq
  if
   i32.const 1
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $left
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $right
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $left
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/string/String#get:length
  local.set $leftLength
  local.get $leftLength
  local.get $right
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/string/String#get:length
  i32.ne
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $left
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 0
  local.get $right
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  local.get $leftLength
  call $~lib/util/string/compareImpl
  i32.eqz
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/calculator/calculate (param $val1 f64) (param $val2 f64) (param $operator i32) (result f64)
  (local $3 i32)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 32
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   local.get $val2
   call $Frontend/assembly/calculator/add
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 64
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   local.get $val2
   call $Frontend/assembly/calculator/subtract
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 96
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   local.get $val2
   call $Frontend/assembly/calculator/multiply
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 128
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   local.get $val2
   call $Frontend/assembly/calculator/divide
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 160
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   local.get $val2
   call $Frontend/assembly/calculator/remainder
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 192
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   call $Frontend/assembly/calculator/log
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 4336
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   call $Frontend/assembly/calculator/sqrt
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 4368
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   call $Frontend/assembly/calculator/sin
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 4608
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   call $Frontend/assembly/calculator/cos
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 4640
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   call $Frontend/assembly/calculator/tan
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 4672
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   call $Frontend/assembly/calculator/asin
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 4704
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   call $Frontend/assembly/calculator/acos
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 4736
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   call $Frontend/assembly/calculator/atan
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 4768
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   local.get $val2
   call $Frontend/assembly/calculator/power
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 4800
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   call $Frontend/assembly/calculator/factorial
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 192
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $val1
   call $Frontend/assembly/calculator/log
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 4832
  i32.const 4896
  i32.const 52
  i32.const 5
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#constructor" (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 5
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  call $"~lib/map/Map<~lib/string/String,i32>#set:buckets"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $"~lib/map/Map<~lib/string/String,i32>#set:bucketsMask"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.0" (result i32)
   i32.const 12
   br $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.0"
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  call $"~lib/map/Map<~lib/string/String,i32>#set:entries"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 4
  call $"~lib/map/Map<~lib/string/String,i32>#set:entriesCapacity"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $"~lib/map/Map<~lib/string/String,i32>#set:entriesOffset"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $"~lib/map/Map<~lib/string/String,i32>#set:entriesCount"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/util/hash/HASH<~lib/string/String> (param $key i32) (result i32)
  (local $key|1 i32)
  (local $h i32)
  (local $len i32)
  (local $pos i32)
  (local $s1 i32)
  (local $s2 i32)
  (local $s3 i32)
  (local $s4 i32)
  (local $end i32)
  (local $h|10 i32)
  (local $key|11 i32)
  (local $h|12 i32)
  (local $key|13 i32)
  (local $h|14 i32)
  (local $key|15 i32)
  (local $h|16 i32)
  (local $key|17 i32)
  (local $end|18 i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 1
  drop
  block $~lib/util/hash/hashStr|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $key
   local.tee $key|1
   i32.store
   local.get $key|1
   i32.const 0
   i32.eq
   if
    i32.const 0
    br $~lib/util/hash/hashStr|inlined.0
   end
   local.get $key|1
   local.set $19
   global.get $~lib/memory/__stack_pointer
   local.get $19
   i32.store offset=4
   local.get $19
   call $~lib/string/String#get:length
   i32.const 1
   i32.shl
   local.set $h
   local.get $h
   local.set $len
   local.get $key|1
   local.set $pos
   local.get $len
   i32.const 16
   i32.ge_u
   if
    i32.const 0
    i32.const -1640531535
    i32.add
    i32.const -2048144777
    i32.add
    local.set $s1
    i32.const 0
    i32.const -2048144777
    i32.add
    local.set $s2
    i32.const 0
    local.set $s3
    i32.const 0
    i32.const -1640531535
    i32.sub
    local.set $s4
    local.get $len
    local.get $pos
    i32.add
    i32.const 16
    i32.sub
    local.set $end
    loop $while-continue|0
     local.get $pos
     local.get $end
     i32.le_u
     if
      block $~lib/util/hash/mix|inlined.0 (result i32)
       local.get $s1
       local.set $h|10
       local.get $pos
       i32.load
       local.set $key|11
       local.get $h|10
       local.get $key|11
       i32.const -2048144777
       i32.mul
       i32.add
       i32.const 13
       i32.rotl
       i32.const -1640531535
       i32.mul
       br $~lib/util/hash/mix|inlined.0
      end
      local.set $s1
      block $~lib/util/hash/mix|inlined.1 (result i32)
       local.get $s2
       local.set $h|12
       local.get $pos
       i32.load offset=4
       local.set $key|13
       local.get $h|12
       local.get $key|13
       i32.const -2048144777
       i32.mul
       i32.add
       i32.const 13
       i32.rotl
       i32.const -1640531535
       i32.mul
       br $~lib/util/hash/mix|inlined.1
      end
      local.set $s2
      block $~lib/util/hash/mix|inlined.2 (result i32)
       local.get $s3
       local.set $h|14
       local.get $pos
       i32.load offset=8
       local.set $key|15
       local.get $h|14
       local.get $key|15
       i32.const -2048144777
       i32.mul
       i32.add
       i32.const 13
       i32.rotl
       i32.const -1640531535
       i32.mul
       br $~lib/util/hash/mix|inlined.2
      end
      local.set $s3
      block $~lib/util/hash/mix|inlined.3 (result i32)
       local.get $s4
       local.set $h|16
       local.get $pos
       i32.load offset=12
       local.set $key|17
       local.get $h|16
       local.get $key|17
       i32.const -2048144777
       i32.mul
       i32.add
       i32.const 13
       i32.rotl
       i32.const -1640531535
       i32.mul
       br $~lib/util/hash/mix|inlined.3
      end
      local.set $s4
      local.get $pos
      i32.const 16
      i32.add
      local.set $pos
      br $while-continue|0
     end
    end
    local.get $h
    local.get $s1
    i32.const 1
    i32.rotl
    local.get $s2
    i32.const 7
    i32.rotl
    i32.add
    local.get $s3
    i32.const 12
    i32.rotl
    i32.add
    local.get $s4
    i32.const 18
    i32.rotl
    i32.add
    i32.add
    local.set $h
   else
    local.get $h
    i32.const 0
    i32.const 374761393
    i32.add
    i32.add
    local.set $h
   end
   local.get $key|1
   local.get $len
   i32.add
   i32.const 4
   i32.sub
   local.set $end|18
   loop $while-continue|1
    local.get $pos
    local.get $end|18
    i32.le_u
    if
     local.get $h
     local.get $pos
     i32.load
     i32.const -1028477379
     i32.mul
     i32.add
     local.set $h
     local.get $h
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.set $h
     local.get $pos
     i32.const 4
     i32.add
     local.set $pos
     br $while-continue|1
    end
   end
   local.get $key|1
   local.get $len
   i32.add
   local.set $end|18
   loop $while-continue|2
    local.get $pos
    local.get $end|18
    i32.lt_u
    if
     local.get $h
     local.get $pos
     i32.load8_u
     i32.const 374761393
     i32.mul
     i32.add
     local.set $h
     local.get $h
     i32.const 11
     i32.rotl
     i32.const -1640531535
     i32.mul
     local.set $h
     local.get $pos
     i32.const 1
     i32.add
     local.set $pos
     br $while-continue|2
    end
   end
   local.get $h
   local.get $h
   i32.const 15
   i32.shr_u
   i32.xor
   local.set $h
   local.get $h
   i32.const -2048144777
   i32.mul
   local.set $h
   local.get $h
   local.get $h
   i32.const 13
   i32.shr_u
   i32.xor
   local.set $h
   local.get $h
   i32.const -1028477379
   i32.mul
   local.set $h
   local.get $h
   local.get $h
   i32.const 16
   i32.shr_u
   i32.xor
   local.set $h
   local.get $h
   br $~lib/util/hash/hashStr|inlined.0
  end
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
  return
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#find" (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $"~lib/map/Map<~lib/string/String,i32>#get:buckets"
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $"~lib/map/Map<~lib/string/String,i32>#get:bucketsMask"
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $"~lib/map/MapEntry<~lib/string/String,i32>#get:taggedNext"
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $"~lib/map/MapEntry<~lib/string/String,i32>#get:key"
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#rehash" (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.1" (result i32)
   i32.const 12
   br $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.1"
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  call $"~lib/map/Map<~lib/string/String,i32>#get:entries"
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  call $"~lib/map/Map<~lib/string/String,i32>#get:entriesOffset"
  block $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.2" (result i32)
   i32.const 12
   br $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.2"
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $"~lib/map/MapEntry<~lib/string/String,i32>#get:taggedNext"
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $"~lib/map/MapEntry<~lib/string/String,i32>#get:key"
     local.tee $oldEntryKey
     i32.store offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store offset=8
     local.get $14
     call $"~lib/map/MapEntry<~lib/string/String,i32>#set:key"
     local.get $newEntry
     local.get $oldEntry
     call $"~lib/map/MapEntry<~lib/string/String,i32>#get:value"
     call $"~lib/map/MapEntry<~lib/string/String,i32>#set:value"
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load
     call $"~lib/map/MapEntry<~lib/string/String,i32>#set:taggedNext"
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store
     local.get $newPtr
     block $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.3" (result i32)
      i32.const 12
      br $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.3"
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.4" (result i32)
     i32.const 12
     br $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.4"
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=16
  local.get $14
  call $"~lib/map/Map<~lib/string/String,i32>#set:buckets"
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $newBucketsMask
  call $"~lib/map/Map<~lib/string/String,i32>#set:bucketsMask"
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=16
  local.get $14
  call $"~lib/map/Map<~lib/string/String,i32>#set:entries"
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $"~lib/map/Map<~lib/string/String,i32>#set:entriesCapacity"
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=16
  local.get $14
  call $"~lib/map/Map<~lib/string/String,i32>#get:entriesCount"
  call $"~lib/map/Map<~lib/string/String,i32>#set:entriesOffset"
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#set" (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=4
  local.get $8
  local.get $hashCode
  call $"~lib/map/Map<~lib/string/String,i32>#find"
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   call $"~lib/map/MapEntry<~lib/string/String,i32>#set:value"
   i32.const 0
   drop
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<~lib/string/String,i32>#get:entriesOffset"
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<~lib/string/String,i32>#get:entriesCapacity"
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    call $"~lib/map/Map<~lib/string/String,i32>#get:entriesCount"
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    call $"~lib/map/Map<~lib/string/String,i32>#get:entriesCapacity"
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     call $"~lib/map/Map<~lib/string/String,i32>#get:bucketsMask"
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     call $"~lib/map/Map<~lib/string/String,i32>#get:bucketsMask"
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $"~lib/map/Map<~lib/string/String,i32>#rehash"
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<~lib/string/String,i32>#get:entries"
   local.tee $entries
   i32.store offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   call $"~lib/map/Map<~lib/string/String,i32>#get:entriesOffset"
   local.tee $6
   i32.const 1
   i32.add
   call $"~lib/map/Map<~lib/string/String,i32>#set:entriesOffset"
   local.get $6
   block $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.5" (result i32)
    i32.const 12
    br $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.5"
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/MapEntry<~lib/string/String,i32>#set:key"
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   call $"~lib/map/MapEntry<~lib/string/String,i32>#set:value"
   i32.const 0
   drop
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   call $"~lib/map/Map<~lib/string/String,i32>#get:entriesCount"
   i32.const 1
   i32.add
   call $"~lib/map/Map<~lib/string/String,i32>#set:entriesCount"
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<~lib/string/String,i32>#get:buckets"
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<~lib/string/String,i32>#get:bucketsMask"
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load
   call $"~lib/map/MapEntry<~lib/string/String,i32>#set:taggedNext"
   local.get $bucketPtrBase
   local.get $entry
   i32.store
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $start:Frontend/assembly/Lexer/ReservedWords
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  memory.size
  i32.const 16
  i32.shl
  global.get $~lib/memory/__heap_base
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 6752
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 6784
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 6928
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
  i32.const 0
  call $"~lib/map/Map<~lib/string/String,i32>#constructor"
  global.set $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7152
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.AND
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7184
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.CLASS
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7216
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.ELSE
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7248
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.FALSE
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7280
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.FUN
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7312
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.FOR
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7344
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.IF
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7376
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.NIL
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7408
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.OR
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7440
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.PRINT
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7472
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.RETURN
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7504
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.SUPER
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7536
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.THIS
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7568
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.TRUE
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7600
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.VAR
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7632
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.WHILE
  call $"~lib/map/Map<~lib/string/String,i32>#set"
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#constructor (param $this i32) (param $source i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 6
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $Frontend/assembly/Lexer/Scanner/Scanner#set:source
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  i32.const 2
  i32.const 8
  i32.const 7664
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $Frontend/assembly/Lexer/Scanner/Scanner#set:tokens
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $Frontend/assembly/Lexer/Scanner/Scanner#set:current
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $Frontend/assembly/Lexer/Scanner/Scanner#set:start
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 1
  call $Frontend/assembly/Lexer/Scanner/Scanner#set:line
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  i32.const 2
  i32.const 4
  i32.const 7696
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $Frontend/assembly/Lexer/Scanner/Scanner#set:errors
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $source
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $Frontend/assembly/Lexer/Scanner/Scanner#set:source
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#isAtEnd (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/string/String#get:length
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
  i32.le_s
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/string/String#charAt (param $this i32) (param $pos i32) (result i32)
  (local $out i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $pos
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/string/String#get:length
  i32.ge_u
  if
   i32.const 7728
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store offset=4
  local.get $out
  local.get $this
  local.get $pos
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
  i32.store16
  local.get $out
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#advance (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
  local.tee $1
  i32.const 1
  i32.add
  call $Frontend/assembly/Lexer/Scanner/Scanner#set:current
  local.get $1
  call $~lib/string/String#charAt
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#isDigit (param $this i32) (param $c i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 7760
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 7792
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 7824
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 7856
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 7888
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 7920
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 7952
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 7984
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8016
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8048
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#peak (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#isAtEnd
  if
   i32.const 8080
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
  call $~lib/string/String#charAt
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/string/String#substring (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $finalStart i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $finalEnd i32)
  (local $14 i32)
  (local $15 i32)
  (local $fromPos i32)
  (local $17 i32)
  (local $18 i32)
  (local $toPos i32)
  (local $size i32)
  (local $out i32)
  (local $22 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $22
  global.get $~lib/memory/__stack_pointer
  local.get $22
  i32.store
  local.get $22
  call $~lib/string/String#get:length
  local.set $len
  local.get $start
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.tee $6
  local.get $len
  local.tee $7
  local.get $6
  local.get $7
  i32.lt_s
  select
  local.set $finalStart
  local.get $end
  local.tee $9
  i32.const 0
  local.tee $10
  local.get $9
  local.get $10
  i32.gt_s
  select
  local.tee $11
  local.get $len
  local.tee $12
  local.get $11
  local.get $12
  i32.lt_s
  select
  local.set $finalEnd
  local.get $finalStart
  local.tee $14
  local.get $finalEnd
  local.tee $15
  local.get $14
  local.get $15
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.set $fromPos
  local.get $finalStart
  local.tee $17
  local.get $finalEnd
  local.tee $18
  local.get $17
  local.get $18
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.set $toPos
  local.get $toPos
  local.get $fromPos
  i32.sub
  local.set $size
  local.get $size
  i32.eqz
  if
   i32.const 7728
   local.set $22
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $22
   return
  end
  local.get $fromPos
  i32.eqz
  if (result i32)
   local.get $toPos
   local.get $len
   i32.const 1
   i32.shl
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $this
   local.set $22
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $22
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $size
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store offset=4
  local.get $out
  local.get $this
  local.get $fromPos
  i32.add
  local.get $size
  memory.copy
  local.get $out
  local.set $22
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $22
  return
 )
 (func $Frontend/assembly/Lexer/Token/Token#constructor (param $this i32) (param $type i32) (param $lexeme i32) (param $literal i32) (param $line i32) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 7
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  call $Frontend/assembly/Lexer/Token/Token#set:type
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  call $Frontend/assembly/Lexer/Token/Token#set:lexeme
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  call $Frontend/assembly/Lexer/Token/Token#set:literal
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  call $Frontend/assembly/Lexer/Token/Token#set:line
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $type
  call $Frontend/assembly/Lexer/Token/Token#set:type
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $lexeme
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $Frontend/assembly/Lexer/Token/Token#set:lexeme
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $literal
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $Frontend/assembly/Lexer/Token/Token#set:literal
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $line
  call $Frontend/assembly/Lexer/Token/Token#set:line
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/array/ensureCapacity (param $array i32) (param $newSize i32) (param $alignLog2 i32) (param $canGrow i32)
  (local $oldCapacity i32)
  (local $oldData i32)
  (local $6 i32)
  (local $7 i32)
  (local $newCapacity i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $newData i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $array
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  local.set $oldCapacity
  local.get $newSize
  local.get $oldCapacity
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   local.get $newSize
   i32.const 1073741820
   local.get $alignLog2
   i32.shr_u
   i32.gt_u
   if
    i32.const 7040
    i32.const 8144
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   local.get $array
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   call $~lib/arraybuffer/ArrayBufferView#get:buffer
   local.set $oldData
   local.get $newSize
   local.tee $6
   i32.const 8
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_u
   select
   local.get $alignLog2
   i32.shl
   local.set $newCapacity
   local.get $canGrow
   if
    local.get $oldCapacity
    i32.const 1
    i32.shl
    local.tee $9
    i32.const 1073741820
    local.tee $10
    local.get $9
    local.get $10
    i32.lt_u
    select
    local.tee $11
    local.get $newCapacity
    local.tee $12
    local.get $11
    local.get $12
    i32.gt_u
    select
    local.set $newCapacity
   end
   local.get $oldData
   local.get $newCapacity
   call $~lib/rt/itcms/__renew
   local.set $newData
   i32.const 2
   global.get $~lib/shared/runtime/Runtime.Incremental
   i32.ne
   drop
   local.get $newData
   local.get $oldData
   i32.ne
   if
    local.get $array
    local.get $newData
    i32.store
    local.get $array
    local.get $newData
    i32.store offset=4
    local.get $array
    local.get $newData
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   local.get $array
   local.get $newCapacity
   i32.store offset=8
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $len
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#addToken (param $this i32) (param $type i32) (param $literal i32)
  (local $text i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:start
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
  call $~lib/string/String#substring
  local.tee $text
  i32.store offset=8
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:tokens
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 0
  local.get $type
  local.get $text
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  local.get $literal
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=20
  local.get $4
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:line
  call $Frontend/assembly/Lexer/Token/Token#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#number (param $this i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  loop $while-continue|0
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#peak
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#isDigit
   if
    local.get $this
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    call $Frontend/assembly/Lexer/Scanner/Scanner#advance
    drop
    br $while-continue|0
   end
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#peak
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 8112
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/string/String.__eq
  if (result i32)
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
   i32.const 1
   i32.add
   call $~lib/string/String#charAt
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#isDigit
  else
   i32.const 0
  end
  if
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#advance
   drop
   loop $while-continue|1
    local.get $this
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    local.get $this
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    local.get $1
    call $Frontend/assembly/Lexer/Scanner/Scanner#peak
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $1
    call $Frontend/assembly/Lexer/Scanner/Scanner#isDigit
    if
     local.get $this
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $1
     call $Frontend/assembly/Lexer/Scanner/Scanner#advance
     drop
     br $while-continue|1
    end
   end
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.NUMBER
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:start
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
  call $~lib/string/String#substring
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#isSmallLetter (param $this i32) (param $c i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 8224
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8256
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8288
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8320
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8352
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8384
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8416
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8448
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8480
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8512
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8544
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8576
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8608
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8640
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8672
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8704
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8736
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8768
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8800
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8832
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8864
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8896
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8928
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8960
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 8992
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9024
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#isCapitalLetter (param $this i32) (param $c i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 9056
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9088
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9120
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9152
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9184
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9216
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9248
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9280
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9312
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9344
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9376
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9408
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9440
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9472
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9504
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9536
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9568
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9600
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9632
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9664
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9696
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9728
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9760
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9792
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9824
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 9856
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/string/String.__eq
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#isAlpha (param $this i32) (param $c i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 8192
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if (result i32)
   i32.const 1
  else
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#isSmallLetter
  end
  if (result i32)
   i32.const 1
  else
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $c
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#isCapitalLetter
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#has" (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,i32>#find"
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#get" (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,i32>#find"
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 9888
   i32.const 9952
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $"~lib/map/MapEntry<~lib/string/String,i32>#get:value"
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#identifier (param $this i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  loop $while-continue|0
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#peak
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#isAlpha
   if (result i32)
    i32.const 1
   else
    local.get $this
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    local.get $this
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    local.get $1
    call $Frontend/assembly/Lexer/Scanner/Scanner#peak
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $1
    call $Frontend/assembly/Lexer/Scanner/Scanner#isDigit
   end
   if
    local.get $this
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    call $Frontend/assembly/Lexer/Scanner/Scanner#advance
    drop
    br $while-continue|0
   end
  end
  global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:start
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
  call $~lib/string/String#substring
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $"~lib/map/Map<~lib/string/String,i32>#has"
  if
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   global.get $Frontend/assembly/Lexer/ReservedWords/ReservedWords
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   local.get $1
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#get:start
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
   call $~lib/string/String#substring
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   call $"~lib/map/Map<~lib/string/String,i32>#get"
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#get:start
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
   call $~lib/string/String#substring
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.IDENTIFIER
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:start
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
  call $~lib/string/String#substring
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/string/String.__ne (param $left i32) (param $right i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $left
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $right
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  i32.eqz
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/string/String#concat (param $this i32) (param $other i32) (result i32)
  (local $thisSize i32)
  (local $otherSize i32)
  (local $outSize i32)
  (local $out i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $thisSize
  local.get $other
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $otherSize
  local.get $thisSize
  local.get $otherSize
  i32.add
  local.set $outSize
  local.get $outSize
  i32.const 0
  i32.eq
  if
   i32.const 7728
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store offset=4
  local.get $out
  local.get $this
  local.get $thisSize
  memory.copy
  local.get $out
  local.get $thisSize
  i32.add
  local.get $other
  local.get $otherSize
  memory.copy
  local.get $out
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/string/String.__concat (param $left i32) (param $right i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $left
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $right
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String#concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/array/Array<~lib/string/String>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<~lib/string/String>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $len
  call $~lib/array/Array<~lib/string/String>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#match (param $this i32) (param $expected i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $Frontend/assembly/Lexer/Scanner/Scanner#isAtEnd
  if
   i32.const 0
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
  call $~lib/string/String#charAt
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $expected
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__ne
  if
   i32.const 0
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
  i32.const 1
  i32.add
  call $Frontend/assembly/Lexer/Scanner/Scanner#set:current
  i32.const 1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#charSwitch (param $this i32) (param $c i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Lexer/Scanner/Scanner#isDigit
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#number
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Lexer/Scanner/Scanner#isAlpha
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#identifier
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 10000
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 10032
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.LEFT_PAREN
   i32.const 10032
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 10064
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.RIGHT_PAREN
   i32.const 10064
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 10096
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.LEFT_BRACE
   i32.const 10096
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 10128
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.RIGHT_BRACE
   i32.const 10128
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 10160
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.COMMA
   i32.const 10160
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 8112
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.DOT
   i32.const 8112
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 64
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.MINUS
   i32.const 64
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 32
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.PLUS
   i32.const 32
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 10192
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.SEMICOLON
   i32.const 10192
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 96
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.STAR
   i32.const 96
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 10224
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   loop $while-continue|0
    local.get $this
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=12
    local.get $2
    call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    local.get $2
    local.get $this
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=12
    local.get $2
    call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
    call $~lib/string/String#charAt
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 10224
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $~lib/string/String.__ne
    if (result i32)
     local.get $this
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $2
     call $Frontend/assembly/Lexer/Scanner/Scanner#isAtEnd
     i32.eqz
    else
     i32.const 0
    end
    if
     local.get $this
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     local.get $2
     call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     local.get $2
     local.get $this
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     local.get $2
     call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
     call $~lib/string/String#charAt
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $2
     i32.const 10256
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     local.get $2
     call $~lib/string/String.__eq
     if
      local.get $this
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store
      local.get $2
      local.get $this
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=4
      local.get $2
      call $Frontend/assembly/Lexer/Scanner/Scanner#get:line
      i32.const 1
      i32.add
      call $Frontend/assembly/Lexer/Scanner/Scanner#set:line
     end
     local.get $this
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $2
     local.get $this
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     local.get $2
     call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
     i32.const 1
     i32.add
     call $Frontend/assembly/Lexer/Scanner/Scanner#set:current
     br $while-continue|0
    end
   end
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#isAtEnd
   if
    local.get $this
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    local.get $2
    call $Frontend/assembly/Lexer/Scanner/Scanner#get:errors
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 10288
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    local.get $2
    local.get $this
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=16
    local.get $2
    call $Frontend/assembly/Lexer/Scanner/Scanner#get:line
    i32.const 10
    call $~lib/number/I32#toString
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=12
    local.get $2
    call $~lib/string/String.__concat
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $~lib/array/Array<~lib/string/String>#push
    drop
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
   i32.const 1
   i32.add
   call $Frontend/assembly/Lexer/Scanner/Scanner#set:current
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.STRING
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#get:start
   i32.const 1
   i32.add
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
   i32.const 1
   i32.sub
   call $~lib/string/String#substring
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 10256
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#get:line
   i32.const 1
   i32.add
   call $Frontend/assembly/Lexer/Scanner/Scanner#set:line
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 12112
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 12112
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#match
   if
    local.get $this
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    global.get $Frontend/assembly/Lexer/TokenType/TokenType.AND
    i32.const 12144
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 12176
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 12176
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#match
   if
    local.get $this
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    global.get $Frontend/assembly/Lexer/TokenType/TokenType.OR
    i32.const 12208
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 4800
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 12240
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#match
   if
    local.get $this
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    global.get $Frontend/assembly/Lexer/TokenType/TokenType.BANG_EQUAL
    i32.const 12272
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.BANG
   i32.const 4800
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 12240
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 12240
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#match
   if
    local.get $this
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    global.get $Frontend/assembly/Lexer/TokenType/TokenType.EQUAL_EQUAL
    i32.const 12304
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.EQUAL
   i32.const 12240
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 12336
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 12240
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#match
   if
    local.get $this
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    global.get $Frontend/assembly/Lexer/TokenType/TokenType.LESS_EQUAL
    i32.const 12368
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.LESS
   i32.const 12336
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 12400
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 12240
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#match
   if
    local.get $this
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    global.get $Frontend/assembly/Lexer/TokenType/TokenType.GREATER_EQUAL
    i32.const 12432
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.GREATER
   i32.const 12400
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 128
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 128
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#match
   if
    loop $while-continue|1
     local.get $this
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     local.get $2
     call $Frontend/assembly/Lexer/Scanner/Scanner#get:source
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     local.get $2
     local.get $this
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     local.get $2
     call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
     call $~lib/string/String#charAt
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $2
     i32.const 10256
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     local.get $2
     call $~lib/string/String.__ne
     if (result i32)
      local.get $this
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store
      local.get $2
      call $Frontend/assembly/Lexer/Scanner/Scanner#isAtEnd
      i32.eqz
     else
      i32.const 0
     end
     if
      local.get $this
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store
      local.get $2
      local.get $this
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=4
      local.get $2
      call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
      i32.const 1
      i32.add
      call $Frontend/assembly/Lexer/Scanner/Scanner#set:current
      br $while-continue|1
     end
    end
   end
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.get $Frontend/assembly/Lexer/TokenType/TokenType.SLASH
   i32.const 128
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/Lexer/Scanner/Scanner#addToken
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:errors
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 12464
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  local.get $2
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=28
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 12528
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:line
  i32.const 10
  call $~lib/number/I32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#scanToken (param $this i32)
  (local $c i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $Frontend/assembly/Lexer/Scanner/Scanner#advance
  local.tee $c
  i32.store offset=4
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $c
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/Lexer/Scanner/Scanner#charSwitch
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/Lexer/Scanner/Scanner#scanTokens (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  loop $while-continue|0
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $Frontend/assembly/Lexer/Scanner/Scanner#isAtEnd
   i32.eqz
   if
    local.get $this
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    local.get $this
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $1
    call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
    call $Frontend/assembly/Lexer/Scanner/Scanner#set:start
    local.get $this
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    call $Frontend/assembly/Lexer/Scanner/Scanner#scanToken
    br $while-continue|0
   end
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:tokens
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 0
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.EOF
  i32.const 7728
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  i32.const 0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:current
  call $Frontend/assembly/Lexer/Token/Token#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#push
  drop
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $Frontend/assembly/Lexer/Scanner/Scanner#get:tokens
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $Frontend/assembly/Parser/Parser/Parser#constructor (param $this i32) (param $tokens i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 10
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Parser/Parser#set:tokens
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Parser/Parser#set:current
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.const 2
  i32.const 4
  i32.const 12576
  call $~lib/rt/__newArray
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Parser/Parser#set:errors
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $tokens
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Parser/Parser#set:tokens
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:length_
  i32.ge_u
  if
   i32.const 6832
   i32.const 8144
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $value
  i32.store offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 12640
   i32.const 8144
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/Parser/Parser/Parser#isAtEnd (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  call $Frontend/assembly/Parser/Parser/Parser#get:tokens
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  call $Frontend/assembly/Parser/Parser/Parser#get:current
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#__get
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $Frontend/assembly/Lexer/Token/Token#get:type
  global.get $Frontend/assembly/Lexer/TokenType/TokenType.EOF
  i32.eq
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<i32>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<i32>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<i32>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<i32>#get:length_
  i32.ge_u
  if
   i32.const 6832
   i32.const 8144
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<i32>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $value
  i32.const 0
  drop
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/Parser/Parser/Parser#match (param $this i32) (param $expected i32) (result i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $Frontend/assembly/Parser/Parser/Parser#isAtEnd
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $expected
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $~lib/array/Array<i32>#get:length
   i32.lt_s
   if
    local.get $this
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=8
    local.get $3
    call $Frontend/assembly/Parser/Parser/Parser#get:tokens
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $3
    local.get $this
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=8
    local.get $3
    call $Frontend/assembly/Parser/Parser/Parser#get:current
    call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    call $Frontend/assembly/Lexer/Token/Token#get:type
    local.get $expected
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    local.get $i
    call $~lib/array/Array<i32>#__get
    i32.eq
    if
     local.get $this
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     local.get $3
     local.get $this
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $3
     call $Frontend/assembly/Parser/Parser/Parser#get:current
     i32.const 1
     i32.add
     call $Frontend/assembly/Parser/Parser/Parser#set:current
     i32.const 1
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/Parser/Parser/Parser#previous (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $Frontend/assembly/Parser/Parser/Parser#get:tokens
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $Frontend/assembly/Parser/Parser/Parser#get:current
  i32.const 1
  i32.sub
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#__get
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 12
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 11
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/AbstractTerm/AbstractTerm#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 19
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Num/Num#constructor (param $this i32) (param $value i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 20
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/Terms/Num/Num#set:value
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/Expressions/Terms/AbstractTerm/AbstractTerm#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/Parser/Expressions/Terms/Num/Num#set:value
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier#constructor (param $this i32) (param $name i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 21
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier#set:name
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/Expressions/Terms/AbstractTerm/AbstractTerm#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $name
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier#set:name
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $Frontend/assembly/Parser/Parser/Parser#peek (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $Frontend/assembly/Parser/Parser/Parser#get:tokens
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $Frontend/assembly/Parser/Parser/Parser#get:current
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#__get
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Term/Term#constructor (param $this i32) (param $value i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 22
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/Terms/Term/Term#set:value
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/Expressions/Terms/AbstractTerm/AbstractTerm#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/Parser/Expressions/Terms/Term/Term#set:value
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $Frontend/assembly/Parser/Parser/Parser#term (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  i32.const 1
  i32.const 2
  i32.const 9
  i32.const 12768
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#match
  if
   i32.const 0
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   call $Frontend/assembly/Parser/Parser/Parser#previous
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   call $Frontend/assembly/Parser/Expressions/Terms/Num/Num#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  i32.const 1
  i32.const 2
  i32.const 9
  i32.const 12800
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#match
  if
   i32.const 0
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   call $Frontend/assembly/Parser/Parser/Parser#previous
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   call $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#get:errors
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  i32.const 12832
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=24
  local.get $6
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=36
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#peek
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=32
  local.get $6
  call $Frontend/assembly/Lexer/Token/Token#get:literal
  local.tee $5
  i32.store offset=40
  local.get $5
  if (result i32)
   local.get $5
  else
   i32.const 12896
   i32.const 13024
   i32.const 154
   i32.const 49
   call $~lib/builtins/abort
   unreachable
  end
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=28
  local.get $6
  call $~lib/string/String.__concat
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=16
  local.get $6
  i32.const 13120
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=20
  local.get $6
  call $~lib/string/String.__concat
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=20
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#peek
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=16
  local.get $6
  call $Frontend/assembly/Lexer/Token/Token#get:line
  i32.const 10
  call $~lib/number/I32#toString
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=12
  local.get $6
  call $~lib/string/String.__concat
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  call $~lib/array/Array<~lib/string/String>#push
  drop
  i32.const 0
  i32.const 13168
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  call $Frontend/assembly/Parser/Expressions/Terms/Term/Term#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#constructor (param $this i32) (param $operator i32) (param $primaryOrRight i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 18
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#set:operator
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#set:primaryOrRight
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#set:operator
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $primaryOrRight
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#set:primaryOrRight
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $Frontend/assembly/Parser/Parser/Parser#unaryExpression (param $this i32) (result i32)
  (local $operator i32)
  (local $rightOrPrimary i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  i32.const 0
  local.set $operator
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 12608
  call $~lib/rt/__newArray
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/Parser/Parser#match
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   call $Frontend/assembly/Parser/Parser/Parser#previous
   local.tee $operator
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   call $Frontend/assembly/Parser/Parser/Parser#unaryExpression
   local.tee $rightOrPrimary
   i32.store offset=12
  else
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   call $Frontend/assembly/Parser/Parser/Parser#term
   local.tee $rightOrPrimary
   i32.store offset=12
  end
  i32.const 0
  local.get $operator
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $rightOrPrimary
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#constructor
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#constructor (param $this i32) (param $primaryOrLeft i32) (param $operator i32) (param $right i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 17
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:right
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:right
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $Frontend/assembly/Parser/Parser/Parser#multExpression (param $this i32) (result i32)
  (local $left i32)
  (local $operator i32)
  (local $right i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#unaryExpression
  local.tee $left
  i32.store offset=4
  i32.const 0
  local.set $operator
  i32.const 0
  local.set $right
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 13200
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#match
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   call $Frontend/assembly/Parser/Parser/Parser#previous
   local.tee $operator
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   call $Frontend/assembly/Parser/Parser/Parser#multExpression
   local.tee $right
   i32.store offset=16
  end
  i32.const 0
  local.get $left
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $operator
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  local.get $right
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=20
  local.get $6
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#constructor (param $this i32) (param $primaryOrLeft i32) (param $operator i32) (param $right i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 16
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#set:right
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#set:right
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $Frontend/assembly/Parser/Parser/Parser#binaryExpression (param $this i32) (result i32)
  (local $leftOrPrimary i32)
  (local $operator i32)
  (local $right i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#multExpression
  local.tee $leftOrPrimary
  i32.store offset=4
  i32.const 0
  local.set $operator
  i32.const 0
  local.set $right
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 13232
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#match
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   call $Frontend/assembly/Parser/Parser/Parser#previous
   local.tee $operator
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   call $Frontend/assembly/Parser/Parser/Parser#binaryExpression
   local.tee $right
   i32.store offset=16
  end
  i32.const 0
  local.get $leftOrPrimary
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $operator
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  local.get $right
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=20
  local.get $6
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#constructor (param $this i32) (param $primaryOrLeft i32) (param $operator i32) (param $right i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 15
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#set:right
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#set:right
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $Frontend/assembly/Parser/Parser/Parser#relationExpression (param $this i32) (result i32)
  (local $leftOrPrimary i32)
  (local $operator i32)
  (local $right i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#binaryExpression
  local.tee $leftOrPrimary
  i32.store offset=4
  i32.const 0
  local.set $operator
  i32.const 0
  local.set $right
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  i32.const 4
  i32.const 2
  i32.const 9
  i32.const 13264
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#match
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   call $Frontend/assembly/Parser/Parser/Parser#previous
   local.tee $operator
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   call $Frontend/assembly/Parser/Parser/Parser#relationExpression
   local.tee $right
   i32.store offset=16
   i32.const 0
   local.get $leftOrPrimary
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   local.get $operator
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=8
   local.get $6
   local.get $right
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=20
   local.get $6
   call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  i32.const 0
  local.get $leftOrPrimary
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $operator
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  local.get $right
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=20
  local.get $6
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#constructor (param $this i32) (param $primaryOrLeft i32) (param $operator i32) (param $right i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 14
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#set:right
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#set:right
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $Frontend/assembly/Parser/Parser/Parser#equalityExpression (param $this i32) (result i32)
  (local $leftOrPrimary i32)
  (local $operator i32)
  (local $right i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#relationExpression
  local.tee $leftOrPrimary
  i32.store offset=4
  i32.const 0
  local.set $operator
  i32.const 0
  local.set $right
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 13312
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#match
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   call $Frontend/assembly/Parser/Parser/Parser#previous
   local.tee $operator
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   call $Frontend/assembly/Parser/Parser/Parser#equalityExpression
   local.tee $right
   i32.store offset=16
   i32.const 0
   local.get $leftOrPrimary
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   local.get $operator
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=8
   local.get $6
   local.get $right
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=20
   local.get $6
   call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  i32.const 0
  local.get $leftOrPrimary
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $operator
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  local.get $right
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=20
  local.get $6
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $Frontend/assembly/Parser/Expressions/Expression/Expression#constructor (param $this i32) (param $primaryOrLeft i32) (param $operator i32) (param $right i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 13
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/Expression/Expression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/Expression/Expression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Parser/Expressions/Expression/Expression#set:right
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/Parser/Expressions/AbstractExpression/AbstractExpression#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/Expression/Expression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/Expression/Expression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/Expression/Expression#set:right
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $Frontend/assembly/Parser/Parser/Parser#expression (param $this i32) (result i32)
  (local $leftOrPrimary i32)
  (local $operator i32)
  (local $right i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#equalityExpression
  local.tee $leftOrPrimary
  i32.store offset=4
  i32.const 0
  local.set $operator
  i32.const 0
  local.set $right
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 13344
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $Frontend/assembly/Parser/Parser/Parser#match
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   call $Frontend/assembly/Parser/Parser/Parser#previous
   local.tee $operator
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   call $Frontend/assembly/Parser/Parser/Parser#expression
   local.tee $right
   i32.store offset=16
   i32.const 0
   local.get $leftOrPrimary
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   local.get $operator
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=8
   local.get $6
   local.get $right
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=20
   local.get $6
   call $Frontend/assembly/Parser/Expressions/Expression/Expression#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  i32.const 0
  local.get $leftOrPrimary
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $operator
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  local.get $right
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=20
  local.get $6
  call $Frontend/assembly/Parser/Expressions/Expression/Expression#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $Frontend/assembly/Parser/Parser/Parser#parse (param $this i32) (result i32)
  (local $expr i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $Frontend/assembly/Parser/Parser/Parser#expression
  local.tee $expr
  i32.store offset=4
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $Frontend/assembly/Parser/Parser/Parser#isAtEnd
  i32.eqz
  if
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   local.get $3
   call $Frontend/assembly/Parser/Parser/Parser#get:errors
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   i32.const 12832
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=28
   local.get $3
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=40
   local.get $3
   call $Frontend/assembly/Parser/Parser/Parser#peek
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=36
   local.get $3
   call $Frontend/assembly/Lexer/Token/Token#get:literal
   local.tee $2
   i32.store offset=44
   local.get $2
   if (result i32)
    local.get $2
   else
    i32.const 12896
    i32.const 13024
    i32.const 28
    i32.const 53
    call $~lib/builtins/abort
    unreachable
   end
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=32
   local.get $3
   call $~lib/string/String.__concat
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=20
   local.get $3
   i32.const 13120
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=24
   local.get $3
   call $~lib/string/String.__concat
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=24
   local.get $3
   call $Frontend/assembly/Parser/Parser/Parser#peek
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=20
   local.get $3
   call $Frontend/assembly/Lexer/Token/Token#get:line
   i32.const 10
   call $~lib/number/I32#toString
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   local.get $3
   call $~lib/string/String.__concat
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $3
   call $~lib/array/Array<~lib/string/String>#push
   drop
  end
  local.get $expr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#constructor (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 23
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.const 2
  i32.const 4
  i32.const 13376
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:tree
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/console/console.log (param $message i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $message
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/bindings/dom/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<~lib/string/String>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<~lib/string/String>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<~lib/string/String>#get:length_
  i32.ge_u
  if
   i32.const 6832
   i32.const 8144
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $value
  i32.store offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 12640
   i32.const 8144
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 25
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#constructor (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 28
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.const 2
  i32.const 4
  i32.const 13488
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:tree
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $Frontend/assembly/Lexer/Token/Token#toString (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 52
  memory.fill
  i32.const 10000
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  global.get $Frontend/assembly/Lexer/TokenType/TokenTypes
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=40
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=44
  local.get $2
  call $Frontend/assembly/Lexer/Token/Token#get:type
  call $~lib/array/Array<~lib/string/String>#__get
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=36
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  local.get $2
  i32.const 10000
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=28
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  local.get $2
  call $Frontend/assembly/Lexer/Token/Token#get:lexeme
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  i32.const 10000
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $Frontend/assembly/Lexer/Token/Token#get:literal
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  i32.const 0
  call $~lib/string/String.__ne
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $2
   call $Frontend/assembly/Lexer/Token/Token#get:literal
   local.tee $1
   i32.store offset=48
   local.get $1
   if (result i32)
    local.get $1
   else
    i32.const 12896
    i32.const 13632
    i32.const 17
    i32.const 96
    call $~lib/builtins/abort
    unreachable
   end
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   call $~lib/string/String#toString
  else
   i32.const 7728
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/util/string/joinReferenceArray<Frontend/assembly/Lexer/Token/Token> (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $value i32)
  (local $result i32)
  (local $sepLen i32)
  (local $i i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 7728
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $dataStart
   i32.load
   local.tee $value
   i32.store
   local.get $value
   i32.const 0
   i32.ne
   if (result i32)
    local.get $value
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    call $Frontend/assembly/Lexer/Token/Token#toString
   else
    i32.const 7728
   end
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 7728
  local.tee $result
  i32.store offset=8
  local.get $separator
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=4
  local.get $8
  call $~lib/string/String#get:length
  local.set $sepLen
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $lastIndex
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $value
    i32.store
    local.get $value
    i32.const 0
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     local.get $result
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     local.get $value
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=16
     local.get $8
     call $Frontend/assembly/Lexer/Token/Token#toString
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=12
     local.get $8
     call $~lib/string/String.__concat
     local.tee $result
     i32.store offset=8
    end
    local.get $sepLen
    if
     global.get $~lib/memory/__stack_pointer
     local.get $result
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     local.get $separator
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=12
     local.get $8
     call $~lib/string/String.__concat
     local.tee $result
     i32.store offset=8
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $dataStart
  local.get $lastIndex
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $value
  i32.store
  local.get $value
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $result
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=16
   local.get $8
   call $Frontend/assembly/Lexer/Token/Token#toString
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   local.get $8
   call $~lib/string/String.__concat
   local.tee $result
   i32.store offset=8
  end
  local.get $result
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#join (param $this i32) (param $separator i32) (result i32)
  (local $ptr i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:dataStart
  local.set $ptr
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:length_
  local.set $len
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $ptr
  local.get $len
  local.get $separator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/util/string/joinReferenceArray<Frontend/assembly/Lexer/Token/Token>
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#toString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 10160
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $Frontend/assembly/Interpreter/Interpreter/Interpreter#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 30
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $Frontend/assembly/Index/value#constructor (param $this i32) (param $parse i32) (param $ast i32) (param $value f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 32
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Index/value#set:parse
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/Index/value#set:ast
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  f64.const 0
  call $Frontend/assembly/Index/value#set:value
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $parse
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Index/value#set:parse
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $ast
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Index/value#set:ast
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $value
  call $Frontend/assembly/Index/value#set:value
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $Frontend/assembly/Index/value#toJsonString (param $this i32) (result i32)
  (local $string i32)
  (local $i i32)
  (local $i|3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 13728
  local.tee $string
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $string
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 13760
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $~lib/string/String.__concat
  local.tee $string
  i32.store
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $4
   call $Frontend/assembly/Index/value#get:parse
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $string
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    i32.const 10224
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=20
    local.get $4
    local.get $this
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=32
    local.get $4
    call $Frontend/assembly/Index/value#get:parse
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=28
    local.get $4
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=24
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=12
    local.get $4
    i32.const 10224
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=16
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $4
    call $~lib/string/String.__concat
    local.tee $string
    i32.store
    local.get $i
    local.get $this
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $4
    call $Frontend/assembly/Index/value#get:parse
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.const 1
    i32.sub
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $string
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $4
     i32.const 13808
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     local.get $4
     call $~lib/string/String.__concat
     local.tee $string
     i32.store
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $string
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 13840
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $~lib/string/String.__concat
  local.tee $string
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $string
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 13872
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $~lib/string/String.__concat
  local.tee $string
  i32.store
  i32.const 0
  local.set $i|3
  loop $for-loop|1
   local.get $i|3
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $4
   call $Frontend/assembly/Index/value#get:ast
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $string
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    i32.const 10224
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=20
    local.get $4
    local.get $this
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=32
    local.get $4
    call $Frontend/assembly/Index/value#get:ast
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=28
    local.get $4
    local.get $i|3
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=24
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=12
    local.get $4
    i32.const 10224
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=16
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $4
    call $~lib/string/String.__concat
    local.tee $string
    i32.store
    local.get $i|3
    local.get $this
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $4
    call $Frontend/assembly/Index/value#get:ast
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.const 1
    i32.sub
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $string
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $4
     i32.const 13808
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     local.get $4
     call $~lib/string/String.__concat
     local.tee $string
     i32.store
    end
    local.get $i|3
    i32.const 1
    i32.add
    local.set $i|3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $string
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 13840
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $~lib/string/String.__concat
  local.tee $string
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $string
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 13920
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=20
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=28
  local.get $4
  call $Frontend/assembly/Index/value#get:value
  i32.const 0
  call $~lib/number/F64#toString
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=24
  local.get $4
  call $~lib/string/String.__concat
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  i32.const 10256
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  local.get $4
  call $~lib/string/String.__concat
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $~lib/string/String.__concat
  local.tee $string
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $string
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 10128
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $~lib/string/String.__concat
  local.tee $string
  i32.store
  local.get $string
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $Frontend/assembly/Index/calculateViaLanguage (param $string i32) (result i32)
  (local $scanner i32)
  (local $tokens i32)
  (local $parser i32)
  (local $syntaxTree i32)
  (local $parseTreePrinter i32)
  (local $i i32)
  (local $toAstVisitor i32)
  (local $ast i32)
  (local $astPrinter i32)
  (local $i|10 i32)
  (local $i|11 i32)
  (local $i|12 i32)
  (local $interpreter i32)
  (local $finalValue f64)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 52
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $string
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  call $Frontend/assembly/Lexer/Scanner/Scanner#constructor
  local.tee $scanner
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $scanner
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  call $Frontend/assembly/Lexer/Scanner/Scanner#scanTokens
  local.tee $tokens
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $tokens
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  call $Frontend/assembly/Parser/Parser/Parser#constructor
  local.tee $parser
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $parser
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  call $Frontend/assembly/Parser/Parser/Parser#parse
  local.tee $syntaxTree
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#constructor
  local.tee $parseTreePrinter
  i32.store offset=20
  local.get $syntaxTree
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  local.get $parseTreePrinter
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=24
  local.get $15
  call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<void>@override
  i32.const 10000
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  call $~lib/console/console.log
  i32.const 13408
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  call $~lib/console/console.log
  local.get $parseTreePrinter
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=24
  local.get $15
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:tree
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  call $~lib/array/Array<~lib/string/String>#get:length
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.gt_s
   if
    local.get $parseTreePrinter
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store offset=28
    local.get $15
    call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:tree
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store offset=24
    local.get $15
    local.get $i
    i32.const 1
    i32.sub
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store
    local.get $15
    call $~lib/console/console.log
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#constructor
  local.tee $toAstVisitor
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $syntaxTree
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  local.get $toAstVisitor
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=24
  local.get $15
  call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>@override
  local.tee $ast
  i32.store offset=36
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#constructor
  local.tee $astPrinter
  i32.store offset=40
  i32.const 10000
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  call $~lib/console/console.log
  i32.const 13520
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  call $~lib/console/console.log
  local.get $ast
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  local.get $astPrinter
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=24
  local.get $15
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<void>@override
  local.get $astPrinter
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=24
  local.get $15
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:tree
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  call $~lib/array/Array<~lib/string/String>#get:length
  local.set $i|10
  loop $for-loop|1
   local.get $i|10
   i32.const 0
   i32.gt_s
   if
    local.get $astPrinter
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store offset=28
    local.get $15
    call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:tree
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store offset=24
    local.get $15
    local.get $i|10
    i32.const 1
    i32.sub
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store
    local.get $15
    call $~lib/console/console.log
    local.get $i|10
    i32.const 1
    i32.sub
    local.set $i|10
    br $for-loop|1
   end
  end
  local.get $tokens
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=24
  local.get $15
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:length
  i32.const 10
  call $~lib/number/I32#toString
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  call $~lib/console/console.log
  i32.const 13584
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=24
  local.get $15
  local.get $string
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=28
  local.get $15
  call $~lib/string/String.__concat
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  call $~lib/console/console.log
  local.get $tokens
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=24
  local.get $15
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#toString
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  call $~lib/console/console.log
  i32.const 0
  local.set $i|11
  loop $for-loop|2
   local.get $i|11
   local.get $scanner
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store offset=24
   local.get $15
   call $Frontend/assembly/Lexer/Scanner/Scanner#get:errors
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store
   local.get $15
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    local.get $scanner
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store offset=44
    local.get $15
    call $Frontend/assembly/Lexer/Scanner/Scanner#get:errors
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store offset=28
    local.get $15
    local.get $i|11
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store offset=24
    local.get $15
    call $~lib/string/String#toString
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store
    local.get $15
    call $~lib/console/console.log
    local.get $i|11
    i32.const 1
    i32.add
    local.set $i|11
    br $for-loop|2
   end
  end
  i32.const 0
  local.set $i|12
  loop $for-loop|3
   local.get $i|12
   local.get $parser
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store offset=24
   local.get $15
   call $Frontend/assembly/Parser/Parser/Parser#get:errors
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store
   local.get $15
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    local.get $parser
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store offset=44
    local.get $15
    call $Frontend/assembly/Parser/Parser/Parser#get:errors
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store offset=28
    local.get $15
    local.get $i|12
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store offset=24
    local.get $15
    call $~lib/string/String#toString
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store
    local.get $15
    call $~lib/console/console.log
    local.get $i|12
    i32.const 1
    i32.add
    local.set $i|12
    br $for-loop|3
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $Frontend/assembly/Interpreter/Interpreter/Interpreter#constructor
  local.tee $interpreter
  i32.store offset=48
  local.get $ast
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  local.get $interpreter
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=24
  local.get $15
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<f64>@override
  local.set $finalValue
  i32.const 0
  local.get $parseTreePrinter
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=44
  local.get $15
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:tree
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=24
  local.get $15
  local.get $astPrinter
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=44
  local.get $15
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:tree
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=28
  local.get $15
  local.get $finalValue
  call $Frontend/assembly/Index/value#constructor
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  call $Frontend/assembly/Index/value#toJsonString
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
  return
 )
 (func $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitBinaryExpression@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitEqualityExpression@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitRelationalExpression@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitMultiplicativeExpression@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitUnaryExpression@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Term/Term#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitTerm@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Num/Num#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitNumber@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitIdentifier@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/Parser/Expressions/Expression/Expression#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<void>#visitExpression@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode> (param $this i32) (param $visitor i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitBinaryExpression@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode> (param $this i32) (param $visitor i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitEqualityExpression@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode> (param $this i32) (param $visitor i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitRelationalExpression@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode> (param $this i32) (param $visitor i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitMultiplicativeExpression@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode> (param $this i32) (param $visitor i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitUnaryExpression@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Term/Term#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode> (param $this i32) (param $visitor i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitTerm@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Num/Num#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode> (param $this i32) (param $visitor i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitNumber@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode> (param $this i32) (param $visitor i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitIdentifier@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Parser/Expressions/Expression/Expression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode> (param $this i32) (param $visitor i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/ParseVisitor/ParseVisitor<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>#visitExpression@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#getSpace (param $this i32) (param $num i32) (result i32)
  (local $space i32)
  (local $i i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 7728
  local.tee $space
  i32.store
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $num
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $space
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    i32.const 15344
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $4
    call $~lib/string/String.__concat
    local.tee $space
    i32.store
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $space
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitBinaryExpression (param $this i32) (param $expression i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 52
  memory.fill
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 1
  i32.add
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#get:primaryOrLeft
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#accept<void>
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 1
  i32.sub
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#get:right
  i32.const 0
  i32.ne
  if
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
   i32.const 1
   i32.add
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
   global.get $~lib/memory/__stack_pointer
   local.get $expression
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $5
   call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#get:right
   local.tee $2
   i32.store offset=12
   local.get $2
   if (result i32)
    local.get $2
   else
    i32.const 12896
    i32.const 15232
    i32.const 22
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<void>@override
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
   i32.const 1
   i32.sub
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:tree
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=36
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=40
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#getSpace
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=28
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=36
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=32
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=20
  local.get $5
  i32.const 15376
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=24
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=20
  local.get $5
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#get:operator
  i32.const 0
  i32.ne
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $expression
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=24
   local.get $5
   call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#get:operator
   local.tee $3
   i32.store offset=44
   local.get $3
   if (result i32)
    local.get $3
   else
    i32.const 12896
    i32.const 15232
    i32.const 25
    i32.const 134
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=20
   local.get $5
   call $Frontend/assembly/Lexer/Token/Token#get:literal
   local.tee $4
   i32.store offset=48
   local.get $4
   if (result i32)
    local.get $4
   else
    i32.const 12896
    i32.const 15232
    i32.const 25
    i32.const 134
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 7728
  end
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=16
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitEqualityExpression (param $this i32) (param $expression i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 52
  memory.fill
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 1
  i32.add
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#get:primaryOrLeft
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#accept<void>
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 1
  i32.sub
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#get:right
  i32.const 0
  i32.ne
  if
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
   i32.const 1
   i32.add
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
   global.get $~lib/memory/__stack_pointer
   local.get $expression
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $5
   call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#get:right
   local.tee $2
   i32.store offset=12
   local.get $2
   if (result i32)
    local.get $2
   else
    i32.const 12896
    i32.const 15232
    i32.const 34
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<void>@override
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
   i32.const 1
   i32.sub
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:tree
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=36
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=40
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#getSpace
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=28
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=36
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=32
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=20
  local.get $5
  i32.const 15440
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=24
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=20
  local.get $5
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#get:operator
  i32.const 0
  i32.ne
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $expression
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=24
   local.get $5
   call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#get:operator
   local.tee $3
   i32.store offset=44
   local.get $3
   if (result i32)
    local.get $3
   else
    i32.const 12896
    i32.const 15232
    i32.const 37
    i32.const 136
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=20
   local.get $5
   call $Frontend/assembly/Lexer/Token/Token#get:literal
   local.tee $4
   i32.store offset=48
   local.get $4
   if (result i32)
    local.get $4
   else
    i32.const 12896
    i32.const 15232
    i32.const 37
    i32.const 136
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 7728
  end
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=16
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitRelationalExpression (param $this i32) (param $expression i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 52
  memory.fill
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 1
  i32.add
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#get:primaryOrLeft
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#accept<void>
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 1
  i32.sub
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#get:right
  i32.const 0
  i32.ne
  if
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
   i32.const 1
   i32.add
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
   global.get $~lib/memory/__stack_pointer
   local.get $expression
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $5
   call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#get:right
   local.tee $2
   i32.store offset=12
   local.get $2
   if (result i32)
    local.get $2
   else
    i32.const 12896
    i32.const 15232
    i32.const 74
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<void>@override
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
   i32.const 1
   i32.sub
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:tree
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=36
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=40
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#getSpace
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=28
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=36
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=32
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=20
  local.get $5
  i32.const 15504
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=24
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=20
  local.get $5
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#get:operator
  i32.const 0
  i32.ne
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $expression
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=24
   local.get $5
   call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#get:operator
   local.tee $3
   i32.store offset=44
   local.get $3
   if (result i32)
    local.get $3
   else
    i32.const 12896
    i32.const 15232
    i32.const 77
    i32.const 138
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=20
   local.get $5
   call $Frontend/assembly/Lexer/Token/Token#get:literal
   local.tee $4
   i32.store offset=48
   local.get $4
   if (result i32)
    local.get $4
   else
    i32.const 12896
    i32.const 15232
    i32.const 77
    i32.const 138
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 7728
  end
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=16
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitMultiplicativeExpression (param $this i32) (param $expression i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 52
  memory.fill
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 1
  i32.add
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:primaryOrLeft
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#accept<void>
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 1
  i32.sub
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:right
  i32.const 0
  i32.ne
  if
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
   i32.const 1
   i32.add
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
   global.get $~lib/memory/__stack_pointer
   local.get $expression
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $5
   call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:right
   local.tee $2
   i32.store offset=12
   local.get $2
   if (result i32)
    local.get $2
   else
    i32.const 12896
    i32.const 15232
    i32.const 58
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<void>@override
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
   i32.const 1
   i32.sub
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:tree
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=36
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=40
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#getSpace
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=28
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=36
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=32
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=20
  local.get $5
  i32.const 15584
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=24
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=20
  local.get $5
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:operator
  i32.const 0
  i32.ne
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $expression
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=24
   local.get $5
   call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:operator
   local.tee $3
   i32.store offset=44
   local.get $3
   if (result i32)
    local.get $3
   else
    i32.const 12896
    i32.const 15232
    i32.const 61
    i32.const 142
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=20
   local.get $5
   call $Frontend/assembly/Lexer/Token/Token#get:literal
   local.tee $4
   i32.store offset=48
   local.get $4
   if (result i32)
    local.get $4
   else
    i32.const 12896
    i32.const 15232
    i32.const 61
    i32.const 142
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 7728
  end
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=16
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitUnaryExpression (param $this i32) (param $expression i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 1
  i32.add
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#get:primaryOrRight
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<void>@override
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 1
  i32.sub
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:tree
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=32
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=36
  local.get $4
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#getSpace
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=24
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=32
  local.get $4
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=28
  local.get $4
  call $~lib/string/String.__concat
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  local.get $4
  i32.const 15664
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=20
  local.get $4
  call $~lib/string/String.__concat
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  local.get $4
  call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#get:operator
  i32.const 0
  i32.ne
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $expression
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=20
   local.get $4
   call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#get:operator
   local.tee $2
   i32.store offset=40
   local.get $2
   if (result i32)
    local.get $2
   else
    i32.const 12896
    i32.const 15232
    i32.const 88
    i32.const 133
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $Frontend/assembly/Lexer/Token/Token#get:literal
   local.tee $3
   i32.store offset=44
   local.get $3
   if (result i32)
    local.get $3
   else
    i32.const 12896
    i32.const 15232
    i32.const 88
    i32.const 133
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 7728
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $~lib/string/String.__concat
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitTerm (param $this i32) (param $term i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:tree
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=36
  local.get $2
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#getSpace
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=28
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 15728
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $term
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  call $Frontend/assembly/Parser/Expressions/Terms/Term/Term#get:value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitNumber (param $this i32) (param $term i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:tree
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=32
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=36
  local.get $3
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#getSpace
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=24
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=32
  local.get $3
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=28
  local.get $3
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  local.get $3
  i32.const 15776
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=20
  local.get $3
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  global.get $~lib/memory/__stack_pointer
  local.get $term
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=20
  local.get $3
  call $Frontend/assembly/Parser/Expressions/Terms/Num/Num#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  local.get $3
  call $Frontend/assembly/Lexer/Token/Token#get:literal
  local.tee $2
  i32.store offset=40
  local.get $2
  if (result i32)
   local.get $2
  else
   i32.const 12896
   i32.const 15232
   i32.const 65
   i32.const 92
   call $~lib/builtins/abort
   unreachable
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $3
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitIdentifier (param $this i32) (param $term i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:tree
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=32
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=36
  local.get $3
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#getSpace
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=24
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=32
  local.get $3
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=28
  local.get $3
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  local.get $3
  i32.const 15824
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=20
  local.get $3
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  global.get $~lib/memory/__stack_pointer
  local.get $term
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=20
  local.get $3
  call $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier#get:name
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  local.get $3
  call $Frontend/assembly/Lexer/Token/Token#get:literal
  local.tee $2
  i32.store offset=40
  local.get $2
  if (result i32)
   local.get $2
  else
   i32.const 12896
   i32.const 15232
   i32.const 92
   i32.const 96
   call $~lib/builtins/abort
   unreachable
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $3
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#visitExpression (param $this i32) (param $expression i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 52
  memory.fill
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 1
  i32.add
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $Frontend/assembly/Parser/Expressions/Expression/Expression#get:primaryOrLeft
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#accept<void>
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 1
  i32.sub
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $Frontend/assembly/Parser/Expressions/Expression/Expression#get:right
  i32.const 0
  i32.ne
  if
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
   i32.const 1
   i32.add
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
   global.get $~lib/memory/__stack_pointer
   local.get $expression
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $5
   call $Frontend/assembly/Parser/Expressions/Expression/Expression#get:right
   local.tee $2
   i32.store offset=12
   local.get $2
   if (result i32)
    local.get $2
   else
    i32.const 12896
    i32.const 15232
    i32.const 46
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<void>@override
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
   i32.const 1
   i32.sub
   call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#set:number
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:tree
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=36
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=40
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#getSpace
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=28
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=36
  local.get $5
  call $Frontend/assembly/Parser/ParseTreePrinter/ParseTreePrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=32
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=20
  local.get $5
  i32.const 15872
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=24
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=20
  local.get $5
  call $Frontend/assembly/Parser/Expressions/Expression/Expression#get:operator
  i32.const 0
  i32.ne
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $expression
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=24
   local.get $5
   call $Frontend/assembly/Parser/Expressions/Expression/Expression#get:operator
   local.tee $3
   i32.store offset=44
   local.get $3
   if (result i32)
    local.get $3
   else
    i32.const 12896
    i32.const 15232
    i32.const 49
    i32.const 128
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=20
   local.get $5
   call $Frontend/assembly/Lexer/Token/Token#get:literal
   local.tee $4
   i32.store offset=48
   local.get $4
   if (result i32)
    local.get $4
   else
    i32.const 12896
    i32.const 15232
    i32.const 49
    i32.const 128
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 7728
  end
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=16
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 26
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 33
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#constructor (param $this i32) (param $primaryOrLeft i32) (param $operator i32) (param $right i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 34
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#set:right
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#set:right
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitBinaryExpression (param $this i32) (param $expression i32) (result i32)
  (local $2 i32)
  (local $left i32)
  (local $4 i32)
  (local $5 i32)
  (local $right i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#get:right
  i32.const 0
  i32.eq
  if
   local.get $expression
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#get:primaryOrLeft
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#get:primaryOrLeft
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
  local.tee $2
  i32.store offset=12
  local.get $2
  call $~instanceof|Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression
  if (result i32)
   local.get $2
  else
   i32.const 15920
   i32.const 15984
   i32.const 30
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $left
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#get:right
  local.tee $4
  i32.store offset=20
  local.get $4
  if (result i32)
   local.get $4
  else
   i32.const 12896
   i32.const 15984
   i32.const 31
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>@override
  local.tee $5
  i32.store offset=24
  local.get $5
  call $~instanceof|Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression
  if (result i32)
   local.get $5
  else
   i32.const 15920
   i32.const 15984
   i32.const 31
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $right
  i32.store offset=28
  i32.const 0
  local.get $left
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=36
  local.get $9
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#get:operator
  local.tee $7
  i32.store offset=40
  local.get $7
  if (result i32)
   local.get $7
  else
   i32.const 12896
   i32.const 15984
   i32.const 32
   i32.const 46
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=32
  local.get $9
  call $Frontend/assembly/Lexer/Token/Token#get:literal
  local.tee $8
  i32.store offset=44
  local.get $8
  if (result i32)
   local.get $8
  else
   i32.const 12896
   i32.const 15984
   i32.const 32
   i32.const 46
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  local.get $right
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#constructor (param $this i32) (param $primaryOrLeft i32) (param $operator i32) (param $right i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 35
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#set:right
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#set:right
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitEqualityExpression (param $this i32) (param $expression i32) (result i32)
  (local $2 i32)
  (local $left i32)
  (local $4 i32)
  (local $5 i32)
  (local $right i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#get:right
  i32.const 0
  i32.eq
  if
   local.get $expression
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#get:primaryOrLeft
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#get:primaryOrLeft
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
  local.tee $2
  i32.store offset=12
  local.get $2
  call $~instanceof|Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression
  if (result i32)
   local.get $2
  else
   i32.const 15920
   i32.const 15984
   i32.const 39
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $left
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#get:right
  local.tee $4
  i32.store offset=20
  local.get $4
  if (result i32)
   local.get $4
  else
   i32.const 12896
   i32.const 15984
   i32.const 40
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>@override
  local.tee $5
  i32.store offset=24
  local.get $5
  call $~instanceof|Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression
  if (result i32)
   local.get $5
  else
   i32.const 15920
   i32.const 15984
   i32.const 40
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $right
  i32.store offset=28
  i32.const 0
  local.get $left
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=36
  local.get $9
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#get:operator
  local.tee $7
  i32.store offset=40
  local.get $7
  if (result i32)
   local.get $7
  else
   i32.const 12896
   i32.const 15984
   i32.const 41
   i32.const 48
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=32
  local.get $9
  call $Frontend/assembly/Lexer/Token/Token#get:literal
  local.tee $8
  i32.store offset=44
  local.get $8
  if (result i32)
   local.get $8
  else
   i32.const 12896
   i32.const 15984
   i32.const 41
   i32.const 48
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  local.get $right
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#constructor (param $this i32) (param $primaryOrLeft i32) (param $operator i32) (param $right i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 36
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#set:right
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#set:right
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitRelationalExpression (param $this i32) (param $expression i32) (result i32)
  (local $2 i32)
  (local $left i32)
  (local $4 i32)
  (local $5 i32)
  (local $right i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#get:right
  i32.const 0
  i32.eq
  if
   local.get $expression
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#get:primaryOrLeft
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#get:primaryOrLeft
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $Frontend/assembly/Parser/Expressions/BinaryExpression/BinaryExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
  local.tee $2
  i32.store offset=12
  local.get $2
  call $~instanceof|Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression
  if (result i32)
   local.get $2
  else
   i32.const 15920
   i32.const 15984
   i32.const 75
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $left
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#get:right
  local.tee $4
  i32.store offset=20
  local.get $4
  if (result i32)
   local.get $4
  else
   i32.const 12896
   i32.const 15984
   i32.const 76
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>@override
  local.tee $5
  i32.store offset=24
  local.get $5
  call $~instanceof|Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression
  if (result i32)
   local.get $5
  else
   i32.const 15920
   i32.const 15984
   i32.const 76
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $right
  i32.store offset=28
  i32.const 0
  local.get $left
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=36
  local.get $9
  call $Frontend/assembly/Parser/Expressions/RelationalExpression/RelationalExpression#get:operator
  local.tee $7
  i32.store offset=40
  local.get $7
  if (result i32)
   local.get $7
  else
   i32.const 12896
   i32.const 15984
   i32.const 77
   i32.const 50
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=32
  local.get $9
  call $Frontend/assembly/Lexer/Token/Token#get:literal
  local.tee $8
  i32.store offset=44
  local.get $8
  if (result i32)
   local.get $8
  else
   i32.const 12896
   i32.const 15984
   i32.const 77
   i32.const 50
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  local.get $right
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#constructor (param $this i32) (param $primaryOrLeft i32) (param $operator i32) (param $right i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 37
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:right
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#set:right
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitMultiplicativeExpression (param $this i32) (param $expression i32) (result i32)
  (local $2 i32)
  (local $left i32)
  (local $4 i32)
  (local $5 i32)
  (local $right i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:right
  i32.const 0
  i32.eq
  if
   local.get $expression
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:primaryOrLeft
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:primaryOrLeft
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
  local.tee $2
  i32.store offset=12
  local.get $2
  call $~instanceof|Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression
  if (result i32)
   local.get $2
  else
   i32.const 15920
   i32.const 15984
   i32.const 62
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $left
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:right
  local.tee $4
  i32.store offset=20
  local.get $4
  if (result i32)
   local.get $4
  else
   i32.const 12896
   i32.const 15984
   i32.const 63
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>@override
  local.tee $5
  i32.store offset=24
  local.get $5
  call $~instanceof|Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression
  if (result i32)
   local.get $5
  else
   i32.const 15920
   i32.const 15984
   i32.const 63
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $right
  i32.store offset=28
  i32.const 0
  local.get $left
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=36
  local.get $9
  call $Frontend/assembly/Parser/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:operator
  local.tee $7
  i32.store offset=40
  local.get $7
  if (result i32)
   local.get $7
  else
   i32.const 12896
   i32.const 15984
   i32.const 64
   i32.const 54
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=32
  local.get $9
  call $Frontend/assembly/Lexer/Token/Token#get:literal
  local.tee $8
  i32.store offset=44
  local.get $8
  if (result i32)
   local.get $8
  else
   i32.const 12896
   i32.const 15984
   i32.const 64
   i32.const 54
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  local.get $right
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#constructor (param $this i32) (param $operator i32) (param $primaryOrRight i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 38
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#set:operator
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#set:primaryOrRight
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#set:operator
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $primaryOrRight
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#set:primaryOrRight
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitUnaryExpression (param $this i32) (param $expression i32) (result i32)
  (local $2 i32)
  (local $primaryOrRight i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill
  local.get $expression
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#get:operator
  i32.const 0
  i32.eq
  if
   local.get $expression
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=8
   local.get $6
   call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#get:primaryOrRight
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>@override
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#get:primaryOrRight
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>@override
  local.tee $2
  i32.store offset=12
  local.get $2
  call $~instanceof|Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression
  if (result i32)
   local.get $2
  else
   i32.const 15920
   i32.const 15984
   i32.const 88
   i32.const 50
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $primaryOrRight
  i32.store offset=16
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=20
  local.get $6
  call $Frontend/assembly/Parser/Expressions/UnaryExpression/UnaryExpression#get:operator
  local.tee $4
  i32.store offset=24
  local.get $4
  if (result i32)
   local.get $4
  else
   i32.const 12896
   i32.const 15984
   i32.const 89
   i32.const 39
   call $~lib/builtins/abort
   unreachable
  end
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $Frontend/assembly/Lexer/Token/Token#get:literal
  local.tee $5
  i32.store offset=28
  local.get $5
  if (result i32)
   local.get $5
  else
   i32.const 12896
   i32.const 15984
   i32.const 89
   i32.const 39
   call $~lib/builtins/abort
   unreachable
  end
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $primaryOrRight
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $Frontend/assembly/AST/Expressions/Terms/AbstractTerm/AbstractTerm#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 40
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Term/Term#constructor (param $this i32) (param $value i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 39
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  call $Frontend/assembly/AST/Expressions/Terms/Term/Term#set:value
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/Expressions/Terms/AbstractTerm/AbstractTerm#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/Expressions/Terms/Term/Term#set:value
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitTerm (param $this i32) (param $term i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 0
  local.get $term
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/Parser/Expressions/Terms/Term/Term#get:value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $Frontend/assembly/AST/Expressions/Terms/Term/Term#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Num/Num#constructor (param $this i32) (param $value i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 41
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  call $Frontend/assembly/AST/Expressions/Terms/Num/Num#set:value
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/Expressions/Terms/AbstractTerm/AbstractTerm#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/Expressions/Terms/Num/Num#set:value
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitNumber (param $this i32) (param $term i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $term
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $Frontend/assembly/Parser/Expressions/Terms/Num/Num#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $Frontend/assembly/Lexer/Token/Token#get:literal
  local.tee $2
  i32.store offset=12
  local.get $2
  if (result i32)
   local.get $2
  else
   i32.const 12896
   i32.const 15984
   i32.const 68
   i32.const 27
   call $~lib/builtins/abort
   unreachable
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $Frontend/assembly/AST/Expressions/Terms/Num/Num#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier#constructor (param $this i32) (param $name i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 42
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  call $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier#set:name
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/Expressions/Terms/AbstractTerm/AbstractTerm#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $name
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier#set:name
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitIdentifier (param $this i32) (param $term i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $term
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $Frontend/assembly/Parser/Expressions/Terms/Identifier/Identifier#get:name
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $Frontend/assembly/Lexer/Token/Token#get:literal
  local.tee $2
  i32.store offset=12
  local.get $2
  if (result i32)
   local.get $2
  else
   i32.const 12896
   i32.const 15984
   i32.const 55
   i32.const 34
   call $~lib/builtins/abort
   unreachable
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/AST/Expressions/Expression/Expression#constructor (param $this i32) (param $primaryOrLeft i32) (param $operator i32) (param $right i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 43
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/Expression/Expression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/Expression/Expression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $Frontend/assembly/AST/Expressions/Expression/Expression#set:right
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/Expression/Expression#set:primaryOrLeft
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/Expression/Expression#set:operator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/Expression/Expression#set:right
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $Frontend/assembly/AST/ToAstVisitor/ToAstVisitor#visitExpression (param $this i32) (param $expression i32) (result i32)
  (local $2 i32)
  (local $left i32)
  (local $4 i32)
  (local $5 i32)
  (local $right i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  call $Frontend/assembly/Parser/Expressions/Expression/Expression#get:right
  i32.const 0
  i32.eq
  if
   local.get $expression
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $Frontend/assembly/Parser/Expressions/Expression/Expression#get:primaryOrLeft
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/Parser/Expressions/Expression/Expression#get:primaryOrLeft
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $Frontend/assembly/Parser/Expressions/EqualityExpression/EqualityExpression#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>
  local.tee $2
  i32.store offset=12
  local.get $2
  call $~instanceof|Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression
  if (result i32)
   local.get $2
  else
   i32.const 15920
   i32.const 15984
   i32.const 48
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $left
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/Parser/Expressions/Expression/Expression#get:right
  local.tee $4
  i32.store offset=20
  local.get $4
  if (result i32)
   local.get $4
  else
   i32.const 12896
   i32.const 15984
   i32.const 49
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $Frontend/assembly/Parser/ParseTreeNode/ParseTreeNode#accept<Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode>@override
  local.tee $5
  i32.store offset=24
  local.get $5
  call $~instanceof|Frontend/assembly/AST/Expressions/AbstractExpression/AbstractExpression
  if (result i32)
   local.get $5
  else
   i32.const 15920
   i32.const 15984
   i32.const 49
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $right
  i32.store offset=28
  i32.const 0
  local.get $left
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $expression
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=36
  local.get $9
  call $Frontend/assembly/Parser/Expressions/Expression/Expression#get:operator
  local.tee $7
  i32.store offset=40
  local.get $7
  if (result i32)
   local.get $7
  else
   i32.const 12896
   i32.const 15984
   i32.const 50
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=32
  local.get $9
  call $Frontend/assembly/Lexer/Token/Token#get:literal
  local.tee $8
  i32.store offset=44
  local.get $8
  if (result i32)
   local.get $8
  else
   i32.const 12896
   i32.const 15984
   i32.const 50
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  local.get $right
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $Frontend/assembly/AST/Expressions/Expression/Expression#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitEqualityExpression@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/AST/Expressions/Expression/Expression#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitExpression@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitIdentifier@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitMultiplicativeExpression@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Num/Num#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitNumber@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitBinaryExpression@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitUnaryExpression@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Term/Term#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitTerm@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#accept<void> (param $this i32) (param $visitor i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<void>#visitRelationalExpression@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#accept<f64> (param $this i32) (param $visitor i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitEqualityExpression@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/AST/Expressions/Expression/Expression#accept<f64> (param $this i32) (param $visitor i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitExpression@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier#accept<f64> (param $this i32) (param $visitor i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitIdentifier@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#accept<f64> (param $this i32) (param $visitor i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitMultiplicativeExpression@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Num/Num#accept<f64> (param $this i32) (param $visitor i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitNumber@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#accept<f64> (param $this i32) (param $visitor i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitBinaryExpression@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#accept<f64> (param $this i32) (param $visitor i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitUnaryExpression@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/AST/Expressions/Terms/Term/Term#accept<f64> (param $this i32) (param $visitor i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitTerm@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#accept<f64> (param $this i32) (param $visitor i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $visitor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTVisitor/ASTVisitor<f64>#visitRelationalExpression@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#getSpace (param $this i32) (param $num i32) (result i32)
  (local $space i32)
  (local $i i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 7728
  local.tee $space
  i32.store
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $num
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $space
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    i32.const 10000
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $4
    call $~lib/string/String.__concat
    local.tee $space
    i32.store
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $space
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitEqualityExpression (param $this i32) (param $expression i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 1
  i32.add
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#get:primaryOrLeft
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<void>@override
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 1
  i32.sub
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#get:right
  i32.const 0
  i32.ne
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
   i32.const 1
   i32.add
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
   local.get $expression
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#get:right
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<void>@override
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
   i32.const 1
   i32.sub
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:tree
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=36
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#getSpace
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=28
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 15440
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#get:operator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 0
  call $~lib/string/String.__ne
  if (result i32)
   local.get $expression
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $2
   call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#get:operator
  else
   i32.const 7728
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitExpression (param $this i32) (param $expression i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 1
  i32.add
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/Expressions/Expression/Expression#get:primaryOrLeft
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<void>@override
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 1
  i32.sub
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $Frontend/assembly/AST/Expressions/Expression/Expression#get:right
  i32.const 0
  i32.ne
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
   i32.const 1
   i32.add
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
   local.get $expression
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   call $Frontend/assembly/AST/Expressions/Expression/Expression#get:right
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<void>@override
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
   i32.const 1
   i32.sub
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:tree
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=36
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#getSpace
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=28
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 15872
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $Frontend/assembly/AST/Expressions/Expression/Expression#get:operator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 0
  call $~lib/string/String.__ne
  if (result i32)
   local.get $expression
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $2
   call $Frontend/assembly/AST/Expressions/Expression/Expression#get:operator
  else
   i32.const 7728
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitIdentifier (param $this i32) (param $term i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:tree
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=36
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#getSpace
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=28
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 15824
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $term
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  call $Frontend/assembly/AST/Expressions/Terms/Identifier/Identifier#get:name
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitMultiplicativeExpression (param $this i32) (param $expression i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 1
  i32.add
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:primaryOrLeft
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<void>@override
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 1
  i32.sub
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:right
  i32.const 0
  i32.ne
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
   i32.const 1
   i32.add
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
   local.get $expression
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:right
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<void>@override
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
   i32.const 1
   i32.sub
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:tree
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=36
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#getSpace
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=28
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 15584
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:operator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 0
  call $~lib/string/String.__ne
  if (result i32)
   local.get $expression
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $2
   call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:operator
  else
   i32.const 7728
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitNumber (param $this i32) (param $term i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:tree
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=36
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#getSpace
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=28
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 16080
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $term
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $Frontend/assembly/AST/Expressions/Terms/Num/Num#get:value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  call $~lib/string/String#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitBinaryExpression (param $this i32) (param $expression i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 1
  i32.add
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#get:primaryOrLeft
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<void>@override
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 1
  i32.sub
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#get:right
  i32.const 0
  i32.ne
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
   i32.const 1
   i32.add
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
   local.get $expression
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#get:right
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<void>@override
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
   i32.const 1
   i32.sub
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:tree
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=36
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#getSpace
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=28
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 15376
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#get:operator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 0
  call $~lib/string/String.__ne
  if (result i32)
   local.get $expression
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $2
   call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#get:operator
  else
   i32.const 7728
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitUnaryExpression (param $this i32) (param $expression i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 1
  i32.add
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#get:primaryOrRight
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<void>@override
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 1
  i32.sub
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:tree
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=36
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#getSpace
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=28
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 15664
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#get:operator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 0
  call $~lib/string/String.__ne
  if (result i32)
   local.get $expression
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $2
   call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#get:operator
  else
   i32.const 7728
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitTerm (param $this i32) (param $term i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:tree
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=36
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#getSpace
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=28
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 15728
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $term
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  call $Frontend/assembly/AST/Expressions/Terms/Term/Term#get:value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/AST/ASTPrinter/ASTPrinter#visitRelationalExpression (param $this i32) (param $expression i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 1
  i32.add
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:primaryOrLeft
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<void>@override
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 1
  i32.sub
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:right
  i32.const 0
  i32.ne
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
   i32.const 1
   i32.add
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
   local.get $expression
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:right
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<void>@override
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
   i32.const 1
   i32.sub
   call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#set:number
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:tree
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=36
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#getSpace
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  local.get $2
  call $Frontend/assembly/AST/ASTPrinter/ASTPrinter#get:number
  i32.const 10
  call $~lib/number/I32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=28
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 15504
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $expression
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  local.get $2
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:operator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  i32.const 0
  call $~lib/string/String.__ne
  if (result i32)
   local.get $expression
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $2
   call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:operator
  else
   i32.const 7728
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitEqualityExpression (param $this i32) (param $expression i32) (result f64)
  (local $left f64)
  (local $right f64)
  (local $4 i32)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#get:primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<f64>@override
  local.set $left
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#get:right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<f64>@override
  local.set $right
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 12304
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $left
   local.get $right
   f64.eq
   if (result f64)
    f64.const 1
   else
    f64.const 0
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 12272
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $left
   local.get $right
   f64.ne
   if (result f64)
    f64.const 1
   else
    f64.const 0
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  i32.const 16112
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/EqualityExpression/EqualityExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__concat
  i32.const 16176
  i32.const 37
  i32.const 9
  call $~lib/builtins/abort
  unreachable
 )
 (func $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitExpression (param $this i32) (param $expression i32) (result f64)
  (local $left f64)
  (local $right f64)
  (local $4 i32)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/Expression/Expression#get:primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<f64>@override
  local.set $left
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/Expression/Expression#get:right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<f64>@override
  local.set $right
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/Expression/Expression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 12144
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $left
   i64.reinterpret_f64
   i64.const 1
   i64.shl
   i64.const 2
   i64.sub
   i64.const -9007199254740994
   i64.le_u
   if (result f64)
    local.get $right
   else
    local.get $left
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/Expression/Expression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 12208
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $left
   i64.reinterpret_f64
   i64.const 1
   i64.shl
   i64.const 2
   i64.sub
   i64.const -9007199254740994
   i64.le_u
   if (result f64)
    local.get $left
   else
    local.get $right
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  i32.const 16112
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/Expression/Expression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__concat
  i32.const 16176
  i32.const 51
  i32.const 9
  call $~lib/builtins/abort
  unreachable
 )
 (func $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitMultiplicativeExpression (param $this i32) (param $expression i32) (result f64)
  (local $left f64)
  (local $right f64)
  (local $4 i32)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<f64>@override
  local.set $left
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<f64>@override
  local.set $right
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 96
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $left
   local.get $right
   f64.mul
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 128
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $left
   local.get $right
   f64.div
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 160
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $left
   local.get $right
   call $~lib/math/NativeMath.mod
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  i32.const 16112
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/MultiplicativeExpression/MultiplicativeExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__concat
  i32.const 16176
  i32.const 72
  i32.const 9
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/string/strtod (param $str i32) (result f64)
  (local $len i32)
  (local $ptr i32)
  (local $code i32)
  (local $sign f64)
  (local $savedPtr i32)
  (local $pointed i32)
  (local $consumed i32)
  (local $position i32)
  (local $x i64)
  (local $noDigits i32)
  (local $digit i32)
  (local $12 i32)
  (local $13 i32)
  (local $ptr|14 i32)
  (local $len|15 i32)
  (local $sign|16 i32)
  (local $magnitude i32)
  (local $code|18 i32)
  (local $digit|19 i32)
  (local $significand i64)
  (local $exp i32)
  (local $significandf f64)
  (local $n i32)
  (local $24 i32)
  (local $25 i32)
  (local $n|26 i32)
  (local $n|27 i32)
  (local $significand|28 i64)
  (local $exp|29 i32)
  (local $shift i64)
  (local $q i64)
  (local $r i64)
  (local $s i64)
  (local $b i64)
  (local $q|35 i64)
  (local $r|36 i64)
  (local $s|37 i64)
  (local $significand|38 i64)
  (local $exp|39 i32)
  (local $shift|40 i64)
  (local $a i64)
  (local $b|42 i32)
  (local $low i64)
  (local $high i64)
  (local $overflow i32)
  (local $space i32)
  (local $revspace i64)
  (local $a|48 i64)
  (local $b|49 i32)
  (local $low|50 i64)
  (local $high|51 i64)
  (local $overflow|52 i32)
  (local $space|53 i32)
  (local $revspace|54 i64)
  (local $55 i32)
  (local $56 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $str
  local.set $55
  global.get $~lib/memory/__stack_pointer
  local.get $55
  i32.store
  local.get $55
  call $~lib/string/String#get:length
  local.set $len
  local.get $len
  i32.eqz
  if
   f64.const nan:0x8000000000000
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  local.get $str
  local.set $ptr
  local.get $ptr
  i32.load16_u
  local.set $code
  f64.const 1
  local.set $sign
  loop $while-continue|0
   local.get $len
   if (result i32)
    local.get $code
    call $~lib/util/string/isSpace
   else
    i32.const 0
   end
   if
    local.get $ptr
    i32.const 2
    i32.add
    local.tee $ptr
    i32.load16_u
    local.set $code
    local.get $len
    i32.const 1
    i32.sub
    local.set $len
    br $while-continue|0
   end
  end
  local.get $len
  i32.eqz
  if
   f64.const nan:0x8000000000000
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  local.get $code
  i32.const 45
  i32.eq
  if
   local.get $len
   i32.const 1
   i32.sub
   local.tee $len
   i32.eqz
   if
    f64.const nan:0x8000000000000
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
   local.get $ptr
   i32.const 2
   i32.add
   local.tee $ptr
   i32.load16_u
   local.set $code
   f64.const -1
   local.set $sign
  else
   local.get $code
   i32.const 43
   i32.eq
   if
    local.get $len
    i32.const 1
    i32.sub
    local.tee $len
    i32.eqz
    if
     f64.const nan:0x8000000000000
     local.set $56
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $56
     return
    end
    local.get $ptr
    i32.const 2
    i32.add
    local.tee $ptr
    i32.load16_u
    local.set $code
   end
  end
  local.get $len
  i32.const 8
  i32.ge_s
  if (result i32)
   local.get $code
   i32.const 73
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $ptr
   i64.load
   i64.const 29555310648492105
   i64.eq
   if (result i32)
    local.get $ptr
    i64.load offset=8
    i64.const 34058970405077102
    i64.eq
   else
    i32.const 0
   end
   if
    f64.const inf
    local.get $sign
    f64.mul
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
   f64.const nan:0x8000000000000
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  local.get $code
  i32.const 46
  i32.ne
  if (result i32)
   local.get $code
   i32.const 48
   i32.sub
   i32.const 10
   i32.ge_u
  else
   i32.const 0
  end
  if
   f64.const nan:0x8000000000000
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  local.get $ptr
  local.set $savedPtr
  loop $while-continue|1
   local.get $code
   i32.const 48
   i32.eq
   if
    local.get $ptr
    i32.const 2
    i32.add
    local.tee $ptr
    i32.load16_u
    local.set $code
    local.get $len
    i32.const 1
    i32.sub
    local.set $len
    br $while-continue|1
   end
  end
  local.get $len
  i32.const 0
  i32.le_s
  if
   f64.const 0
   local.get $sign
   f64.mul
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  i32.const 0
  local.set $pointed
  i32.const 0
  local.set $consumed
  i32.const 0
  local.set $position
  i64.const 0
  local.set $x
  local.get $code
  i32.const 46
  i32.eq
  if
   local.get $savedPtr
   local.get $ptr
   i32.sub
   i32.eqz
   local.set $noDigits
   local.get $ptr
   i32.const 2
   i32.add
   local.set $ptr
   local.get $len
   i32.const 1
   i32.sub
   local.set $len
   local.get $len
   i32.eqz
   if (result i32)
    local.get $noDigits
   else
    i32.const 0
   end
   if
    f64.const nan:0x8000000000000
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
   i32.const 1
   local.set $pointed
   loop $for-loop|2
    local.get $ptr
    i32.load16_u
    local.tee $code
    i32.const 48
    i32.eq
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $len
     local.get $position
     i32.const 1
     i32.sub
     local.set $position
     local.get $ptr
     i32.const 2
     i32.add
     local.set $ptr
     br $for-loop|2
    end
   end
   local.get $len
   i32.const 0
   i32.le_s
   if
    f64.const 0
    local.get $sign
    f64.mul
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
   local.get $position
   i32.eqz
   if (result i32)
    local.get $noDigits
   else
    i32.const 0
   end
   if (result i32)
    local.get $code
    i32.const 48
    i32.sub
    i32.const 10
    i32.ge_u
   else
    i32.const 0
   end
   if
    f64.const nan:0x8000000000000
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
  end
  local.get $code
  i32.const 48
  i32.sub
  local.set $digit
  block $for-break3
   loop $for-loop|3
    local.get $digit
    i32.const 10
    i32.lt_u
    if (result i32)
     i32.const 1
    else
     local.get $code
     i32.const 46
     i32.eq
     if (result i32)
      local.get $pointed
      i32.eqz
     else
      i32.const 0
     end
    end
    if
     local.get $digit
     i32.const 10
     i32.lt_u
     if
      local.get $consumed
      i32.const 19
      i32.lt_s
      if (result i64)
       i64.const 10
       local.get $x
       i64.mul
       local.get $digit
       i64.extend_i32_u
       i64.add
      else
       local.get $x
       local.get $digit
       i32.eqz
       i32.eqz
       i64.extend_i32_u
       i64.or
      end
      local.set $x
      local.get $consumed
      i32.const 1
      i32.add
      local.set $consumed
     else
      local.get $consumed
      local.set $position
      i32.const 1
      local.set $pointed
     end
     local.get $len
     i32.const 1
     i32.sub
     local.tee $len
     i32.eqz
     if
      br $for-break3
     end
     local.get $ptr
     i32.const 2
     i32.add
     local.tee $ptr
     i32.load16_u
     local.set $code
     local.get $code
     i32.const 48
     i32.sub
     local.set $digit
     br $for-loop|3
    end
   end
  end
  local.get $pointed
  i32.eqz
  if
   local.get $consumed
   local.set $position
  end
  block $~lib/util/string/scientific|inlined.0 (result f64)
   local.get $x
   local.set $significand
   local.get $position
   i32.const 19
   local.tee $12
   local.get $consumed
   local.tee $13
   local.get $12
   local.get $13
   i32.lt_s
   select
   i32.sub
   block $~lib/util/string/parseExp|inlined.0 (result i32)
    local.get $ptr
    local.set $ptr|14
    local.get $len
    local.set $len|15
    i32.const 1
    local.set $sign|16
    i32.const 0
    local.set $magnitude
    local.get $ptr|14
    i32.load16_u
    local.set $code|18
    local.get $code|18
    i32.const 32
    i32.or
    i32.const 101
    i32.ne
    if
     i32.const 0
     br $~lib/util/string/parseExp|inlined.0
    end
    local.get $len|15
    i32.const 1
    i32.sub
    local.tee $len|15
    i32.eqz
    if
     i32.const 0
     br $~lib/util/string/parseExp|inlined.0
    end
    local.get $ptr|14
    i32.const 2
    i32.add
    local.tee $ptr|14
    i32.load16_u
    local.set $code|18
    local.get $code|18
    i32.const 45
    i32.eq
    if
     local.get $len|15
     i32.const 1
     i32.sub
     local.tee $len|15
     i32.eqz
     if
      i32.const 0
      br $~lib/util/string/parseExp|inlined.0
     end
     local.get $ptr|14
     i32.const 2
     i32.add
     local.tee $ptr|14
     i32.load16_u
     local.set $code|18
     i32.const -1
     local.set $sign|16
    else
     local.get $code|18
     i32.const 43
     i32.eq
     if
      local.get $len|15
      i32.const 1
      i32.sub
      local.tee $len|15
      i32.eqz
      if
       i32.const 0
       br $~lib/util/string/parseExp|inlined.0
      end
      local.get $ptr|14
      i32.const 2
      i32.add
      local.tee $ptr|14
      i32.load16_u
      local.set $code|18
     end
    end
    loop $while-continue|4
     local.get $code|18
     i32.const 48
     i32.eq
     if
      local.get $len|15
      i32.const 1
      i32.sub
      local.tee $len|15
      i32.eqz
      if
       i32.const 0
       br $~lib/util/string/parseExp|inlined.0
      end
      local.get $ptr|14
      i32.const 2
      i32.add
      local.tee $ptr|14
      i32.load16_u
      local.set $code|18
      br $while-continue|4
     end
    end
    local.get $code|18
    i32.const 48
    i32.sub
    local.set $digit|19
    loop $for-loop|5
     local.get $len|15
     if (result i32)
      local.get $digit|19
      i32.const 10
      i32.lt_u
     else
      i32.const 0
     end
     if
      local.get $magnitude
      i32.const 3200
      i32.ge_s
      if
       local.get $sign|16
       i32.const 3200
       i32.mul
       br $~lib/util/string/parseExp|inlined.0
      end
      i32.const 10
      local.get $magnitude
      i32.mul
      local.get $digit|19
      i32.add
      local.set $magnitude
      local.get $ptr|14
      i32.const 2
      i32.add
      local.tee $ptr|14
      i32.load16_u
      local.set $code|18
      local.get $len|15
      i32.const 1
      i32.sub
      local.set $len|15
      local.get $code|18
      i32.const 48
      i32.sub
      local.set $digit|19
      br $for-loop|5
     end
    end
    local.get $sign|16
    local.get $magnitude
    i32.mul
    br $~lib/util/string/parseExp|inlined.0
   end
   i32.add
   local.set $exp
   local.get $significand
   i64.const 0
   i64.ne
   i32.eqz
   if (result i32)
    i32.const 1
   else
    local.get $exp
    i32.const -342
    i32.lt_s
   end
   if
    f64.const 0
    br $~lib/util/string/scientific|inlined.0
   end
   local.get $exp
   i32.const 308
   i32.gt_s
   if
    f64.const inf
    br $~lib/util/string/scientific|inlined.0
   end
   local.get $significand
   f64.convert_i64_u
   local.set $significandf
   local.get $exp
   i32.eqz
   if
    local.get $significandf
    br $~lib/util/string/scientific|inlined.0
   end
   local.get $exp
   i32.const 22
   i32.gt_s
   if (result i32)
    local.get $exp
    i32.const 22
    i32.const 15
    i32.add
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $significandf
    block $~lib/util/string/pow10|inlined.0 (result f64)
     local.get $exp
     i32.const 22
     i32.sub
     local.set $n
     i32.const 16352
     local.get $n
     i32.const 3
     i32.shl
     i32.add
     f64.load
     br $~lib/util/string/pow10|inlined.0
    end
    f64.mul
    local.set $significandf
    i32.const 22
    local.set $exp
   end
   local.get $significand
   i64.const 9007199254740991
   i64.le_u
   if (result i32)
    local.get $exp
    local.tee $24
    i32.const 31
    i32.shr_s
    local.tee $25
    local.get $24
    i32.add
    local.get $25
    i32.xor
    i32.const 22
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $exp
    i32.const 0
    i32.gt_s
    if
     local.get $significandf
     block $~lib/util/string/pow10|inlined.1 (result f64)
      local.get $exp
      local.set $n|26
      i32.const 16352
      local.get $n|26
      i32.const 3
      i32.shl
      i32.add
      f64.load
      br $~lib/util/string/pow10|inlined.1
     end
     f64.mul
     br $~lib/util/string/scientific|inlined.0
    end
    local.get $significandf
    block $~lib/util/string/pow10|inlined.2 (result f64)
     i32.const 0
     local.get $exp
     i32.sub
     local.set $n|27
     i32.const 16352
     local.get $n|27
     i32.const 3
     i32.shl
     i32.add
     f64.load
     br $~lib/util/string/pow10|inlined.2
    end
    f64.div
    br $~lib/util/string/scientific|inlined.0
   else
    local.get $exp
    i32.const 0
    i32.lt_s
    if
     block $~lib/util/string/scaledown|inlined.0 (result f64)
      local.get $significand
      local.set $significand|28
      local.get $exp
      local.set $exp|29
      local.get $significand|28
      i64.clz
      local.set $shift
      local.get $significand|28
      local.get $shift
      i64.shl
      local.set $significand|28
      local.get $exp|29
      i64.extend_i32_s
      local.get $shift
      i64.sub
      local.set $shift
      loop $for-loop|6
       local.get $exp|29
       i32.const -14
       i32.le_s
       if
        local.get $significand|28
        i64.const 6103515625
        i64.div_u
        local.set $q
        local.get $significand|28
        i64.const 6103515625
        i64.rem_u
        local.set $r
        local.get $q
        i64.clz
        local.set $s
        local.get $q
        local.get $s
        i64.shl
        f64.const 0.00004294967296
        local.get $r
        local.get $s
        i64.const 18
        i64.sub
        i64.shl
        f64.convert_i64_u
        f64.mul
        f64.nearest
        i64.trunc_sat_f64_u
        i64.add
        local.set $significand|28
        local.get $shift
        local.get $s
        i64.sub
        local.set $shift
        local.get $exp|29
        i32.const 14
        i32.add
        local.set $exp|29
        br $for-loop|6
       end
      end
      i32.const 5
      i32.const 0
      local.get $exp|29
      i32.sub
      call $~lib/math/ipow32
      i64.extend_i32_s
      local.set $b
      local.get $significand|28
      local.get $b
      i64.div_u
      local.set $q|35
      local.get $significand|28
      local.get $b
      i64.rem_u
      local.set $r|36
      local.get $q|35
      i64.clz
      local.set $s|37
      local.get $q|35
      local.get $s|37
      i64.shl
      local.get $r|36
      f64.convert_i64_u
      i64.reinterpret_f64
      local.get $s|37
      i64.const 52
      i64.shl
      i64.add
      f64.reinterpret_i64
      local.get $b
      f64.convert_i64_u
      f64.div
      i64.trunc_sat_f64_u
      i64.add
      local.set $significand|28
      local.get $shift
      local.get $s|37
      i64.sub
      local.set $shift
      local.get $significand|28
      f64.convert_i64_u
      local.get $shift
      i32.wrap_i64
      call $~lib/math/NativeMath.scalbn
      br $~lib/util/string/scaledown|inlined.0
     end
     br $~lib/util/string/scientific|inlined.0
    else
     block $~lib/util/string/scaleup|inlined.0 (result f64)
      local.get $significand
      local.set $significand|38
      local.get $exp
      local.set $exp|39
      local.get $significand|38
      i64.ctz
      local.set $shift|40
      local.get $significand|38
      local.get $shift|40
      i64.shr_u
      local.set $significand|38
      local.get $shift|40
      local.get $exp|39
      i64.extend_i32_s
      i64.add
      local.set $shift|40
      local.get $shift|40
      global.set $~lib/util/string/__fixmulShift
      loop $for-loop|7
       local.get $exp|39
       i32.const 13
       i32.ge_s
       if
        block $~lib/util/string/fixmul|inlined.0 (result i64)
         local.get $significand|38
         local.set $a
         i32.const 1220703125
         local.set $b|42
         local.get $a
         i64.const 4294967295
         i64.and
         local.get $b|42
         i64.extend_i32_u
         i64.mul
         local.set $low
         local.get $a
         i64.const 32
         i64.shr_u
         local.get $b|42
         i64.extend_i32_u
         i64.mul
         local.get $low
         i64.const 32
         i64.shr_u
         i64.add
         local.set $high
         local.get $high
         i64.const 32
         i64.shr_u
         i32.wrap_i64
         local.set $overflow
         local.get $overflow
         i32.clz
         local.set $space
         i64.const 32
         local.get $space
         i64.extend_i32_u
         i64.sub
         local.set $revspace
         global.get $~lib/util/string/__fixmulShift
         local.get $revspace
         i64.add
         global.set $~lib/util/string/__fixmulShift
         local.get $high
         local.get $space
         i64.extend_i32_u
         i64.shl
         local.get $low
         i64.const 4294967295
         i64.and
         local.get $revspace
         i64.shr_u
         i64.or
         local.get $low
         local.get $space
         i64.extend_i32_u
         i64.shl
         i64.const 31
         i64.shr_u
         i64.const 1
         i64.and
         i64.add
         br $~lib/util/string/fixmul|inlined.0
        end
        local.set $significand|38
        local.get $exp|39
        i32.const 13
        i32.sub
        local.set $exp|39
        br $for-loop|7
       end
      end
      block $~lib/util/string/fixmul|inlined.1 (result i64)
       local.get $significand|38
       local.set $a|48
       i32.const 5
       local.get $exp|39
       call $~lib/math/ipow32
       local.set $b|49
       local.get $a|48
       i64.const 4294967295
       i64.and
       local.get $b|49
       i64.extend_i32_u
       i64.mul
       local.set $low|50
       local.get $a|48
       i64.const 32
       i64.shr_u
       local.get $b|49
       i64.extend_i32_u
       i64.mul
       local.get $low|50
       i64.const 32
       i64.shr_u
       i64.add
       local.set $high|51
       local.get $high|51
       i64.const 32
       i64.shr_u
       i32.wrap_i64
       local.set $overflow|52
       local.get $overflow|52
       i32.clz
       local.set $space|53
       i64.const 32
       local.get $space|53
       i64.extend_i32_u
       i64.sub
       local.set $revspace|54
       global.get $~lib/util/string/__fixmulShift
       local.get $revspace|54
       i64.add
       global.set $~lib/util/string/__fixmulShift
       local.get $high|51
       local.get $space|53
       i64.extend_i32_u
       i64.shl
       local.get $low|50
       i64.const 4294967295
       i64.and
       local.get $revspace|54
       i64.shr_u
       i64.or
       local.get $low|50
       local.get $space|53
       i64.extend_i32_u
       i64.shl
       i64.const 31
       i64.shr_u
       i64.const 1
       i64.and
       i64.add
       br $~lib/util/string/fixmul|inlined.1
      end
      local.set $significand|38
      global.get $~lib/util/string/__fixmulShift
      local.set $shift|40
      local.get $significand|38
      f64.convert_i64_u
      local.get $shift|40
      i32.wrap_i64
      call $~lib/math/NativeMath.scalbn
      br $~lib/util/string/scaleup|inlined.0
     end
     br $~lib/util/string/scientific|inlined.0
    end
    unreachable
   end
   unreachable
  end
  local.get $sign
  f64.copysign
  local.set $56
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $56
  return
 )
 (func $~lib/string/parseFloat (param $str i32) (result f64)
  (local $1 i32)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/util/string/strtod
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitNumber (param $this i32) (param $term i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $term
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $Frontend/assembly/AST/Expressions/Terms/Num/Num#get:value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/string/parseFloat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitBinaryExpression (param $this i32) (param $expression i32) (result f64)
  (local $left f64)
  (local $right f64)
  (local $4 i32)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#get:primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<f64>@override
  local.set $left
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#get:right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<f64>@override
  local.set $right
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 32
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $left
   local.get $right
   f64.add
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 64
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $left
   local.get $right
   f64.sub
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  i32.const 16112
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/BinaryExpression/BinaryExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__concat
  i32.const 16176
  i32.const 23
  i32.const 9
  call $~lib/builtins/abort
  unreachable
 )
 (func $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitUnaryExpression (param $this i32) (param $expression i32) (result f64)
  (local $right f64)
  (local $3 i32)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $expression
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#get:primaryOrRight
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<f64>@override
  local.set $right
  local.get $expression
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#get:operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 4800
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $right
   f64.const 0
   f64.eq
   if (result f64)
    f64.const 1
   else
    f64.const 0
   end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $expression
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#get:operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 64
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $right
   f64.neg
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 16112
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $expression
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $Frontend/assembly/AST/Expressions/UnaryExpression/UnaryExpression#get:operator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String.__concat
  i32.const 16176
  i32.const 114
  i32.const 9
  call $~lib/builtins/abort
  unreachable
 )
 (func $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitTerm (param $this i32) (param $term i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  i32.const 7728
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $term
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $2
  call $Frontend/assembly/AST/Expressions/Terms/Term/Term#get:value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 16560
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String.__concat
  i32.const 16176
  i32.const 100
  i32.const 9
  call $~lib/builtins/abort
  unreachable
 )
 (func $Frontend/assembly/Interpreter/Interpreter/Interpreter#visitRelationalExpression (param $this i32) (param $expression i32) (result f64)
  (local $left f64)
  (local $right f64)
  (local $4 i32)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:primaryOrLeft
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<f64>@override
  local.set $left
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:right
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $Frontend/assembly/AST/AbstractSyntaxNode/AbstractSyntaxNode#accept<f64>@override
  local.set $right
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 12336
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $left
   local.get $right
   f64.lt
   if (result f64)
    f64.const 1
   else
    f64.const 0
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 12368
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $left
   local.get $right
   f64.le
   if (result f64)
    f64.const 1
   else
    f64.const 0
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 12400
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $left
   local.get $right
   f64.gt
   if (result f64)
    f64.const 1
   else
    f64.const 0
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 12432
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $left
   local.get $right
   f64.ge
   if (result f64)
    f64.const 1
   else
    f64.const 0
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  i32.const 16112
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $Frontend/assembly/AST/Expressions/RelationalExpression/RelationalExpression#get:operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__concat
  i32.const 16176
  i32.const 96
  i32.const 9
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<~lib/string/String>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<~lib/string/String>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<~lib/string/String>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#__visit" (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  call $"~lib/map/Map<~lib/string/String,i32>#get:buckets"
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  call $"~lib/map/Map<~lib/string/String,i32>#get:entries"
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  call $"~lib/map/Map<~lib/string/String,i32>#get:entriesOffset"
  block $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.6" (result i32)
   i32.const 12
   br $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.6"
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $"~lib/map/MapEntry<~lib/string/String,i32>#get:taggedNext"
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $"~lib/map/MapEntry<~lib/string/String,i32>#get:key"
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 0
     drop
    end
    local.get $cur
    block $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.7" (result i32)
     i32.const 12
     br $"~lib/map/ENTRY_SIZE<~lib/string/String,i32>|inlined.7"
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<Frontend/assembly/Lexer/Token/Token>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 0
  drop
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/array/Array<i32>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $this i32) (param $length i32) (result i32)
  (local $buffer i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $length
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 7040
   i32.const 7088
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $length
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/rt/__newArray (param $length i32) (param $alignLog2 i32) (param $id i32) (param $data i32) (result i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $array i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $length
  local.get $alignLog2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  local.get $data
  call $~lib/rt/__newBuffer
  local.tee $buffer
  i32.store
  i32.const 16
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $array
  local.get $array
  local.get $buffer
  i32.store
  local.get $array
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $array
  local.get $buffer
  i32.store offset=4
  local.get $array
  local.get $bufferSize
  i32.store offset=8
  local.get $array
  local.get $length
  i32.store offset=12
  local.get $array
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/util/number/itoa32 (param $value i32) (param $radix i32) (result i32)
  (local $sign i32)
  (local $out i32)
  (local $decimals i32)
  (local $buffer i32)
  (local $num i32)
  (local $offset i32)
  (local $decimals|8 i32)
  (local $buffer|9 i32)
  (local $num|10 i32)
  (local $offset|11 i32)
  (local $val32 i32)
  (local $decimals|13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $radix
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $radix
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 10368
   i32.const 10496
   i32.const 373
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  i32.eqz
  if
   i32.const 7760
   local.set $14
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $14
   return
  end
  local.get $value
  i32.const 31
  i32.shr_u
  i32.const 1
  i32.shl
  local.set $sign
  local.get $sign
  if
   i32.const 0
   local.get $value
   i32.sub
   local.set $value
  end
  local.get $radix
  i32.const 10
  i32.eq
  if
   local.get $value
   call $~lib/util/number/decimalCount32
   local.set $decimals
   global.get $~lib/memory/__stack_pointer
   local.get $decimals
   i32.const 1
   i32.shl
   local.get $sign
   i32.add
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $out
   i32.store
   local.get $out
   local.get $sign
   i32.add
   local.set $buffer
   local.get $value
   local.set $num
   local.get $decimals
   local.set $offset
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $buffer
   local.get $num
   local.get $offset
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $radix
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $value
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $decimals|8
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|8
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store
    local.get $out
    local.get $sign
    i32.add
    local.set $buffer|9
    local.get $value
    local.set $num|10
    local.get $decimals|8
    local.set $offset|11
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer|9
    local.get $num|10
    i64.extend_i32_u
    local.get $offset|11
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $value
    local.set $val32
    local.get $val32
    i64.extend_i32_u
    local.get $radix
    call $~lib/util/number/ulog_base
    local.set $decimals|13
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|13
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store
    local.get $out
    local.get $sign
    i32.add
    local.get $val32
    i64.extend_i32_u
    local.get $decimals|13
    local.get $radix
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $sign
  if
   local.get $out
   i32.const 45
   i32.store16
  end
  local.get $out
  local.set $14
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $14
  return
 )
 (func $~lib/object/Object#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/util/number/dtoa (param $value f64) (result i32)
  (local $size i32)
  (local $result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $value
  f64.const 0
  f64.eq
  if
   i32.const 13968
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $value
  local.get $value
  f64.sub
  f64.const 0
  f64.eq
  i32.eqz
  if
   local.get $value
   local.get $value
   f64.ne
   if
    i32.const 14000
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   i32.const 14032
   i32.const 14080
   local.get $value
   f64.const 0
   f64.lt
   select
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 14112
  local.get $value
  call $~lib/util/number/dtoa_core
  i32.const 1
  i32.shl
  local.set $size
  global.get $~lib/memory/__stack_pointer
  local.get $size
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store
  local.get $result
  i32.const 14112
  local.get $size
  memory.copy
  local.get $result
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $export:Frontend/assembly/calculator/calculate (param $0 f64) (param $1 f64) (param $2 i32) (result f64)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $0
  local.get $1
  local.get $2
  call $Frontend/assembly/calculator/calculate
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:Frontend/assembly/Index/calculateViaLanguage (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $Frontend/assembly/Index/calculateViaLanguage
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
)
